Place request:
- ho = 'http://'+request.env['HTTP_HOST']
- dx = request.env['HTTP_HOST']
- cop = dx.index(':')
- dx = dx[0..cop-1] unless (cop.nil?)
- dx = 'http://' + dx
%a{:href=>dx+'/auth/redir.cgi?url='+ho+'/request/hold/xxxx/'+"/"+@id}Hold
%a{:href=>dx+'/auth/redir.cgi?url='+ho+'/request/recall/xxxx/'+"/"+@id} Recall
%a{:href=>dx+'/auth/redir.cgi?url='+ho+'/request/callslip/xxxx/'+"/"+@id} Deliver

- add_display_elements(@holdings['condensed_holdings_full']).listify.reject { |x| x['location_name'].to_s.strip == "Online"}.each do |entry|

  .holding{:class => alternating_line}
    .location_box
      .location= entry['location_name']
    .hours= entry['hours']

    .call_number= entry['call_number']

    - entry['copies'].each do |copy|
      .group

        - unless copy['temp_locations'].nil?
          - copy['temp_locations'].each do |t|
            .message= t
        - ['orders','summary_holdings','supplements','indexes','notes','reproduction_note','current_issues'].each do |type|
          - unless copy[type].nil?
            .message= copy[type]
        - copy['items'].each do |item|
          .status
            - message, details = item
            - if details['status'] == 'available'
              %i.icon-ok
            - else
              %i.icon-time
            = message unless message.to_str == 'Status unknown'
            - if details['count'] >1
              (#{details['count']} copies)
    - unless (svc_links = service_links(entry['services'], @id, :target => "_blank")).empty?
      .services
        .label= "Request: "
        - svc_links.each do |link|
          .service= link
