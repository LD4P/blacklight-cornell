---
http_interactions:
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=1001&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 16:27:18 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 16:26:00 GMT
      Etag:
      - '"ZjZlNjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2495'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 16:27:18 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=1001&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 16:27:23 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 16:27:10 GMT
      Etag:
      - '"N2I1NzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2495'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 16:27:23 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=9305118&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 16:38:56 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 16:38:35 GMT
      Etag:
      - '"YmJlMzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2516'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 16:38:56 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=9305118&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 16:39:01 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 16:38:35 GMT
      Etag:
      - '"YmY1NzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2516'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 16:39:01 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=1002&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 16:49:48 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 16:49:41 GMT
      Etag:
      - '"ZDFlNjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2147'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 16:49:48 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=1002&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 16:49:52 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 16:49:12 GMT
      Etag:
      - '"MTAxMzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2147'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 16:49:52 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=9496646&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 17:35:17 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 17:33:55 GMT
      Etag:
      - '"MTkxNjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3838'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 17:35:18 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=9496646&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 17:35:24 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 17:34:41 GMT
      Etag:
      - '"NmUzNzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3838'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 17:35:24 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=3261564&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 18:00:18 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 17:59:10 GMT
      Etag:
      - '"MTU5MzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2648'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:00:19 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=3261564&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 18:00:23 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 17:59:10 GMT
      Etag:
      - '"MTU5MzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2648'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:00:23 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=10055679&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 18:02:59 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 18:01:14 GMT
      Etag:
      - '"ZDMzNzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3625'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:03:00 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=10055679&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 18:03:04 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 18:01:14 GMT
      Etag:
      - '"ZDU5MzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3625'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:03:04 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=edismax&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&fl=*&mm=1&q=(%22cheese%20worms%22)%20OR%20phrase:%22cheese%20worms%22&qt=search&rows=20&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 18:05:51 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 18:01:14 GMT
      Etag:
      - '"ZDMzNzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3872'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:05:53 GMT
- request:
    method: get
    uri: http://www.worldcat.org/webservices/catalog/search/sru?maximumRecords=1&query=srw.kw%20=%20%22cheese%22%20AND%20srw.kw%20=%20%22worms%22&recordSchema=info:srw/schema/1/dc&servicelevel=full&wskey=ydY1RXi9Lx7wmUjJVYi3QlCwUEXxDmJEO5Lrvwf9nLX9vn9dnX3OeHseVTPpxjjTWajSn3r4L70jpUW4
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - "*/*"
      Date:
      - Thu, 18 Jul 2019 18:05:54 GMT
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 18:05:54 GMT
      Server:
      - Apache
      Content-Length:
      - '3914'
      Content-Type:
      - text/xml;charset=utf-8
    body:
      encoding: UTF-8
      string: |
        <?xml version="1.0" encoding="UTF-8" standalone="no"?>
        <?xml-stylesheet type='text/xsl' href='/webservices/catalog/xsl/searchRetrieveResponse.xsl'?>

        <searchRetrieveResponse xmlns="http://www.loc.gov/zing/srw/" xmlns:oclcterms="http://purl.org/oclc/terms/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:diag="http://www.loc.gov/zing/srw/diagnostic/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <version>1.1</version>
        <numberOfRecords>100</numberOfRecords>
        <records>
        <record>
        <recordSchema>info:srw/schema/1/dc</recordSchema>
        <recordPacking>xml</recordPacking>
        <recordData>
        <oclcdcs>
        <dc:creator>Arrogant Worms (Musical group)</dc:creator>
        <dc:date>[1995]</dc:date>
        <dc:description>On container spine: AW-777-2.</dc:description>
        <dc:description>Title from container insert.</dc:description>
        <dc:description>Satirical songs and monologue.</dc:description>
        <dc:description>Compact disc.</dc:description>
        <dc:description>Program notes on container insert.</dc:description>
        <dc:description>Arrogant Worms: Mike McCormick, Chris Patterson, Trevor Strong and John Whytock.</dc:description>
        <dc:description>Recorded at Studio 29, Campbellford, Ont., Aug. 1995.</dc:description>
        <dc:description>Sam, the guy from 'Quincy' (1:52) -- Kill the dog next door (3:27) -- Lonely lab of broken hearts (5:04) -- Sex, drugs &amp; RRSPs (2:35) -- History is made by stupid people (2:35) -- My voice is changing (2:16) -- Proud to be a banker (2:20) -- Horizon (3:24) -- The happy happy birthday song (1:54) -- Dangerous (2:46) -- The Mountie song (3:22) -- Dog food woman (2:45) -- Mounted animal nature trail (2:08) -- A real letter from a real yahoo (0:52) -- Let there be guns (2:08).</dc:description>
        <dc:format>1 audio disc (41 min.) : digital ; 4 3/4 in.</dc:format>
        <dc:identifier>779513077723</dc:identifier>
        <dc:language xsi:type="http://purl.org/dc/terms/ISO639-2">eng</dc:language>
        <dc:publisher>Arrogant Worms </dc:publisher>
        <dc:publisher>Festival Distribution</dc:publisher>
        <dc:relation>Sex, drugs and RRSPs.</dc:relation>
        <dc:subject xsi:type="http://purl.org/dc/terms/DDC">784.68</dc:subject>
        <dc:subject xsi:type="http://purl.org/dc/terms/LCC">M1630.18 .A77 C47 1995</dc:subject>
        <dc:subject xsi:type="http://purl.org/dc/terms/LCSH">Satirical songs.</dc:subject>
        <dc:subject xsi:type="http://purl.org/dc/terms/LCSH">Satirical songs--Canada.</dc:subject>
        <dc:subject xsi:type="http://purl.org/dc/terms/LCSH">Humorous songs.</dc:subject>
        <dc:subject xsi:type="http://purl.org/dc/terms/LCSH">Humorous songs--Canada.</dc:subject>
        <dc:subject xsi:type="http://purl.org/dc/terms/LCSH">Canadian wit and humor.</dc:subject>
        <dc:title>C'est cheese </dc:title>
        <dc:title>Say cheese</dc:title>
        <dc:title>It is cheese</dc:title>
        <dc:title>On disc surface: Cheese fromage</dc:title>
        <dc:title>Cheese fromage</dc:title>
        <dc:type>Sound</dc:type>
        <oclcterms:recordContentSource>VP@</oclcterms:recordContentSource>
        <oclcterms:recordCreationDate xsi:type="http://purl.org/oclc/terms/marc008date">971215</oclcterms:recordCreationDate>
        <oclcterms:recordIdentifier>49655443</oclcterms:recordIdentifier>
        <oclcterms:languageOfCataloging xsi:type="http://purl.org/oclc/terms/iso639-2b">eng</oclcterms:languageOfCataloging>
        <oclcterms:recordTranscribingAgency>VP@</oclcterms:recordTranscribingAgency>
        </oclcdcs>
        </recordData>
        </record>
        </records>
        <nextRecordPosition>2</nextRecordPosition>
        <resultSetIdleTime/>
        <echoedSearchRetrieveRequest xmlns:srw="http://www.loc.gov/zing/srw/">
        <version>1.1</version>
        <query>srw.kw = "cheese" AND srw.kw = "worms"</query>
        <maximumRecords>1</maximumRecords>
        <recordSchema>info:srw/schema/1/dc</recordSchema>
        <recordPacking>xml</recordPacking>
        <startRecord>1</startRecord>
        <sortKeys>relevance</sortKeys>
        <wskey>ydY1RXi9Lx7wmUjJVYi3QlCwUEXxDmJEO5Lrvwf9nLX9vn9dnX3OeHseVTPpxjjTWajSn3r4L70jpUW4</wskey>
        <servicelevel>full</servicelevel>
        </echoedSearchRetrieveRequest>
        </searchRetrieveResponse>
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:05:54 GMT
- request:
    method: get
    uri: http://api.summon.serialssolutions.com/2.0.0/search?s.cmd=setHoldingsOnly(true)&s.he=__BENTO_HL_END__&s.hs=__BENTO_HL_START__&s.ps=1&s.q=cheese%20worms
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - application/json
      Date:
      - Thu, 18 Jul 2019 18:05:54 GMT
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf8
      X-Summon-Date:
      - Thu, 18 Jul 2019 18:05:54 GMT
      Authorization:
      - Summon cornell;xgEUjgzPFvFMhr1otovOKxlp1sc=
      Host:
      - api.summon.serialssolutions.com:80
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 18 Jul 2019 18:05:54 GMT
      Datacenter:
      - DFW1
    body:
      encoding: UTF-8
      string: '{"version": "2.0.0","sessionId": "fa37fc5d-bd59-400c-a6db-2cfadc0474a3","elapsedQueryTime":
        169,"queryTime": 152,"totalRequestTime": 186,"pageCount": 114250,"recordCount":
        114250,"query": {"queryString": "s.fvf=ContentType%2CNewspaper+Article%2Ct&s.hs=__BENTO_HL_START__&s.secure=f&s.dailyCatalog=t&s.q=cheese+worms&s.ho=t&s.ps=1&s.he=__BENTO_HL_END__","pageNumber":
        1,"pageSize": 1,"highlightStartDelimiter": "__BENTO_HL_START__","highlightEndDelimiter":
        "__BENTO_HL_END__","isHoldingsOnlyEnabled": true,"textQueries": [{"textQuery":
        "cheese worms","removeCommand": "removeTextQuery(cheese worms)"}],"searchTerms":
        [],"textFilters": [],"rangeFilters": [],"facetValueFilters": [{"fieldName":
        "ContentType","value": "Newspaper Article","isNegated": true,"removeCommand":
        "removeFacetValueFilter(ContentType,Newspaper Article)","negateCommand": "negateFacetValueFilter(ContentType,Newspaper
        Article)"}],"inclusiveFacetValueFilters": [],"facetValueGroupFilters": [],"facetFields":
        [],"rangeFacetFields": [],"sort": []},"facetFields": [],"rangeFacetFields":
        [],"didYouMeanSuggestions": [],"recommendationLists": {},"documents": [{"hasFullText":
        true,"isFullTextHit": false,"isPrint": false,"inHoldings": true,"openUrl":
        "ctx_ver=Z39.88-2004&ctx_enc=info%3Aofi%2Fenc%3AUTF-8&rfr_id=info%3Asid%2Fsummon.serialssolutions.com&rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&rft.genre=book&rft.title=Cement%2C+Earthworms%2C+and+Cheese+Factories+%3A+Religion+and+Community+Development+in+Rural+Ecuador&rft.au=DeTemple%2C+Jill&rft.date=2012-11-15&rft.pub=University+of+Notre+Dame+Press&rft.isbn=9780268026110&rft.externalDocID=EBC3441114","link":
        "http://cornell.summon.serialssolutions.com/2.0.0/link/0/eLvHCXMwpV1LS8NAEF6qRfHkE6wvFvHYlDTZTaIXoTGhgtRXfZ2W3ewuFaVC0yr-HX-ps-mmREU8GHJIwuTFTGbnm3wzi9CB5n6oMyodIekhABQ3c3ggheNlmsvMJSHhRcv8C3p5R25Sel9D5WyjxR9CS0tslb5x9u8U8Jjhflh2ZWvK_D-W1hsT-GzJHKrDgNcGi6-np0n8MMu3wNBIPUINMPOCyCCPNrENeMp9k__g-RM4F3A84_xrNuSHry4GoHQZlQmxKe1kxl6aPmqFll3p7_jvt1xBdWVqIVZRTQ3X0GJJX15HH3GRVWziBCxvwFgn6fXPWfeMXfchQGbsDSLhytGkd8JY3sR8KPFP4XigVK6-i-O0mAkIgDw-wuWdiyvYmpbxO64wnvDjEF-ZFiI4ySZcvow20G2a9OOuY2d7cDiBqAGwrOl96LtSaC2kp_xIEK50EBDX164IFImCQIuQU1PV4gqIvHQA5wG-93XW9rW_ibB0FQGPQjJYCXcz4XFNfTDTkJIQthtov6Jh9vpcqCJnpRmEsEQNhCuKZ7-LFHpjVW2ypBNbHW39LbKNliD-8kxpY5vuoPnxaKJ20YI1gD1rwp8VfwDs","ExternalDocumentID":
        ["9780268077778","EBC3441114"],"IngestDate": ["Thu Jun 27 17:46:00 EDT 2019","Tue
        Jul 09 01:23:26 EDT 2019","Tue Jun 05 23:31:36 EDT 2018"],"PublicationDate_xml":
        [{"year": "2012","text": "2012"}],"Score": ["45.66261"],"DatabaseTitleList":
        ["",""],"URI": ["http://muse.jhu.edu/books/9780268077778","https://ebookcentral.proquest.com/lib/[SITE_ID]/detail.action?docID=3441114","http://www.vlebooks.com/vleweb/product/openreader?id=none&isbn=9780268077778&uid=none"],"PublicationPlace_xml":
        [{"name": "Notre Dame"},{"name": "Notre Dame IN"}],"PublicationPlace": ["Notre
        Dame"],"Publisher_xml": [{"name": "University of Notre Dame Press"}],"ID":
        ["FETCH-LOGICAL-a48188-1377930dbffbd2e38b4aef66403f0b6e4866fb7a506860b172f61884693fc13f3"],"Publisher":
        ["University of Notre Dame Press"],"AbstractList": ["Cement, Earthworms, and
        Cheese Factories examines the ways in which religion and community development
        are closely intertwined in a rural part of contemporary Latin America. Using
        historical, documentary, and ethnographic data collected over more than a
        decade as an aid worker and as a researcher in central Ecuador, Jill DeTemple
        examines the forces that have led to this entanglement of religion and development
        and the ways in which rural Ecuadorians, as well as development and religious
        personnel, negotiate these complicated relationships. Technical innovations
        have been connected to religious change since the time of the Inca conquest,
        and Ecuadorians have created defensive strategies for managing such connections.
        Although most analyses of development either tend to ignore the genuinely
        religious roots of development or conflate development with religion itself,
        these strategies are part of a larger negotiation of progress and its meaning
        in twenty-first-century Ecuador. DeTemple focuses on three development agenciesa
        liberationist Catholic women''s group, a municipal unit dedicated to agriculture,
        and evangelical Protestant missionaries engaged in education and medical workto
        demonstrate that in some instances Ecuadorians encourage a hybridity of religion
        and development, while in other cases they break up such hybridities into
        their component parts, often to the consternation of those with whom religious
        and development discourse originate. This management of hybrids reveals Ecuadorians
        as agents who produce and reform modernities in ways often unrecognized by
        development scholars, aid workers, or missionaries, and also reveals that
        an appreciation of religious belief is essential to a full understanding of
        diverse aspects of daily life.","Cement, Earthworms, and Cheese Factories
        examines the ways in which religion and community development are closely
        intertwined in a rural part of contemporary Latin America. Using historical,
        documentary, and ethnographic data collected over more than a decade as an
        aid worker and as a researcher in central Ecuador, Jill DeTemple examines
        the forces that have led to this entanglement of religion and development
        and the ways in which rural Ecuadorians, as well as development and religious
        personnel, negotiate these complicated relationships. Technical innovations
        have been connected to religious change since the time of the Inca conquest,
        and Ecuadorians have created defensive strategies for managing such connections.
        Although most analyses of development either tend to ignore the genuinely
        religious roots of development or conflate development with religion itself,
        these strategies are part of a larger negotiation of progress and its meaning
        in twenty-first-century Ecuador. DeTemple focuses on three development agencies-a
        liberationist Catholic women''s group, a municipal unit dedicated to agriculture,
        and evangelical Protestant missionaries engaged in education and medical work-to
        demonstrate that in some instances Ecuadorians encourage a hybridity of religion
        and development, while in other cases they break up such hybridities into
        their component parts, often to the consternation of those with whom religious
        and development discourse originate. This management of hybrids reveals Ecuadorians
        as agents who produce and reform modernities in ways often unrecognized by
        development scholars, aid workers, or missionaries, and also reveals that
        an appreciation of religious belief is essential to a full understanding of
        diverse aspects of daily life."],"Language": ["English"],"Author": ["DeTemple,
        Jill"],"PublicationCentury": ["2000"],"PublicationDecade": ["2010"],"IsScholarly":
        ["false"],"Snippet": ["...Cement, Earth__BENTO_HL_START__worm__BENTO_HL_END__s,
        and __BENTO_HL_START__Cheese__BENTO_HL_END__ Factories examines the ways in
        which religion and community development are closely intertwined in a rural
        part of contemporary Latin America..."],"ProviderPackageCode": ["38."],"LCCallNum_Ident":
        ["BR690.D48 2012"],"SubjectTerms": ["Church work with the poor - Ecuador","Church
        work with the poor","Community development"],"Discipline": ["Religion"],"ContentType":
        ["eBook"],"SourceType": ["Aggregation Database","Publisher"],"Author_xml":
        [{"sequence": "1","fullname": "DeTemple, Jill"}],"ISBN": ["9780268026110","0268026114"],"EISBN":
        ["9780268077778","0268077770"],"Abstract": ["Cement, Earthworms, and Cheese
        Factories examines the ways in which religion and community development are
        closely intertwined in a rural part of contemporary Latin America. Using historical,
        documentary, and ethnographic data collected over more than a decade as an
        aid worker and as a researcher in central Ecuador, Jill DeTemple examines
        the forces that have led to this entanglement of religion and development
        and the ways in which rural Ecuadorians, as well as development and religious
        personnel, negotiate these complicated relationships. Technical innovations
        have been connected to religious change since the time of the Inca conquest,
        and Ecuadorians have created defensive strategies for managing such connections.
        Although most analyses of development either tend to ignore the genuinely
        religious roots of development or conflate development with religion itself,
        these strategies are part of a larger negotiation of progress and its meaning
        in twenty-first-century Ecuador. DeTemple focuses on three development agenciesa
        liberationist Catholic women''s group, a municipal unit dedicated to agriculture,
        and evangelical Protestant missionaries engaged in education and medical workto
        demonstrate that in some instances Ecuadorians encourage a hybridity of religion
        and development, while in other cases they break up such hybridities into
        their component parts, often to the consternation of those with whom religious
        and development discourse originate. This management of hybrids reveals Ecuadorians
        as agents who produce and reform modernities in ways often unrecognized by
        development scholars, aid workers, or missionaries, and also reveals that
        an appreciation of religious belief is essential to a full understanding of
        diverse aspects of daily life."],"PublicationYear": ["2012"],"SourceID": ["askewsholts","proquest","projectmuse"],"SSID":
        ["ssj0000755245"],"TableOfContents": ["Cover Title Page, Copyright Contents
        Acknowledgments Introduction 1. Things Both Good and Bad: Religion and Development
        in Latin American Contexts 2. La Lucha: Negotiating Desire, Community, Religion,
        and Progress in San Marcos 3. Pedagogies of Power: Alternative Developments
        4. Good Housekeeping: Negotiating Religion and Development at Home 5. Cement
        Things: Imagining Infrastructure, Community, and Progress 6. Spiritual Cardiology:
        Wholeness, Becoming, and (Dis)Integration Conclusion: Trumans Earthworms Notes
        Bibliography Index","Intro -- Contents -- Acknowledgments -- Introduction
        -- Chapter 1: “Things Both Good and Bad” -- Chapter 2: La Lucha -- Chapter
        3: Pedagogies of Power -- Chapter 4: Good Housekeeping -- Chapter 5: Cement
        Things -- Chapter 6: Spiritual Cardiology -- Conclusion -- Notes -- Bibliography
        -- Index -- ."],"Title": ["Cement, Earth__BENTO_HL_START__worm__BENTO_HL_END__s,
        and __BENTO_HL_START__Cheese__BENTO_HL_END__ Factories"],"PublicationDate":
        ["2012","20121115","2012-11-15"],"PageCount": ["224"],"OCLC": ["820853345"],"Subtitle":
        ["Religion and Community Development in Rural Ecuador"],"DEWEY": ["278.66/083"],"MergedId":
        ["FETCHMERGED-LOGICAL-a48188-1377930dbffbd2e38b4aef66403f0b6e4866fb7a506860b172f61884693fc13f3"],"IsPeerReviewed":
        ["false"],"thumbnail_m": ["http://cornell.summon.serialssolutions.com/2.0.0/image/custom?url=https%3A%2F%2Fwww.askewsandholts.com%2Fuploads%2Fproduct%2Fimages%2Ffull%2F7778%2F9780268077778.jpg"],"LinkModel":
        ["DirectLink"],"IEDL.DBID": ["FIECY"],"BookMark": ["ePnHCXMwbV1fC8IgEDciKFbfYW8VLHA7dT43NvoA0ato8wjqzejzd7qNEeSLCD8PRLh_evdbDE1tKqV5TUMv5zU566k7gI68kABCrqdkCNktWQm5YYcmJcWKvLWRTJzctlDkFFLnzcP74PMukdBQDLllK6T78btxztita6_N5TRSCJysIFNEAVJsqAe8d4iurzxoJ6xHpQQH5E55oZVCV1sZSyW4I3OOivZR0Ah4LwEhY8dBsA1PUjukkt7BfF7pKTOYn6MSdj9gJ61uEmz8ZmnacwPkfZSpRGhGTvkW81fmF79dXG8"],"ParticipantIDs":
        ["askewsholts_vlebooks_9780268077778","proquest_ebookcentral_EBC3441114","projectmuse_ebooks_9780268077778"]}],"rollups":
        {"image": {},"reference": {},"newspaper": {}}}'
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:05:54 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=edismax&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&fl=*&mm=1&q=(title:Zombies%20AND%20author:Charlier)%20&qt=search&rows=20&search_field=advanced&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 18:48:22 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 18:45:29 GMT
      Etag:
      - '"MjQ3NzQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3361'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:48:22 GMT
- request:
    method: get
    uri: http://www.worldcat.org/webservices/catalog/search/sru?maximumRecords=1&query=srw.kw%20=%20%22authorcreator%22%20AND%20srw.kw%20=%20%22=%22%20AND%20srw.kw%20=%20%22Charlier%22&recordSchema=info:srw/schema/1/dc&servicelevel=full&wskey=ydY1RXi9Lx7wmUjJVYi3QlCwUEXxDmJEO5Lrvwf9nLX9vn9dnX3OeHseVTPpxjjTWajSn3r4L70jpUW4
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - "*/*"
      Date:
      - Thu, 18 Jul 2019 18:48:22 GMT
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 18:48:22 GMT
      Server:
      - Apache
      Content-Length:
      - '891'
      Content-Type:
      - text/xml;charset=utf-8
    body:
      encoding: UTF-8
      string: |
        <?xml version="1.0" ?><?xml-stylesheet type="text/xsl" href="/webservices/catalog/xsl/searchRetrieveResponse.xsl"?><searchRetrieveResponse xmlns="http://www.loc.gov/zing/srw/">
        <version>1.1</version>
        <numberOfRecords>0</numberOfRecords>
        <diagnostics><diagnostic xmlns="http://www.loc.gov/zing/srw/diagnostic/">
          <uri>info:srw/diagnostic/1/27</uri>
          <details>srw.kw</details>
          <message>The index [srw.kw] did not include a searchable value</message>
          </diagnostic>
        </diagnostics>
        <echoedSearchRetrieveRequest>
        <maximumRecords>1</maximumRecords><query>srw.kw = &quot;authorcreator&quot; AND srw.kw = &quot;=&quot; AND srw.kw = &quot;Charlier&quot;</query><recordSchema>info:srw/schema/1/dc</recordSchema><servicelevel>full</servicelevel><wskey>ydY1RXi9Lx7wmUjJVYi3QlCwUEXxDmJEO5Lrvwf9nLX9vn9dnX3OeHseVTPpxjjTWajSn3r4L70jpUW4</wskey></echoedSearchRetrieveRequest>
        </searchRetrieveResponse>
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:48:22 GMT
- request:
    method: get
    uri: http://api.summon.serialssolutions.com/2.0.0/search?s.cmd=setHoldingsOnly(true)&s.he=__BENTO_HL_END__&s.hs=__BENTO_HL_START__&s.ps=1&s.q=authorcreator%20=%20Charlier
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - application/json
      Date:
      - Thu, 18 Jul 2019 18:48:22 GMT
      Content-Type:
      - application/x-www-form-urlencoded; charset=utf8
      X-Summon-Date:
      - Thu, 18 Jul 2019 18:48:22 GMT
      Authorization:
      - Summon cornell;goq7vDmUj6lQoWX5Z05ubqWE0No=
      Host:
      - api.summon.serialssolutions.com:80
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Date:
      - Thu, 18 Jul 2019 18:48:22 GMT
      Datacenter:
      - DFW1
    body:
      encoding: UTF-8
      string: '{"version": "2.0.0","sessionId": "64bf2453-d15f-46ad-87bb-35d6cb921406","elapsedQueryTime":
        60,"queryTime": 55,"totalRequestTime": 61,"pageCount": 0,"recordCount": 0,"query":
        {"queryString": "s.fvf=ContentType%2CNewspaper+Article%2Ct&s.hs=__BENTO_HL_START__&s.secure=f&s.dailyCatalog=t&s.q=authorcreator+%3D+Charlier&s.ho=t&s.ps=1&s.he=__BENTO_HL_END__","pageNumber":
        1,"pageSize": 1,"highlightStartDelimiter": "__BENTO_HL_START__","highlightEndDelimiter":
        "__BENTO_HL_END__","isHoldingsOnlyEnabled": true,"textQueries": [{"textQuery":
        "authorcreator = Charlier","removeCommand": "removeTextQuery(authorcreator
        = Charlier)"}],"searchTerms": [],"textFilters": [],"rangeFilters": [],"facetValueFilters":
        [{"fieldName": "ContentType","value": "Newspaper Article","isNegated": true,"removeCommand":
        "removeFacetValueFilter(ContentType,Newspaper Article)","negateCommand": "negateFacetValueFilter(ContentType,Newspaper
        Article)"}],"inclusiveFacetValueFilters": [],"facetValueGroupFilters": [],"facetFields":
        [],"rangeFacetFields": [],"sort": []},"facetFields": [],"rangeFacetFields":
        [],"didYouMeanSuggestions": [],"recommendationLists": {},"documents": [],"rollups":
        {"image": {},"reference": {},"newspaper": {}}}'
    http_version: 
  recorded_at: Thu, 18 Jul 2019 18:48:23 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=7981095&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 18 Jul 2019 19:14:00 GMT
      Last-Modified:
      - Thu, 18 Jul 2019 19:13:29 GMT
      Etag:
      - '"OTE1NjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '4801'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 18 Jul 2019 19:14:01 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=7981095&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 12:21:11 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 12:18:08 GMT
      Etag:
      - '"MjhmNjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '4801'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 12:21:11 GMT
- request:
    method: post
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?wt=json
    body:
      encoding: US-ASCII
      string: qt=search&facet.field=online&facet.field=format&facet.field=author_facet&facet.field=pub_date_facet&facet.field=workid_facet&facet.field=language_facet&facet.field=fast_topic_facet&facet.field=fast_geo_facet&facet.field=fast_era_facet&facet.field=fast_genre_facet&facet.field=subject_content_facet&facet.field=lc_alpha_facet&facet.field=location&facet.field=hierarchy_facet&facet.field=authortitle_facet&facet.field=lc_callnum_facet&facet.field=collection&facet.query=acquired_dt%3A%5BNOW-14DAY+TO+NOW-7DAY+%5D&facet.query=acquired_dt%3A%5BNOW-30DAY+TO+NOW-7DAY+%5D&facet.query=acquired_dt%3A%5BNOW-1YEAR+TO+NOW-7DAY%5D&&&&rows=20&defType=lucene&f.lc_callnum_facet.facet.limit=-1&q=%7B%21lucene%7DNOT+*%3A*&spellcheck=false&facet=true&f.online.facet.limit=3&f.format.facet.limit=11&f.author_facet.facet.limit=6&f.language_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.subject_content_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.location.facet.sort=index&f.location.facet.limit=101&f.lc_callnum_facet.facet.sort=count&sort=score+desc%2C+pub_date_sort+desc%2C+title_sort+asc&stats=true&stats.field=pub_date_facet&fl=*
    headers:
      User-Agent:
      - Faraday v0.15.4
      Content-Type:
      - application/x-www-form-urlencoded; charset=UTF-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:56 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '701'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: '{"responseHeader":{"zkConnected":true,"status":0,"QTime":164,"params":{"f.subject_content_facet.facet.limit":"6","f.fast_geo_facet.facet.limit":"6","fl":"*","f.lc_alpha_facet.facet.limit":"6","f.location.facet.sort":"index","f.online.facet.limit":"3","facet.query":["acquired_dt:[NOW-14DAY
        TO NOW-7DAY ]","acquired_dt:[NOW-30DAY TO NOW-7DAY ]","acquired_dt:[NOW-1YEAR
        TO NOW-7DAY]"],"defType":"lucene","f.lc_callnum_facet.facet.sort":"count","stats":"true","wt":"json","f.fast_genre_facet.facet.limit":"6","f.format.facet.limit":"11","stats.field":"pub_date_facet","f.author_facet.facet.limit":"6","facet.field":["online","format","author_facet","pub_date_facet","workid_facet","language_facet","fast_topic_facet","fast_geo_facet","fast_era_facet","fast_genre_facet","subject_content_facet","lc_alpha_facet","location","hierarchy_facet","authortitle_facet","lc_callnum_facet","collection"],"qt":"search","f.lc_callnum_facet.facet.limit":"-1","sort":"score
        desc, pub_date_sort desc, title_sort asc","rows":"20","q":"{!lucene}NOT *:*","f.location.facet.limit":"101","f.fast_era_facet.facet.limit":"6","spellcheck":"false","f.fast_topic_facet.facet.limit":"6","facet":"true","f.language_facet.facet.limit":"6"}},"response":{"numFound":0,"start":0,"maxScore":0.0,"docs":[]},"facet_counts":{"facet_queries":{},"facet_fields":{"online":[],"format":[],"author_facet":[],"pub_date_facet":[],"workid_facet":[],"language_facet":[],"fast_topic_facet":[],"fast_geo_facet":[],"fast_era_facet":[],"fast_genre_facet":[],"subject_content_facet":[],"lc_alpha_facet":[],"location":[],"hierarchy_facet":[],"authortitle_facet":[],"lc_callnum_facet":[],"collection":[]},"facet_ranges":{},"facet_intervals":{},"facet_heatmaps":{}},"stats":{"stats_fields":{"pub_date_facet":{"min":null,"max":null,"count":0,"missing":0,"sum":0.0,"sumOfSquares":0.0,"mean":"NaN","stddev":0.0}}}}

        '
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:56 GMT
- request:
    method: post
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?wt=json
    body:
      encoding: US-ASCII
      string: qt=search&facet.field=online&facet.field=format&facet.field=author_facet&facet.field=pub_date_facet&facet.field=workid_facet&facet.field=language_facet&facet.field=fast_topic_facet&facet.field=fast_geo_facet&facet.field=fast_era_facet&facet.field=fast_genre_facet&facet.field=subject_content_facet&facet.field=lc_alpha_facet&facet.field=location&facet.field=hierarchy_facet&facet.field=authortitle_facet&facet.field=lc_callnum_facet&facet.field=collection&facet.query=acquired_dt%3A%5BNOW-14DAY+TO+NOW-7DAY+%5D&facet.query=acquired_dt%3A%5BNOW-30DAY+TO+NOW-7DAY+%5D&facet.query=acquired_dt%3A%5BNOW-1YEAR+TO+NOW-7DAY%5D&&&&rows=20&defType=lucene&f.lc_callnum_facet.facet.limit=-1&q=%7B%21lucene%7Did%3A%287981095%29&spellcheck=false&facet=true&f.online.facet.limit=3&f.format.facet.limit=11&f.author_facet.facet.limit=6&f.language_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.subject_content_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.location.facet.sort=index&f.location.facet.limit=101&f.lc_callnum_facet.facet.sort=count&sort=score+desc%2C+pub_date_sort+desc%2C+title_sort+asc&stats=true&stats.field=pub_date_facet&fl=*
    headers:
      User-Agent:
      - Faraday v0.15.4
      Content-Type:
      - application/x-www-form-urlencoded; charset=UTF-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:52:08 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '5586'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:52:09 GMT
- request:
    method: post
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?wt=json
    body:
      encoding: US-ASCII
      string: qt=search&facet.field=online&facet.field=format&facet.field=author_facet&facet.field=pub_date_facet&facet.field=workid_facet&facet.field=language_facet&facet.field=fast_topic_facet&facet.field=fast_geo_facet&facet.field=fast_era_facet&facet.field=fast_genre_facet&facet.field=subject_content_facet&facet.field=lc_alpha_facet&facet.field=location&facet.field=hierarchy_facet&facet.field=authortitle_facet&facet.field=lc_callnum_facet&facet.field=collection&facet.query=acquired_dt%3A%5BNOW-14DAY+TO+NOW-7DAY+%5D&facet.query=acquired_dt%3A%5BNOW-30DAY+TO+NOW-7DAY+%5D&facet.query=acquired_dt%3A%5BNOW-1YEAR+TO+NOW-7DAY%5D&&&&rows=20&defType=lucene&f.lc_callnum_facet.facet.limit=-1&q=%7B%21lucene%7DNOT+*%3A*&spellcheck=false&facet=true&f.online.facet.limit=3&f.format.facet.limit=11&f.author_facet.facet.limit=6&f.language_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.subject_content_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.location.facet.sort=index&f.location.facet.limit=101&f.lc_callnum_facet.facet.sort=count&sort=score+desc%2C+pub_date_sort+desc%2C+title_sort+asc&stats=true&stats.field=pub_date_facet&fl=*
    headers:
      User-Agent:
      - Faraday v0.15.4
      Content-Type:
      - application/x-www-form-urlencoded; charset=UTF-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:52:29 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '700'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: '{"responseHeader":{"zkConnected":true,"status":0,"QTime":143,"params":{"f.subject_content_facet.facet.limit":"6","f.fast_geo_facet.facet.limit":"6","fl":"*","f.lc_alpha_facet.facet.limit":"6","f.location.facet.sort":"index","f.online.facet.limit":"3","facet.query":["acquired_dt:[NOW-14DAY
        TO NOW-7DAY ]","acquired_dt:[NOW-30DAY TO NOW-7DAY ]","acquired_dt:[NOW-1YEAR
        TO NOW-7DAY]"],"defType":"lucene","f.lc_callnum_facet.facet.sort":"count","stats":"true","wt":"json","f.fast_genre_facet.facet.limit":"6","f.format.facet.limit":"11","stats.field":"pub_date_facet","f.author_facet.facet.limit":"6","facet.field":["online","format","author_facet","pub_date_facet","workid_facet","language_facet","fast_topic_facet","fast_geo_facet","fast_era_facet","fast_genre_facet","subject_content_facet","lc_alpha_facet","location","hierarchy_facet","authortitle_facet","lc_callnum_facet","collection"],"qt":"search","f.lc_callnum_facet.facet.limit":"-1","sort":"score
        desc, pub_date_sort desc, title_sort asc","rows":"20","q":"{!lucene}NOT *:*","f.location.facet.limit":"101","f.fast_era_facet.facet.limit":"6","spellcheck":"false","f.fast_topic_facet.facet.limit":"6","facet":"true","f.language_facet.facet.limit":"6"}},"response":{"numFound":0,"start":0,"maxScore":0.0,"docs":[]},"facet_counts":{"facet_queries":{},"facet_fields":{"online":[],"format":[],"author_facet":[],"pub_date_facet":[],"workid_facet":[],"language_facet":[],"fast_topic_facet":[],"fast_geo_facet":[],"fast_era_facet":[],"fast_genre_facet":[],"subject_content_facet":[],"lc_alpha_facet":[],"location":[],"hierarchy_facet":[],"authortitle_facet":[],"lc_callnum_facet":[],"collection":[]},"facet_ranges":{},"facet_intervals":{},"facet_heatmaps":{}},"stats":{"stats_fields":{"pub_date_facet":{"min":null,"max":null,"count":0,"missing":0,"sum":0.0,"sumOfSquares":0.0,"mean":"NaN","stddev":0.0}}}}

        '
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:52:29 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=1378974&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 18:03:39 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 18:01:27 GMT
      Etag:
      - '"YWQ5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2569'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 18:03:39 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=1378974&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 18:03:40 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 18:01:27 GMT
      Etag:
      - '"YWQ5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2569'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 18:03:40 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=10079768&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:56:22 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:51:30 GMT
      Etag:
      - '"MjQzYWM2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2749'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:56:22 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=edismax&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&fl=*&mm=1&q=(%2Bcheese%20%2Bworms%20)%20OR%20phrase:%22cheese%20worms%22&qt=search&rows=20&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:57:57 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:56:22 GMT
      Etag:
      - '"OTQzYWM2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:00 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=247316&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:00 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:56:22 GMT
      Etag:
      - '"OTQzYWM2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3115'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:00 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4784333&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:00 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:54:12 GMT
      Etag:
      - '"N2E2ZjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3249'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:00 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=1666017&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:00 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:54:12 GMT
      Etag:
      - '"N2E2ZjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3159'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:00 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8171002&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:00 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:56:22 GMT
      Etag:
      - '"YWYzYWM2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3219'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJyZXNwb25zZSI6eyJudW1Gb3VuZCI6MSwic3RhcnQiOjAsImRvY3MiOlsKICAgICAgewogICAgICAgICJyZWNvcmRfZGF0ZXNfZGlzcGxheSI6WyJ7XCJiaWJcIjoxNDgwMzI2NTM1MDAwLFwiaG9sZGluZ3NcIjp7XCI4NTYyMDE5XCI6MTM3MzQ3MTIwODAwMH19Il0sCiAgICAgICAgInRpdGxlX3Ntc19jb21wYXRfZGlzcGxheSI6WyJUaGUgRHV0Y2ggYm9hcmUgZGlzc2VjdGVkLCBvciBhIGRlc2NyaXB0aW9uIG9mIGhvZ2ctbGFuZCJdLAogICAgICAgICJ0aXRsZV8ybGV0dGVyX3MiOlsiZHUiXSwKICAgICAgICAidGl0bGVfMWxldHRlcl9zIjpbImQiXSwKICAgICAgICAidGl0bGVfZGlzcGxheSI6IlRoZSBEdXRjaCBib2FyZSBkaXNzZWN0ZWQsIG9yIGEgZGVzY3JpcHRpb24gb2YgaG9nZy1sYW5kIiwKICAgICAgICAiZnVsbHRpdGxlX2Rpc3BsYXkiOiJUaGUgRHV0Y2ggYm9hcmUgZGlzc2VjdGVkLCBvciBhIGRlc2NyaXB0aW9uIG9mIGhvZ2ctbGFuZC4gOiBBIER1dGNoIG1hbiBpcyBhIGx1c3R5LCBmYXQsIHR3byBsZWdnZWQgY2hlZXNlLXdvcm06IGEgY3JlYXR1cmUsIHRoYXQgaXMgc28gYWRkaWN0ZWQgdG8gZWF0aW5nIGJ1dHRlciwgZHJpbmtpbmcgZmF0IGRyaW5rLCBhbmQgc2xpZGluZywgdGhhdCBhbGwgdGhlIHZ2b3JsZCBrbm93cyBoaW0gZm9yIGEgc2xpcHBlcnkgZmVsbG93LCBhbiBIb2xsYW5kZXIgaXMgbm90IGFuIEhpZ2gtbGFuZGVyLCBidXQgYSBMb3ctbGFuZGVyOyBmb3IgaGUgbG92ZXMgdG8gYmUgZG93biBpbiB0aGUgZGlydCwgYW5kIGJvYXItbGlrZSwgdG8gd2FsbG93IHRoZXJlaW4iLAogICAgICAgICJzdWJ0aXRsZV9kaXNwbGF5IjoiQSBEdXRjaCBtYW4gaXMgYSBsdXN0eSwgZmF0LCB0d28gbGVnZ2VkIGNoZWVzZS13b3JtOiBhIGNyZWF0dXJlLCB0aGF0IGlzIHNvIGFkZGljdGVkIHRvIGVhdGluZyBidXR0ZXIsIGRyaW5raW5nIGZhdCBkcmluaywgYW5kIHNsaWRpbmcsIHRoYXQgYWxsIHRoZSB2dm9ybGQga25vd3MgaGltIGZvciBhIHNsaXBwZXJ5IGZlbGxvdywgYW4gSG9sbGFuZGVyIGlzIG5vdCBhbiBIaWdoLWxhbmRlciwgYnV0IGEgTG93LWxhbmRlcjsgZm9yIGhlIGxvdmVzIHRvIGJlIGRvd24gaW4gdGhlIGRpcnQsIGFuZCBib2FyLWxpa2UsIHRvIHdhbGxvdyB0aGVyZWluIiwKICAgICAgICAic3ViamVjdF9qc29uIjpbIlt7XCJzdWJqZWN0XCI6XCJHcmVhdCBCcml0YWluXCIsXCJhdXRob3JpemVkXCI6dHJ1ZSxcInR5cGVcIjpcIkdlb2dyYXBoaWMgTmFtZVwifSx7XCJzdWJqZWN0XCI6XCJIaXN0b3J5XCIsXCJhdXRob3JpemVkXCI6dHJ1ZX0se1wic3ViamVjdFwiOlwiUmVzdG9yYXRpb24sIDE2NjAtMTY4OFwiLFwiYXV0aG9yaXplZFwiOnRydWV9LHtcInN1YmplY3RcIjpcIlBvZXRyeVwiLFwiYXV0aG9yaXplZFwiOmZhbHNlfSx7XCJzdWJqZWN0XCI6XCJFYXJseSB3b3JrcyB0byAxODAwLlwiLFwiYXV0aG9yaXplZFwiOmZhbHNlfV0iLAogICAgICAgICAgIlt7XCJzdWJqZWN0XCI6XCJOZXRoZXJsYW5kc1wiLFwiYXV0aG9yaXplZFwiOnRydWUsXCJ0eXBlXCI6XCJHZW9ncmFwaGljIE5hbWVcIn0se1wic3ViamVjdFwiOlwiRm9yZWlnbiByZWxhdGlvbnNcIixcImF1dGhvcml6ZWRcIjp0cnVlfSx7XCJzdWJqZWN0XCI6XCJFbmdsYW5kXCIsXCJhdXRob3JpemVkXCI6ZmFsc2V9LHtcInN1YmplY3RcIjpcIlBvZXRyeVwiLFwiYXV0aG9yaXplZFwiOmZhbHNlfSx7XCJzdWJqZWN0XCI6XCJFYXJseSB3b3JrcyB0byAxODAwLlwiLFwiYXV0aG9yaXplZFwiOmZhbHNlfV0iLAogICAgICAgICAgIlt7XCJzdWJqZWN0XCI6XCJCcm9hZHNpZGVzXCIsXCJhdXRob3JpemVkXCI6ZmFsc2UsXCJ0eXBlXCI6XCJHZW5yZS9Gb3JtIFRlcm1cIn0se1wic3ViamVjdFwiOlwiRW5nbGFuZFwiLFwiYXV0aG9yaXplZFwiOmZhbHNlfSx7XCJzdWJqZWN0XCI6XCJMb25kb25cIixcImF1dGhvcml6ZWRcIjpmYWxzZX0se1wic3ViamVjdFwiOlwiMTd0aCBjZW50dXJ5LlwiLFwiYXV0aG9yaXplZFwiOmZhbHNlfV0iXSwKICAgICAgICAic3ViamVjdF9kaXNwbGF5IjpbIkdyZWF0IEJyaXRhaW4gPiBIaXN0b3J5ID4gUmVzdG9yYXRpb24sIDE2NjAtMTY4OCA+IFBvZXRyeSA+IEVhcmx5IHdvcmtzIHRvIDE4MDAiLAogICAgICAgICAgIk5ldGhlcmxhbmRzID4gRm9yZWlnbiByZWxhdGlvbnMgPiBFbmdsYW5kID4gUG9ldHJ5ID4gRWFybHkgd29ya3MgdG8gMTgwMCIsCiAgICAgICAgICAiQnJvYWRzaWRlcyA+IEVuZ2xhbmQgPiBMb25kb24gPiAxN3RoIGNlbnR1cnkiXSwKICAgICAgICAiZmFzdF9iIjp0cnVlLAogICAgICAgICJwdWJfaW5mb19kaXNwbGF5IjpbIkxvbmRvbiA6IFtzLm4uXS4gUHJpbnRlZCwgMTY2NS4iXSwKICAgICAgICAicHVicGxhY2VfZGlzcGxheSI6WyJMb25kb24iXSwKICAgICAgICAicHVibGlzaGVyX2Rpc3BsYXkiOlsiW3Mubi5dLiJdLAogICAgICAgICJwdWJfZGF0ZV9kaXNwbGF5IjpbIlByaW50ZWQsIDE2NjUiXSwKICAgICAgICAiZGF0YWJhc2VfYiI6ZmFsc2UsCiAgICAgICAgImxhbmd1YWdlX2Rpc3BsYXkiOlsiRW5nbGlzaC4iXSwKICAgICAgICAidGl0bGVfc2VyaWVzX2Rpc3BsYXkiOlsiRWFybHkgRW5nbGlzaCBib29rcyBvbmxpbmUuIl0sCiAgICAgICAgInRpdGxlX3Nlcmllc19jdHMiOlsiRWFybHkgRW5nbGlzaCBib29rcyBvbmxpbmUufEVhcmx5IEVuZ2xpc2ggYm9va3Mgb25saW5lLiJdLAogICAgICAgICJpbmNsdWRlZF93b3JrX2Rpc3BsYXkiOlsiSG9sbGFuZGVycyB1bm1hc2tlZC58SG9sbGFuZGVycyB1bm1hc2tlZC4iXSwKICAgICAgICAibWFyY19kaXNwbGF5IjoiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz48cmVjb3JkIHhtbG5zPVwiaHR0cDovL3d3dy5sb2MuZ292L01BUkMyMS9zbGltXCI+PGxlYWRlcj4wMjg1NGNhbSBhMjIwMDU0MSAgIDQ1MDA8L2xlYWRlcj48Y29udHJvbGZpZWxkIHRhZz1cIjAwMVwiPjgxNzEwMDI8L2NvbnRyb2xmaWVsZD48Y29udHJvbGZpZWxkIHRhZz1cIjAwNVwiPjIwMTYxMTI4MDQ0ODU1LjA8L2NvbnRyb2xmaWVsZD48Y29udHJvbGZpZWxkIHRhZz1cIjAwNlwiPm3CoMKgwqDCoGdvwqDCoGTCoMKgwqDCoMKgwqDCoMKgPC9jb250cm9sZmllbGQ+PGNvbnRyb2xmaWVsZCB0YWc9XCIwMDdcIj5jcsKgYm7CoHx8fGF8YmJ8PC9jb250cm9sZmllbGQ+PGNvbnRyb2xmaWVsZCB0YWc9XCIwMDhcIj45ODAxMDhzMTY2NcKgwqDCoMKgZW5rYcKgwqDCoMKgb8KgwqDCoMKgwqAwMMKgwqDCoMKgZW5nwqBkPC9jb250cm9sZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMzVcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+KEVFQk8pMTg2OTYxPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjAzNVwiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj4oVW5NKW9jbTk5ODg2NjQ3ZTwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMzVcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+ODE3MTAwMjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMzVcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+KE9Db0xDKTc2NjkwMTM1Mzwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMzdcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+Q0wyMTA1MDAwMDAxPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImJcIj5Qcm9RdWVzdCBJbmZvcm1hdGlvbiBhbmQgTGVhcm5pbmcuIDMwMCBOLiBaZWViIFJkLiwgQW5uIEFyYm9yLCBNSSA0ODEwNjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwNDBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+Q3UtUml2RVM8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiY1wiPkN1LVJpdkVTPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImVcIj5kY3JiPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImRcIj5OSUM8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMDQzXCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPmUtdWstZW48L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYVwiPmUtbmUtLS08L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMjQ1XCIgaW5kMT1cIjBcIiBpbmQyPVwiNFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlRoZSBEdXRjaCBib2FyZSBkaXNzZWN0ZWQsIG9yIGEgZGVzY3JpcHRpb24gb2YgaG9nZy1sYW5kLjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJoXCI+W2VsZWN0cm9uaWMgcmVzb3VyY2VdIDo8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYlwiPkEgRHV0Y2ggbWFuIGlzIGEgbHVzdHksIGZhdCwgdHdvIGxlZ2dlZCBjaGVlc2Utd29ybTogYSBjcmVhdHVyZSwgdGhhdCBpcyBzbyBhZGRpY3RlZCB0byBlYXRpbmcgYnV0dGVyLCBkcmlua2luZyBmYXQgZHJpbmssIGFuZCBzbGlkaW5nLCB0aGF0IGFsbCB0aGUgdnZvcmxkIGtub3dzIGhpbSBmb3IgYSBzbGlwcGVyeSBmZWxsb3csIGFuIEhvbGxhbmRlciBpcyBub3QgYW4gSGlnaC1sYW5kZXIsIGJ1dCBhIExvdy1sYW5kZXI7IGZvciBoZSBsb3ZlcyB0byBiZSBkb3duIGluIHRoZSBkaXJ0LCBhbmQgYm9hci1saWtlLCB0byB3YWxsb3cgdGhlcmVpbi48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMjYwXCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkxvbmRvbiA6PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImJcIj5bcy5uLl0uPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImNcIj5QcmludGVkLCAxNjY1Ljwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIzMDBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MSBzaGVldCAoWzFdIHAuKS48L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYlwiPmlsbC48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNTAwXCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlZlcnNlIC0gXCJUaGUgRHV0Y2ggYXQgZmlyc3QsXCIuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjUwMFwiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj5BIHNlY29uZCBwb2VtLCBvbiB0aGUgbG93ZXIgaGFsZiBvZiB0aGUgcGFnZSwgaXMgdGl0bGVkOiBUaGUgSG9sbGFuZGVycyB1bm1hc2tlZC48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNTAwXCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlJlcHJvZHVjdGlvbiBvZiBvcmlnaW5hbCBpbiB0aGUgQnJpdGlzaCBMaWJyYXJ5Ljwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI1MTBcIiBpbmQxPVwiNFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+V2luZyAoQ0QtUk9NLCAxOTk2KTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJjXCI+RDI4OTYuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjUxMFwiIGluZDE9XCI0XCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj5FYXJseSBFbmdsaXNoIGJvb2tzIHRyYWN0IHN1cHBsZW1lbnQgaW50ZXJpbSBndWlkZTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJjXCI+THV0dC5JSUlbODVdLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI1MzNcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+RWxlY3Ryb25pYyByZXByb2R1Y3Rpb24uPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImJcIj5Bbm4gQXJib3IsIE1pY2guIDo8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiY1wiPlVNSSw8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZFwiPjE5OTktPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImZcIj4oRWFybHkgRW5nbGlzaCBib29rcyBvbmxpbmUpPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIm5cIj5EaWdpdGFsIHZlcnNpb24gb2Y6IChFYXJseSBFbmdsaXNoIGJvb2tzOyBUcmFjdCBzdXBwbGVtZW50IDsgQzY6MVs4N10pPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjdcIj5zMTk5OSAgICBtaXVuIHM8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjUxXCIgaW5kMT1cIiBcIiBpbmQyPVwiMFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkdyZWF0IEJyaXRhaW48L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwieFwiPkhpc3Rvcnk8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwieVwiPlJlc3RvcmF0aW9uLCAxNjYwLTE2ODg8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwidlwiPlBvZXRyeTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ2XCI+RWFybHkgd29ya3MgdG8gMTgwMC48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjUxXCIgaW5kMT1cIiBcIiBpbmQyPVwiMFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPk5ldGhlcmxhbmRzPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cInhcIj5Gb3JlaWduIHJlbGF0aW9uczwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ6XCI+RW5nbGFuZDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ2XCI+UG9ldHJ5PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cInZcIj5FYXJseSB3b3JrcyB0byAxODAwLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI2NTVcIiBpbmQxPVwiIFwiIGluZDI9XCI3XCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+QnJvYWRzaWRlczwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ6XCI+RW5nbGFuZDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ6XCI+TG9uZG9uPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cInlcIj4xN3RoIGNlbnR1cnkuPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj5yYmdlbnI8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjUwXCIgaW5kMT1cIiBcIiBpbmQyPVwiN1wiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkRpcGxvbWF0aWMgcmVsYXRpb25zLjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIyXCI+ZmFzdDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIwXCI+KE9Db0xDKWZzdDAxOTA3NDEyPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MVwiIGluZDE9XCIgXCIgaW5kMj1cIjdcIj48c3ViZmllbGQgY29kZT1cImFcIj5FbmdsYW5kLjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIyXCI+ZmFzdDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIwXCI+KE9Db0xDKWZzdDAxMjE5OTIwPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MVwiIGluZDE9XCIgXCIgaW5kMj1cIjdcIj48c3ViZmllbGQgY29kZT1cImFcIj5HcmVhdCBCcml0YWluLjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIyXCI+ZmFzdDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIwXCI+KE9Db0xDKWZzdDAxMjA0NjIzPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MVwiIGluZDE9XCIgXCIgaW5kMj1cIjdcIj48c3ViZmllbGQgY29kZT1cImFcIj5OZXRoZXJsYW5kcy48L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMlwiPmZhc3Q8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMFwiPihPQ29MQylmc3QwMTIwNDAzNDwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI2NDhcIiBpbmQxPVwiIFwiIGluZDI9XCI3XCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MTY2MC0xNjg4PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj5mYXN0PC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1NVwiIGluZDE9XCIgXCIgaW5kMj1cIjdcIj48c3ViZmllbGQgY29kZT1cImFcIj5FYXJseSB3b3Jrcy48L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMlwiPmZhc3Q8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMFwiPihPQ29MQylmc3QwMTQxMTYzNjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI2NTVcIiBpbmQxPVwiIFwiIGluZDI9XCI3XCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+SGlzdG9yeS48L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMlwiPmZhc3Q8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMFwiPihPQ29MQylmc3QwMTQxMTYyODwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI2NTVcIiBpbmQxPVwiIFwiIGluZDI9XCI3XCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+UG9ldHJ5Ljwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIyXCI+ZmFzdDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIwXCI+KE9Db0xDKWZzdDAxNDIzODI4PC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjc0MFwiIGluZDE9XCIwXCIgaW5kMj1cIjJcIj48c3ViZmllbGQgY29kZT1cImFcIj5Ib2xsYW5kZXJzIHVubWFza2VkLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI4MzBcIiBpbmQxPVwiIFwiIGluZDI9XCIwXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+RWFybHkgRW5nbGlzaCBib29rcyBvbmxpbmUuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjg1NlwiIGluZDE9XCI0XCIgaW5kMj1cIjBcIj48c3ViZmllbGQgY29kZT1cIjNcIj5BdmFpbGFibGUgZnJvbSBFYXJseSBFbmdsaXNoIEJvb2tzIE9ubGluZTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJpXCI+ZGJjb2RlPUJIUzsgcHJvdmlkZXJjb2RlPVBSVkNESDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ1XCI+aHR0cDovL3Byb3h5LmxpYnJhcnkuY29ybmVsbC5lZHUvbG9naW4/dXJsPWh0dHA6Ly9nYXRld2F5LnByb3F1ZXN0LmNvbS9vcGVudXJsP2N0eF92ZXI9WjM5Ljg4LTIwMDMmYW1wO3Jlc19pZD14cmk6ZWVibyZhbXA7cmZ0X3ZhbF9mbXQ9JmFtcDtyZnRfaWQ9eHJpOmVlYm86aW1hZ2U6MTg2OTYxPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cInpcIj5Db25uZWN0IHRvIGZ1bGwgdGV4dC48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiODk5XCIgaW5kMT1cIjJcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlBSVkNESF9CSFM8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiOTQ4XCIgaW5kMT1cIjJcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPjIwMTUwMjEyPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImJcIj5tPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImRcIj5iYXRjaDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJlXCI+bHRzPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cInhcIj5lZWJvX2FkZDAzNTwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NDhcIiBpbmQxPVwiMFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MjAxMzA3MTA8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYlwiPmk8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZFwiPmJhdGNoPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImVcIj5sdHM8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiOTQ4XCIgaW5kMT1cIjFcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPjIwMTMwNzEwPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImJcIj5zPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImRcIj5iYXRjaDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJlXCI+bHRzPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImZcIj5lYms8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiOTQ4XCIgaW5kMT1cIjNcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPjIwMTMwNzEwPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImhcIj5FRUJPPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImlcIj5lZXRzMS0yIGVlYm8ubXJjPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjk0OFwiIGluZDE9XCIyXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj4yMDE2MTEyODwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+bTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJkXCI+YmF0Y2g8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZVwiPmx0czwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ4XCI+V29ybGRTaGFyZTwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NTBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+REE0NDg8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYlwiPi5EODcgMTY2NTwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5OTVcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+Tm9FeDwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PC9yZWNvcmQ+IiwKICAgICAgICAiaWQiOiI4MTcxMDAyIiwKICAgICAgICAiYmliaWRfZGlzcGxheSI6WyI4MTcxMDAyfDIwMTYxMTI4MDQ0ODU1Il0sCiAgICAgICAgImRlc2NyaXB0aW9uX2Rpc3BsYXkiOlsiMSBzaGVldCAoWzFdIHAuKS4gaWxsLiJdLAogICAgICAgICJub3RlcyI6WyJWZXJzZSAtIFwiVGhlIER1dGNoIGF0IGZpcnN0LFwiLiIsCiAgICAgICAgICAiQSBzZWNvbmQgcG9lbSwgb24gdGhlIGxvd2VyIGhhbGYgb2YgdGhlIHBhZ2UsIGlzIHRpdGxlZDogVGhlIEhvbGxhbmRlcnMgdW5tYXNrZWQuIiwKICAgICAgICAgICJSZXByb2R1Y3Rpb24gb2Ygb3JpZ2luYWwgaW4gdGhlIEJyaXRpc2ggTGlicmFyeS4iLAogICAgICAgICAgIkVsZWN0cm9uaWMgcmVwcm9kdWN0aW9uLiBBbm4gQXJib3IsIE1pY2guIDogVU1JLCAxOTk5LSAoRWFybHkgRW5nbGlzaCBib29rcyBvbmxpbmUpIERpZ2l0YWwgdmVyc2lvbiBvZjogKEVhcmx5IEVuZ2xpc2ggYm9va3M7IFRyYWN0IHN1cHBsZW1lbnQgOyBDNjoxWzg3XSkiXSwKICAgICAgICAiZWlnaHRuaW5lbmluZV9kaXNwbGF5IjpbIlBSVkNESF9CSFMiXSwKICAgICAgICAicmVmZXJlbmNlc19kaXNwbGF5IjpbIldpbmcgKENELVJPTSwgMTk5NikgRDI4OTYuIiwKICAgICAgICAgICJFYXJseSBFbmdsaXNoIGJvb2tzIHRyYWN0IHN1cHBsZW1lbnQgaW50ZXJpbSBndWlkZSBMdXR0LklJSVs4NV0uIl0sCiAgICAgICAgInVybF9hY2Nlc3NfZGlzcGxheSI6WyJodHRwOi8vcHJveHkubGlicmFyeS5jb3JuZWxsLmVkdS9sb2dpbj91cmw9aHR0cDovL2dhdGV3YXkucHJvcXVlc3QuY29tL29wZW51cmw/Y3R4X3Zlcj1aMzkuODgtMjAwMyZyZXNfaWQ9eHJpOmVlYm8mcmZ0X3ZhbF9mbXQ9JnJmdF9pZD14cmk6ZWVibzppbWFnZToxODY5NjF8QXZhaWxhYmxlIGZyb20gRWFybHkgRW5nbGlzaCBCb29rcyBPbmxpbmUgQ29ubmVjdCB0byBmdWxsIHRleHQuIl0sCiAgICAgICAgInVybF9hY2Nlc3NfanNvbiI6WyJ7XCJwcm92aWRlcmNvZGVcIjpcIlBSVkNESFwiLFwiZGJjb2RlXCI6XCJCSFNcIixcImRlc2NyaXB0aW9uXCI6XCJBdmFpbGFibGUgZnJvbSBFYXJseSBFbmdsaXNoIEJvb2tzIE9ubGluZSBDb25uZWN0IHRvIGZ1bGwgdGV4dC5cIixcInVybFwiOlwiaHR0cDovL3Byb3h5LmxpYnJhcnkuY29ybmVsbC5lZHUvbG9naW4/dXJsPWh0dHA6Ly9nYXRld2F5LnByb3F1ZXN0LmNvbS9vcGVudXJsP2N0eF92ZXI9WjM5Ljg4LTIwMDMmcmVzX2lkPXhyaTplZWJvJnJmdF92YWxfZm10PSZyZnRfaWQ9eHJpOmVlYm86aW1hZ2U6MTg2OTYxXCJ9Il0sCiAgICAgICAgImhvbGRpbmdzX2Rpc3BsYXkiOlsiODU2MjAxOXwyMDEzMDcxMDExNDY0OCJdLAogICAgICAgICJob2xkaW5nc19yZWNvcmRfZGlzcGxheSI6WyJ7XCJpZFwiOlwiODU2MjAxOVwiLFwibW9kaWZpZWRfZGF0ZVwiOlwiMjAxMzA3MTAxMTQ2NDhcIixcImNvcHlfbnVtYmVyXCI6bnVsbCxcImNhbGxub3NcIjpudWxsLFwibm90ZXNcIjpbXSxcImhvbGRpbmdzX2Rlc2NcIjpbXSxcInJlY2VudF9ob2xkaW5nc19kZXNjXCI6W10sXCJzdXBwbGVtZW50YWxfaG9sZGluZ3NfZGVzY1wiOltdLFwiaW5kZXhfaG9sZGluZ3NfZGVzY1wiOltdLFwibG9jYXRpb25zXCI6W3tcImNvZGVcIjpcInNlcnYscmVtb1wiLFwibnVtYmVyXCI6MTI4LFwibmFtZVwiOlwiKk5ldHdvcmtlZCBSZXNvdXJjZVwiLFwibGlicmFyeVwiOm51bGx9XX0iXSwKICAgICAgICAiY2FsbG51bV9zb3J0IjoiREE0NDggLkQ4NyAxNjY1IiwKICAgICAgICAib3RoZXJfaWRfZGlzcGxheSI6WyIoRUVCTykxODY5NjEiLAogICAgICAgICAgIihVbk0pb2NtOTk4ODY2NDdlIiwKICAgICAgICAgICI4MTcxMDAyIl0sCiAgICAgICAgIm9jbGNfaWRfZGlzcGxheSI6WyI3NjY5MDEzNTMiXSwKICAgICAgICAiaG9sZGluZ3NfanNvbiI6IntcIjg1NjIwMTlcIjp7XCJvbmxpbmVcIjp0cnVlLFwiZGF0ZVwiOjEzNzM0NzEyMDh9fSIsCiAgICAgICAgImF2YWlsYWJpbGl0eV9qc29uIjoie1wib25saW5lXCI6dHJ1ZX0iLAogICAgICAgICJjYWxsbnVtYmVyX2Rpc3BsYXkiOlsiREE0NDggLkQ4NyAxNjY1Il0sCiAgICAgICAgIl92ZXJzaW9uXyI6MTYzOTA2OTQ5ODcwNDEzNDE0NCwKICAgICAgICAidGltZXN0YW1wIjoiMjAxOS0wNy0xNFQyMTowODowMy43NjVaIiwKICAgICAgICAic3ViamVjdF9lcmFfZmFjZXQiOlsiMTY2MC0xNjg4Il0sCiAgICAgICAgInB1Yl9kYXRlX2ZhY2V0IjoxNjY1LAogICAgICAgICJzb3VyY2UiOiJWb3lhZ2VyIiwKICAgICAgICAic3ViamVjdF9nZW5yX2ZpbGluZyI6WyJicm9hZHNpZGVzIiwKICAgICAgICAgICJicm9hZHNpZGVzIDAwMDAgZW5nbGFuZCIsCiAgICAgICAgICAiYnJvYWRzaWRlcyAwMDAwIGVuZ2xhbmQgMDAwMCBsb25kb24iLAogICAgICAgICAgImJyb2Fkc2lkZXMgMDAwMCBlbmdsYW5kIDAwMDAgbG9uZG9uIDAwMDAgMTd0aCBjZW50dXJ5IiwKICAgICAgICAgICJlYXJseSB3b3JrcyIsCiAgICAgICAgICAiaGlzdG9yeSIsCiAgICAgICAgICAicG9ldHJ5Il0sCiAgICAgICAgInR5cGUiOiJDYXRhbG9nIiwKICAgICAgICAiZm9ybWF0X21haW5fZmFjZXQiOiJCb29rIiwKICAgICAgICAiZmFzdF9nZW5yZV9mYWNldCI6WyJFYXJseSB3b3JrcyIsCiAgICAgICAgICAiSGlzdG9yeSIsCiAgICAgICAgICAiUG9ldHJ5Il0sCiAgICAgICAgInN1YmplY3RfdG9waWNfZmlsaW5nIjpbImRpcGxvbWF0aWMgcmVsYXRpb25zIl0sCiAgICAgICAgInN1YmplY3RfZXJhX2ZpbGluZyI6WyIxNjYwIDE2ODgiXSwKICAgICAgICAic3ViamVjdF9nZW9fZmlsaW5nIjpbImVuZ2xhbmQiLAogICAgICAgICAgImdyZWF0IGJyaXRhaW4iLAogICAgICAgICAgImdyZWF0IGJyaXRhaW4gMDAwMCBoaXN0b3J5IiwKICAgICAgICAgICJncmVhdCBicml0YWluIDAwMDAgaGlzdG9yeSAwMDAwIHJlc3RvcmF0aW9uIDE2NjAgMTY4OCIsCiAgICAgICAgICAiZ3JlYXQgYnJpdGFpbiAwMDAwIGhpc3RvcnkgMDAwMCByZXN0b3JhdGlvbiAxNjYwIDE2ODggMDAwMCBwb2V0cnkiLAogICAgICAgICAgImdyZWF0IGJyaXRhaW4gMDAwMCBoaXN0b3J5IDAwMDAgcmVzdG9yYXRpb24gMTY2MCAxNjg4IDAwMDAgcG9ldHJ5IDAwMDAgZWFybHkgd29ya3MgdG8gMTgwMCIsCiAgICAgICAgICAibmV0aGVybGFuZHMiLAogICAgICAgICAgIm5ldGhlcmxhbmRzIDAwMDAgZm9yZWlnbiByZWxhdGlvbnMiLAogICAgICAgICAgIm5ldGhlcmxhbmRzIDAwMDAgZm9yZWlnbiByZWxhdGlvbnMgMDAwMCBlbmdsYW5kIiwKICAgICAgICAgICJuZXRoZXJsYW5kcyAwMDAwIGZvcmVpZ24gcmVsYXRpb25zIDAwMDAgZW5nbGFuZCAwMDAwIHBvZXRyeSIsCiAgICAgICAgICAibmV0aGVybGFuZHMgMDAwMCBmb3JlaWduIHJlbGF0aW9ucyAwMDAwIGVuZ2xhbmQgMDAwMCBwb2V0cnkgMDAwMCBlYXJseSB3b3JrcyB0byAxODAwIl0sCiAgICAgICAgInN1YmplY3RfZ2VvX2ZhY2V0IjpbIkVuZ2xhbmQiLAogICAgICAgICAgIkdyZWF0IEJyaXRhaW4iLAogICAgICAgICAgIkdyZWF0IEJyaXRhaW4gPiBIaXN0b3J5IiwKICAgICAgICAgICJHcmVhdCBCcml0YWluID4gSGlzdG9yeSA+IFJlc3RvcmF0aW9uLCAxNjYwLTE2ODgiLAogICAgICAgICAgIkdyZWF0IEJyaXRhaW4gPiBIaXN0b3J5ID4gUmVzdG9yYXRpb24sIDE2NjAtMTY4OCA+IFBvZXRyeSIsCiAgICAgICAgICAiR3JlYXQgQnJpdGFpbiA+IEhpc3RvcnkgPiBSZXN0b3JhdGlvbiwgMTY2MC0xNjg4ID4gUG9ldHJ5ID4gRWFybHkgd29ya3MgdG8gMTgwMCIsCiAgICAgICAgICAiTmV0aGVybGFuZHMiLAogICAgICAgICAgIk5ldGhlcmxhbmRzID4gRm9yZWlnbiByZWxhdGlvbnMiLAogICAgICAgICAgIk5ldGhlcmxhbmRzID4gRm9yZWlnbiByZWxhdGlvbnMgPiBFbmdsYW5kIiwKICAgICAgICAgICJOZXRoZXJsYW5kcyA+IEZvcmVpZ24gcmVsYXRpb25zID4gRW5nbGFuZCA+IFBvZXRyeSIsCiAgICAgICAgICAiTmV0aGVybGFuZHMgPiBGb3JlaWduIHJlbGF0aW9ucyA+IEVuZ2xhbmQgPiBQb2V0cnkgPiBFYXJseSB3b3JrcyB0byAxODAwIl0sCiAgICAgICAgImZhc3RfdG9waWNfZmFjZXQiOlsiRGlwbG9tYXRpYyByZWxhdGlvbnMiXSwKICAgICAgICAiZm9ybWF0IjpbIkJvb2siXSwKICAgICAgICAiZmFzdF9nZW9fZmFjZXQiOlsiRW5nbGFuZCIsCiAgICAgICAgICAiR3JlYXQgQnJpdGFpbiIsCiAgICAgICAgICAiTmV0aGVybGFuZHMiXSwKICAgICAgICAic3ViamVjdF90b3BpY19mYWNldCI6WyJEaXBsb21hdGljIHJlbGF0aW9ucyJdLAogICAgICAgICJzdWJqZWN0X2dlbnJfZmFjZXQiOlsiQnJvYWRzaWRlcyIsCiAgICAgICAgICAiQnJvYWRzaWRlcyA+IEVuZ2xhbmQiLAogICAgICAgICAgIkJyb2Fkc2lkZXMgPiBFbmdsYW5kID4gTG9uZG9uIiwKICAgICAgICAgICJCcm9hZHNpZGVzID4gRW5nbGFuZCA+IExvbmRvbiA+IDE3dGggY2VudHVyeSIsCiAgICAgICAgICAiRWFybHkgd29ya3MiLAogICAgICAgICAgIkhpc3RvcnkiLAogICAgICAgICAgIlBvZXRyeSJdLAogICAgICAgICJsYW5ndWFnZV9mYWNldCI6WyJFbmdsaXNoIl0sCiAgICAgICAgImZhc3RfZXJhX2ZhY2V0IjpbIjE2NjAtMTY4OCJdLAogICAgICAgICJvbmxpbmUiOlsiT25saW5lIl0sCiAgICAgICAgImxjX2NhbGxudW1fZmFjZXQiOlsiRCAtIFdvcmxkIEhpc3RvcnkiLAogICAgICAgICAgIkQgLSBXb3JsZCBIaXN0b3J5OkRBLURSIC0gRXVyb3BlIiwKICAgICAgICAgICJEIC0gV29ybGQgSGlzdG9yeTpEQS1EUiAtIEV1cm9wZTpEQSAtIEdyZWF0IEJyaXRhaW4iLAogICAgICAgICAgIkQgLSBXb3JsZCBIaXN0b3J5OkRBLURSIC0gRXVyb3BlOkRBIC0gR3JlYXQgQnJpdGFpbjpEQTIwLTY5MCAtIEVuZ2xhbmQiLAogICAgICAgICAgIkQgLSBXb3JsZCBIaXN0b3J5OkRBLURSIC0gRXVyb3BlOkRBIC0gR3JlYXQgQnJpdGFpbjpEQTIwLTY5MCAtIEVuZ2xhbmQ6REEyOC01OTIgLSBIaXN0b3J5IiwKICAgICAgICAgICJEIC0gV29ybGQgSGlzdG9yeTpEQS1EUiAtIEV1cm9wZTpEQSAtIEdyZWF0IEJyaXRhaW46REEyMC02OTAgLSBFbmdsYW5kOkRBMjgtNTkyIC0gSGlzdG9yeTpEQTEyOS01OTIgLSBCeSBwZXJpb2QiLAogICAgICAgICAgIkQgLSBXb3JsZCBIaXN0b3J5OkRBLURSIC0gRXVyb3BlOkRBIC0gR3JlYXQgQnJpdGFpbjpEQTIwLTY5MCAtIEVuZ2xhbmQ6REEyOC01OTIgLSBIaXN0b3J5OkRBMTI5LTU5MiAtIEJ5IHBlcmlvZDpEQTMwMC01OTIgLSBNb2Rlcm4sIDE0ODUtIiwKICAgICAgICAgICJEIC0gV29ybGQgSGlzdG9yeTpEQS1EUiAtIEV1cm9wZTpEQSAtIEdyZWF0IEJyaXRhaW46REEyMC02OTAgLSBFbmdsYW5kOkRBMjgtNTkyIC0gSGlzdG9yeTpEQTEyOS01OTIgLSBCeSBwZXJpb2Q6REEzMDAtNTkyIC0gTW9kZXJuLCAxNDg1LTpEQTQzMC00NjMgLSBMYXRlciBTdHVhcnRzIl19XQogIH19Cg==
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:00 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=5719401&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:00 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:56:22 GMT
      Etag:
      - '"YWYzYWM2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3486'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:00 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=9097203&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:01 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:54:12 GMT
      Etag:
      - '"N2E2ZjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2597'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:01 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=1116695&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:01 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:54:12 GMT
      Etag:
      - '"N2E2ZjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2981'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:01 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=10156872&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:01 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:56:22 GMT
      Etag:
      - '"YWYzYWM2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3013'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:01 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=lucene&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&q=%7B!lucene%7Did:(7981095)&qt=search&rows=20&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&spellcheck=false&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:44 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:54:12 GMT
      Etag:
      - '"N2E2ZjdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '1543'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: '{"responseHeader":{"zkConnected":true,"status":0,"QTime":95,"params":{"f.subject_content_facet.facet.limit":"6","f.fast_geo_facet.facet.limit":"6","f.lc_alpha_facet.facet.limit":"6","f.location.facet.sort":"index","f.online.facet.limit":"3","facet.query":["acquired_dt:[NOW-14DAY
        TO NOW-7DAY ]","acquired_dt:[NOW-30DAY TO NOW-7DAY ]","acquired_dt:[NOW-1YEAR
        TO NOW-7DAY]"],"defType":"lucene","f.lc_callnum_facet.facet.sort":"count","stats":"true","f.fast_genre_facet.facet.limit":"6","wt":"json","f.format.facet.limit":"11","stats.field":"pub_date_facet","f.author_facet.facet.limit":"6","facet.field":["online","format","author_facet","pub_date_facet","workid_facet","language_facet","fast_topic_facet","fast_geo_facet","fast_era_facet","fast_genre_facet","subject_content_facet","lc_alpha_facet","location","hierarchy_facet","authortitle_facet","lc_callnum_facet","collection"],"qt":"search","f.lc_callnum_facet.facet.limit":"-1","sort":"score
        desc, pub_date_sort desc, title_sort asc","rows":"20","f.location.facet.limit":"101","q":"{!lucene}id:(7981095)","f.fast_era_facet.facet.limit":"6","spellcheck":"false","f.fast_topic_facet.facet.limit":"6","facet":"true","f.language_facet.facet.limit":"6"}},"response":{"numFound":1,"start":0,"maxScore":14.015725,"docs":[{"title_display":"Shelter
        medicine for veterinarians and staff","fulltitle_display":"Shelter medicine
        for veterinarians and staff","subtitle_display":"","pub_info_display":["Ames,
        Iowa : Wiley-Blackwell, 2013."],"pub_date_display":["2013"],"language_display":["English."],"id":"7981095","edition_display":["2nd
        ed."],"holdings_record_display":["{\"id\":\"8372203\",\"modified_date\":\"20130531150530\",\"copy_number\":null,\"callnos\":[\"SF745
        .S46 2013\"],\"notes\":[],\"holdings_desc\":[],\"recent_holdings_desc\":[],\"supplemental_holdings_desc\":[],\"index_holdings_desc\":[],\"locations\":[{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}]}","{\"id\":\"8372204\",\"modified_date\":\"20130307133659\",\"copy_number\":\"2\",\"callnos\":[\"SF745
        .S46 2013\"],\"notes\":[],\"holdings_desc\":[],\"recent_holdings_desc\":[],\"supplemental_holdings_desc\":[],\"index_holdings_desc\":[],\"locations\":[{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}]}","{\"id\":\"8372205\",\"modified_date\":\"20130312155923\",\"copy_number\":\"3\",\"callnos\":[\"SF745
        .S46 2013\"],\"notes\":[],\"holdings_desc\":[],\"recent_holdings_desc\":[],\"supplemental_holdings_desc\":[],\"index_holdings_desc\":[],\"locations\":[{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}]}"],"item_record_display":["{\"copy_number\":\"1\",\"item_type_name\":\"4hrres\",\"item_id\":\"9237987\",\"year\":\"\",\"item_type_id\":\"29\",\"chron\":\"\",\"caption\":\"\",\"holds_placed\":\"0\",\"temp_location\":\"0\",\"on_reserve\":\"N\",\"item_enum\":\"\",\"item_sequence_number\":\"1\",\"temp_item_type_id\":\"0\",\"mfhd_id\":\"8372203\",\"recalls_placed\":\"0\",\"create_date\":\"2013-03-07
        13:35:29.0\",\"item_barcode\":\"31924109698385\",\"modify_date\":\"2013-05-31
        15:05:23.0\",\"perm_location\":{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}}","{\"copy_number\":\"2\",\"item_type_name\":\"4hrres\",\"item_id\":\"9237988\",\"year\":\"\",\"item_type_id\":\"29\",\"chron\":\"\",\"caption\":\"\",\"holds_placed\":\"0\",\"temp_location\":\"0\",\"on_reserve\":\"N\",\"item_enum\":\"\",\"item_sequence_number\":\"1\",\"temp_item_type_id\":\"0\",\"mfhd_id\":\"8372204\",\"recalls_placed\":\"0\",\"create_date\":\"2013-03-07
        13:37:19.0\",\"item_barcode\":\"31924109698393\",\"modify_date\":\"2013-07-25
        15:57:13.0\",\"perm_location\":{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}}","{\"copy_number\":\"3\",\"item_type_name\":\"4hrres\",\"item_id\":\"9237990\",\"year\":\"\",\"item_type_id\":\"29\",\"chron\":\"\",\"caption\":\"\",\"holds_placed\":\"0\",\"temp_location\":\"0\",\"on_reserve\":\"N\",\"item_enum\":\"\",\"item_sequence_number\":\"1\",\"temp_item_type_id\":\"0\",\"mfhd_id\":\"8372205\",\"recalls_placed\":\"0\",\"create_date\":\"2013-03-07
        13:39:12.0\",\"item_barcode\":\"31924109698401\",\"modify_date\":\"2013-07-25
        15:57:13.0\",\"perm_location\":{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}}"],"oclc_id_display":["793888942"],"availability_json":"{\"available\":true,\"availAt\":{\"Veterinary
        Library Core Resource (5 hour loan)\":\"SF745 .S46 2013\"}}","pub_date_facet":2013,"format":["Book"],"online":["At
        the Library"],"score":14.015725}]},"facet_counts":{"facet_queries":{},"facet_fields":{"online":["At
        the Library",1],"format":["Book",1],"author_facet":["Miller, Lila",1,"Zawistowski,
        Stephen",1],"pub_date_facet":["2013",1],"workid_facet":["351096337",1],"language_facet":["English",1],"fast_topic_facet":["Animal
        shelters",1,"Pets > Diseases",1,"Veterinary medicine",1],"fast_geo_facet":[],"fast_era_facet":[],"fast_genre_facet":[],"subject_content_facet":["Non-Fiction
        (books)",1],"lc_alpha_facet":[],"location":[],"hierarchy_facet":[],"authortitle_facet":[],"lc_callnum_facet":["S
        - Agriculture",1,"S - Agriculture:SF - Animal Culture",1,"S - Agriculture:SF
        - Animal Culture:SF600-1100 - Veterinary medicine",1],"collection":[]},"facet_ranges":{},"facet_intervals":{},"facet_heatmaps":{}},"stats":{"stats_fields":{"pub_date_facet":{"min":2013.0,"max":2013.0,"count":1,"missing":0,"sum":2013.0,"sumOfSquares":4052169.0,"mean":2013.0,"stddev":0.0}}}}

        '
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:44 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=lucene&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&q=%7B!lucene%7Did:(7981095)&qt=search&rows=20&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&spellcheck=false&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 25 Jul 2019 11:58:59 GMT
      Last-Modified:
      - Thu, 25 Jul 2019 11:56:22 GMT
      Etag:
      - '"OTQzYWM2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '1542'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: '{"responseHeader":{"zkConnected":true,"status":0,"QTime":65,"params":{"f.subject_content_facet.facet.limit":"6","f.fast_geo_facet.facet.limit":"6","f.lc_alpha_facet.facet.limit":"6","f.location.facet.sort":"index","f.online.facet.limit":"3","facet.query":["acquired_dt:[NOW-14DAY
        TO NOW-7DAY ]","acquired_dt:[NOW-30DAY TO NOW-7DAY ]","acquired_dt:[NOW-1YEAR
        TO NOW-7DAY]"],"defType":"lucene","f.lc_callnum_facet.facet.sort":"count","stats":"true","f.fast_genre_facet.facet.limit":"6","wt":"json","f.format.facet.limit":"11","stats.field":"pub_date_facet","f.author_facet.facet.limit":"6","facet.field":["online","format","author_facet","pub_date_facet","workid_facet","language_facet","fast_topic_facet","fast_geo_facet","fast_era_facet","fast_genre_facet","subject_content_facet","lc_alpha_facet","location","hierarchy_facet","authortitle_facet","lc_callnum_facet","collection"],"qt":"search","f.lc_callnum_facet.facet.limit":"-1","sort":"score
        desc, pub_date_sort desc, title_sort asc","rows":"20","f.location.facet.limit":"101","q":"{!lucene}id:(7981095)","f.fast_era_facet.facet.limit":"6","spellcheck":"false","f.fast_topic_facet.facet.limit":"6","facet":"true","f.language_facet.facet.limit":"6"}},"response":{"numFound":1,"start":0,"maxScore":14.017156,"docs":[{"title_display":"Shelter
        medicine for veterinarians and staff","fulltitle_display":"Shelter medicine
        for veterinarians and staff","subtitle_display":"","pub_info_display":["Ames,
        Iowa : Wiley-Blackwell, 2013."],"pub_date_display":["2013"],"language_display":["English."],"id":"7981095","edition_display":["2nd
        ed."],"holdings_record_display":["{\"id\":\"8372203\",\"modified_date\":\"20130531150530\",\"copy_number\":null,\"callnos\":[\"SF745
        .S46 2013\"],\"notes\":[],\"holdings_desc\":[],\"recent_holdings_desc\":[],\"supplemental_holdings_desc\":[],\"index_holdings_desc\":[],\"locations\":[{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}]}","{\"id\":\"8372204\",\"modified_date\":\"20130307133659\",\"copy_number\":\"2\",\"callnos\":[\"SF745
        .S46 2013\"],\"notes\":[],\"holdings_desc\":[],\"recent_holdings_desc\":[],\"supplemental_holdings_desc\":[],\"index_holdings_desc\":[],\"locations\":[{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}]}","{\"id\":\"8372205\",\"modified_date\":\"20130312155923\",\"copy_number\":\"3\",\"callnos\":[\"SF745
        .S46 2013\"],\"notes\":[],\"holdings_desc\":[],\"recent_holdings_desc\":[],\"supplemental_holdings_desc\":[],\"index_holdings_desc\":[],\"locations\":[{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}]}"],"item_record_display":["{\"copy_number\":\"1\",\"item_type_name\":\"4hrres\",\"item_id\":\"9237987\",\"year\":\"\",\"item_type_id\":\"29\",\"chron\":\"\",\"caption\":\"\",\"holds_placed\":\"0\",\"temp_location\":\"0\",\"on_reserve\":\"N\",\"item_enum\":\"\",\"item_sequence_number\":\"1\",\"temp_item_type_id\":\"0\",\"mfhd_id\":\"8372203\",\"recalls_placed\":\"0\",\"create_date\":\"2013-03-07
        13:35:29.0\",\"item_barcode\":\"31924109698385\",\"modify_date\":\"2013-05-31
        15:05:23.0\",\"perm_location\":{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}}","{\"copy_number\":\"2\",\"item_type_name\":\"4hrres\",\"item_id\":\"9237988\",\"year\":\"\",\"item_type_id\":\"29\",\"chron\":\"\",\"caption\":\"\",\"holds_placed\":\"0\",\"temp_location\":\"0\",\"on_reserve\":\"N\",\"item_enum\":\"\",\"item_sequence_number\":\"1\",\"temp_item_type_id\":\"0\",\"mfhd_id\":\"8372204\",\"recalls_placed\":\"0\",\"create_date\":\"2013-03-07
        13:37:19.0\",\"item_barcode\":\"31924109698393\",\"modify_date\":\"2013-07-25
        15:57:13.0\",\"perm_location\":{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}}","{\"copy_number\":\"3\",\"item_type_name\":\"4hrres\",\"item_id\":\"9237990\",\"year\":\"\",\"item_type_id\":\"29\",\"chron\":\"\",\"caption\":\"\",\"holds_placed\":\"0\",\"temp_location\":\"0\",\"on_reserve\":\"N\",\"item_enum\":\"\",\"item_sequence_number\":\"1\",\"temp_item_type_id\":\"0\",\"mfhd_id\":\"8372205\",\"recalls_placed\":\"0\",\"create_date\":\"2013-03-07
        13:39:12.0\",\"item_barcode\":\"31924109698401\",\"modify_date\":\"2013-07-25
        15:57:13.0\",\"perm_location\":{\"code\":\"vet,core\",\"number\":135,\"name\":\"Veterinary
        Library Core Resource (5 hour loan)\",\"library\":\"Veterinary Library\"}}"],"oclc_id_display":["793888942"],"availability_json":"{\"available\":true,\"availAt\":{\"Veterinary
        Library Core Resource (5 hour loan)\":\"SF745 .S46 2013\"}}","pub_date_facet":2013,"format":["Book"],"online":["At
        the Library"],"score":14.017156}]},"facet_counts":{"facet_queries":{},"facet_fields":{"online":["At
        the Library",1],"format":["Book",1],"author_facet":["Miller, Lila",1,"Zawistowski,
        Stephen",1],"pub_date_facet":["2013",1],"workid_facet":["351096337",1],"language_facet":["English",1],"fast_topic_facet":["Animal
        shelters",1,"Pets > Diseases",1,"Veterinary medicine",1],"fast_geo_facet":[],"fast_era_facet":[],"fast_genre_facet":[],"subject_content_facet":["Non-Fiction
        (books)",1],"lc_alpha_facet":[],"location":[],"hierarchy_facet":[],"authortitle_facet":[],"lc_callnum_facet":["S
        - Agriculture",1,"S - Agriculture:SF - Animal Culture",1,"S - Agriculture:SF
        - Animal Culture:SF600-1100 - Veterinary medicine",1],"collection":[]},"facet_ranges":{},"facet_intervals":{},"facet_heatmaps":{}},"stats":{"stats_fields":{"pub_date_facet":{"min":2013.0,"max":2013.0,"count":1,"missing":0,"sum":2013.0,"sumOfSquares":4052169.0,"mean":2013.0,"stddev":0.0}}}}

        '
    http_version: 
  recorded_at: Thu, 25 Jul 2019 11:58:59 GMT
recorded_with: VCR 4.0.0
