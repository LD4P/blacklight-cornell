---
http_interactions:
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=2083253&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 17 Jul 2019 17:25:09 GMT
      Last-Modified:
      - Wed, 17 Jul 2019 17:24:55 GMT
      Etag:
      - '"ODc2YTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3277'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 17 Jul 2019 17:25:09 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8753977&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:45:07 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:44:28 GMT
      Etag:
      - '"MmM5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '5140'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:45:07 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=6041&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:45:15 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:44:37 GMT
      Etag:
      - '"N2FlN2EwMDAwMDAwMDAwU29scg=="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2809'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:45:16 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=edismax&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&mm=1&q=%22Catholic%20Church.%20Pope%20(1939-1958%20:%20Pius%20XII)%22&qt=search&rows=20&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:45:17 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:44:28 GMT
      Etag:
      - '"OWZhYjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '6932'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:45:23 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4442&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:45:49 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:45:22 GMT
      Etag:
      - '"M2ZhYjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2578'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:45:49 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=edismax&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&mm=1&q=((title_quoted:%22Life%20of%20Alexander%20Wilson.%201834.%22)%20AND%20(author_quoted:%22Peabody,%20William%20Bourn%20Oliver,%201799-1847.%22))%20&qt=search&rows=20&search_field=advanced&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:45:50 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:45:22 GMT
      Etag:
      - '"ZWM5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '1368'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: '{"responseHeader":{"zkConnected":true,"status":0,"QTime":3536,"params":{"f.subject_content_facet.facet.limit":"6","f.fast_geo_facet.facet.limit":"6","f.lc_alpha_facet.facet.limit":"6","f.location.facet.sort":"index","f.online.facet.limit":"3","facet.query":["acquired_dt:[NOW-14DAY
        TO NOW-7DAY ]","acquired_dt:[NOW-30DAY TO NOW-7DAY ]","acquired_dt:[NOW-1YEAR
        TO NOW-7DAY]"],"defType":"edismax","f.lc_callnum_facet.facet.sort":"count","stats":"true","f.fast_genre_facet.facet.limit":"6","wt":"json","f.format.facet.limit":"11","stats.field":"pub_date_facet","mm":"1","f.author_facet.facet.limit":"6","facet.field":["online","format","author_facet","pub_date_facet","workid_facet","language_facet","fast_topic_facet","fast_geo_facet","fast_era_facet","fast_genre_facet","subject_content_facet","lc_alpha_facet","location","hierarchy_facet","authortitle_facet","lc_callnum_facet","collection"],"qt":"search","f.lc_callnum_facet.facet.limit":"-1","sort":"score
        desc, pub_date_sort desc, title_sort asc","rows":"20","f.location.facet.limit":"101","q":"((title_quoted:\"Life
        of Alexander Wilson. 1834.\") AND (author_quoted:\"Peabody, William Bourn
        Oliver, 1799-1847.\")) ","f.fast_era_facet.facet.limit":"6","f.fast_topic_facet.facet.limit":"6","facet":"true","f.language_facet.facet.limit":"6","search_field":"advanced"}},"response":{"numFound":1,"start":0,"maxScore":3811.1367,"docs":[{"title_display":"Lives
        of Alexander Wilson and Captain John Smith","fulltitle_display":"Lives of
        Alexander Wilson and Captain John Smith","subtitle_display":"","pub_info_display":["Boston
        : Hilliard, Gray ; London : R. J. Kennett, 1834."],"pub_date_display":["1834"],"language_display":["English."],"id":"4442","holdings_record_display":["{\"id\":\"9764\",\"modified_date\":null,\"copy_number\":null,\"callnos\":[\"E176
        .S73 v.2\"],\"notes\":[],\"holdings_desc\":[],\"recent_holdings_desc\":[],\"supplemental_holdings_desc\":[],\"index_holdings_desc\":[],\"locations\":[{\"code\":\"olin\",\"number\":99,\"name\":\"Olin
        Library\",\"library\":\"Olin Library\"}]}"],"oclc_id_display":["6920063"],"availability_json":"{\"available\":true,\"availAt\":{\"Olin
        Library\":\"E176 .S73 v.2\"}}","pub_date_facet":1834,"format":["Book"],"online":["At
        the Library"],"score":3811.1367}]},"facet_counts":{"facet_queries":{},"facet_fields":{"online":["At
        the Library",1],"format":["Book",1],"author_facet":["Hillard, George Stillman,
        1808-1879",1,"Peabody, William Bourn Oliver, 1799-1847",1],"pub_date_facet":["1834",1],"workid_facet":[],"language_facet":["English",1],"fast_topic_facet":["Explorers",1,"Ornithologists",1,"Smith,
        John, 1580-1631",1,"Wilson, Alexander, 1766-1813",1],"fast_geo_facet":["United
        States",1],"fast_era_facet":[],"fast_genre_facet":["Biography",1],"subject_content_facet":["Non-Fiction
        (books)",1],"lc_alpha_facet":[],"location":["Olin Library",1,"Olin Library
        > Main Collection",1],"hierarchy_facet":[],"authortitle_facet":["Hillard,
        George Stillman, 1808-1879. | Life of Captain John Smith. 1834",1,"Peabody,
        William Bourn Oliver, 1799-1847. | Life of Alexander Wilson. 1834",1],"lc_callnum_facet":["E-F
        - History of the Americas",1,"E-F - History of the Americas:E151-909 - United
        States",1,"E-F - History of the Americas:E151-909 - United States:E171-183.9
        - History",1,"E-F - History of the Americas:E151-909 - United States:E171-183.9
        - History:E171-180 - General",1,"E-F - History of the Americas:E151-909 -
        United States:E171-183.9 - History:E171-180 - General:E176-176.8 - Biography",1],"collection":[]},"facet_ranges":{},"facet_intervals":{},"facet_heatmaps":{}},"stats":{"stats_fields":{"pub_date_facet":{"min":1834.0,"max":1834.0,"count":1,"missing":0,"sum":1834.0,"sumOfSquares":3363556.0,"mean":1834.0,"stddev":0.0}}}}

        '
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:45:54 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=3749&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:45:58 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:45:51 GMT
      Etag:
      - '"ZDdhZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2757'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:45:58 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=30000&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:46:17 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:46:13 GMT
      Etag:
      - '"ZmZhYjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2818'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:46:17 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8258651&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:47:57 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:47:45 GMT
      Etag:
      - '"NjA2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3201'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:47:57 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4759&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:00 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:47:56 GMT
      Etag:
      - '"YWE5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2573'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:01 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=edismax&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&mm=1&q=(title:Mangraithammasat%20AND%20author:Thailand.)%20&qt=search&rows=20&search_field=advanced&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:01 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:47:54 GMT
      Etag:
      - '"OTg2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2922'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:03 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4759&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:04 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:47:52 GMT
      Etag:
      - '"OTA2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2573'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:04 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=edismax&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&mm=1&q=(title:Mangraithammasat%20AND%20author:Thailand.)%20&qt=search&rows=20&search_field=advanced&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:05 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:00 GMT
      Etag:
      - '"OWE5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2922'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:06 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=115093&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:11 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:47:52 GMT
      Etag:
      - '"OTA2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2416'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:11 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=45766&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:15 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:10 GMT
      Etag:
      - '"MjQ2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2756'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:15 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=115235&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:19 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:10 GMT
      Etag:
      - '"NjlmNDYwMDAwMDAwMDAwU29scg=="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3988'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:19 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=115115&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:22 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:11 GMT
      Etag:
      - '"ZjA2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3069'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:22 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=115208&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:26 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:16 GMT
      Etag:
      - '"NDY5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2965'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:26 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=115113&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:30 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:24 GMT
      Etag:
      - '"NzQ2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:30 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=116073&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:38 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:32 GMT
      Etag:
      - '"MTg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '5791'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:38 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=118111&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:50 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:40 GMT
      Etag:
      - '"ZTlmNDYwMDAwMDAwMDAwU29scg=="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3346'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:50 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=116482&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:54 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:40 GMT
      Etag:
      - '"ZTlmNDYwMDAwMDAwMDAwU29scg=="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3313'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:54 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=115317&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:48:58 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2568'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:48:58 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=115621&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:02 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:56 GMT
      Etag:
      - '"NWM2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '7651'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:02 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=301950&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:14 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:56 GMT
      Etag:
      - '"Y2U5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2290'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:14 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=264095&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:18 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3164'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:18 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=115453&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:26 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:56 GMT
      Etag:
      - '"Y2U5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2239'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJyZXNwb25zZSI6eyJudW1Gb3VuZCI6MSwic3RhcnQiOjAsImRvY3MiOlsKICAgICAgewogICAgICAgICJyZWNvcmRfZGF0ZXNfZGlzcGxheSI6WyJ7XCJiaWJcIjoxNDE0OTU0MDgzMDAwLFwiaG9sZGluZ3NcIjp7XCIxNTA4NzJcIjoxMDI2OTIwNTkyMDAwfX0iXSwKICAgICAgICAiYXV0aG9yX2Rpc3BsYXkiOiJSb3lhbCBJbnN0aXR1dGUgb2YgQ2hlbWlzdHJ5LiIsCiAgICAgICAgImF1dGhvcl9qc29uIjpbIntcIm5hbWUxXCI6XCJSb3lhbCBJbnN0aXR1dGUgb2YgQ2hlbWlzdHJ5LlwiLFwic2VhcmNoMVwiOlwiUm95YWwgSW5zdGl0dXRlIG9mIENoZW1pc3RyeS5cIixcInJlbGF0b3JcIjpcIlwiLFwidHlwZVwiOlwiQ29ycG9yYXRlIE5hbWVcIixcImF1dGhvcml6ZWRGb3JtXCI6dHJ1ZX0iXSwKICAgICAgICAidGl0bGVfc21zX2NvbXBhdF9kaXNwbGF5IjpbIlJJQyByZXZpZXdzIl0sCiAgICAgICAgInRpdGxlXzJsZXR0ZXJfcyI6WyJyaSJdLAogICAgICAgICJ0aXRsZV8xbGV0dGVyX3MiOlsiciJdLAogICAgICAgICJ0aXRsZV9kaXNwbGF5IjoiUklDIHJldmlld3MiLAogICAgICAgICJmdWxsdGl0bGVfZGlzcGxheSI6IlJJQyByZXZpZXdzIiwKICAgICAgICAic3VidGl0bGVfZGlzcGxheSI6IiIsCiAgICAgICAgInN1YmplY3RfanNvbiI6WyJbe1wic3ViamVjdFwiOlwiQ2hlbWlzdHJ5XCIsXCJhdXRob3JpemVkXCI6dHJ1ZSxcInR5cGVcIjpcIlRvcGljYWwgVGVybVwifSx7XCJzdWJqZWN0XCI6XCJQZXJpb2RpY2Fscy5cIixcImF1dGhvcml6ZWRcIjp0cnVlfV0iXSwKICAgICAgICAic3ViamVjdF9kaXNwbGF5IjpbIkNoZW1pc3RyeSA+IFBlcmlvZGljYWxzIl0sCiAgICAgICAgImZhc3RfYiI6dHJ1ZSwKICAgICAgICAicHViX2luZm9fZGlzcGxheSI6WyJbTG9uZG9uXSJdLAogICAgICAgICJwdWJwbGFjZV9kaXNwbGF5IjpbIltMb25kb25dIl0sCiAgICAgICAgImRhdGFiYXNlX2IiOmZhbHNlLAogICAgICAgICJsYW5ndWFnZV9kaXNwbGF5IjpbIkVuZ2xpc2guIl0sCiAgICAgICAgIm1lcmdlcl9kaXNwbGF5IjpbIiBDaGVtaWNhbCBTb2NpZXR5IChHcmVhdCBCcml0YWluKS4gfCBRdWFydGVybHkgcmV2aWV3cyIsCiAgICAgICAgICAiIENoZW1pY2FsIFNvY2lldHkgKEdyZWF0IEJyaXRhaW4pLiB8IENoZW1pY2FsIFNvY2lldHkgcmV2aWV3cyJdLAogICAgICAgICJtYXJjX2Rpc3BsYXkiOiI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCc/PjxyZWNvcmQgeG1sbnM9XCJodHRwOi8vd3d3LmxvYy5nb3YvTUFSQzIxL3NsaW1cIj48bGVhZGVyPjAxMDMwY2FzIGEyMjAwMzAxICAgNDUwMDwvbGVhZGVyPjxjb250cm9sZmllbGQgdGFnPVwiMDAxXCI+MTE1NDUzPC9jb250cm9sZmllbGQ+PGNvbnRyb2xmaWVsZCB0YWc9XCIwMDVcIj4yMDE0MTEwMjEzNDgwMy4wPC9jb250cm9sZmllbGQ+PGNvbnRyb2xmaWVsZCB0YWc9XCIwMDhcIj43NDAzMTNkMTk2ODE5NzFlbmtmcsKgcMKgwqDCoMKgwqDCoMKgMMKgwqDCoGEwZW5nwqB1PC9jb250cm9sZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMzVcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+KENTdFJMSU4pTllDWDA4Mjk2ODJTPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjAzNVwiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj4oTklDKW5vdGlzQUFNNjg0MTwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMzVcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+KE9Db0xDKTgyOTY4Mjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMzVcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MTE1NDUzPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjA0MFwiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImNcIj5PQVU8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZFwiPk5JQzwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJkXCI+Q1N0UkxJTjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIxMTBcIiBpbmQxPVwiMlwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+Um95YWwgSW5zdGl0dXRlIG9mIENoZW1pc3RyeS48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMjQ1XCIgaW5kMT1cIjFcIiBpbmQyPVwiMFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlJJQyByZXZpZXdzLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIyNDZcIiBpbmQxPVwiMVwiIGluZDI9XCIwXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+Ui5JLkMuIHJldmlld3M8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMjYwXCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPltMb25kb25dPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjMwMFwiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj40IHYuPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImJcIj5pbGx1cy48L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiY1wiPjIxIGNtLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIzNjJcIiBpbmQxPVwiMFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+di4gMS00OyBGZWIuIDE5NjgtT2N0LiAxOTcxLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI1ODBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+TWVyZ2VkIHdpdGggUXVhcnRlcmx5IHJldmlld3Mgb2YgdGhlIENoZW1pY2FsIFNvY2lldHksIExvbmRvbiwgdG8gZm9ybSBDaGVtaWNhbCBTb2NpZXR5IHJldmlld3MuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MFwiIGluZDE9XCIgXCIgaW5kMj1cIjBcIj48c3ViZmllbGQgY29kZT1cImFcIj5DaGVtaXN0cnk8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwieFwiPlBlcmlvZGljYWxzLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI2NTBcIiBpbmQxPVwiIFwiIGluZDI9XCI3XCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+Q2hlbWlzdHJ5PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj5mYXN0PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjBcIj4oT0NvTEMpZnN0MDA4NTMzNDQ8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjU1XCIgaW5kMT1cIiBcIiBpbmQyPVwiN1wiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlBlcmlvZGljYWxzPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj5mYXN0PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjBcIj4oT0NvTEMpZnN0MDE0MTE2NDE8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNzg1XCIgaW5kMT1cIjBcIiBpbmQyPVwiN1wiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkNoZW1pY2FsIFNvY2lldHkgKEdyZWF0IEJyaXRhaW4pLjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ0XCI+UXVhcnRlcmx5IHJldmlld3M8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNzg1XCIgaW5kMT1cIjBcIiBpbmQyPVwiN1wiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkNoZW1pY2FsIFNvY2lldHkgKEdyZWF0IEJyaXRhaW4pLjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ0XCI+Q2hlbWljYWwgU29jaWV0eSByZXZpZXdzPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjkwNVwiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj4xOTkxMTAyNDEyMDAwMC4wPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjk0OFwiIGluZDE9XCIyXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj4yMDE0MTEwMjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+bTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJkXCI+YmF0Y2g8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZVwiPmx0czwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ4XCI+YWRkZmFzdDwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NTBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJsXCI+UEhZU0M8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlFEMTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+LlIxMTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJpXCI+MTAvMTgvODUgTjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PC9yZWNvcmQ+IiwKICAgICAgICAiaWQiOiIxMTU0NTMiLAogICAgICAgICJiaWJpZF9kaXNwbGF5IjpbIjExNTQ1M3wyMDE0MTEwMjEzNDgwMyJdLAogICAgICAgICJ0aXRsZV9vdGhlcl9kaXNwbGF5IjpbIlIuSS5DLiByZXZpZXdzIl0sCiAgICAgICAgImRlc2NyaXB0aW9uX2Rpc3BsYXkiOlsiNCB2LiBpbGx1cy4gMjEgY20uIl0sCiAgICAgICAgIm5vdGVzIjpbInYuIDEtNDsgRmViLiAxOTY4LU9jdC4gMTk3MS4iLAogICAgICAgICAgIk1lcmdlZCB3aXRoIFF1YXJ0ZXJseSByZXZpZXdzIG9mIHRoZSBDaGVtaWNhbCBTb2NpZXR5LCBMb25kb24sIHRvIGZvcm0gQ2hlbWljYWwgU29jaWV0eSByZXZpZXdzLiJdLAogICAgICAgICJob2xkaW5nc19kaXNwbGF5IjpbIjE1MDg3MnwyMDAyMDcxNzExNDMxMiJdLAogICAgICAgICJob2xkaW5nc19yZWNvcmRfZGlzcGxheSI6WyJ7XCJpZFwiOlwiMTUwODcyXCIsXCJtb2RpZmllZF9kYXRlXCI6XCIyMDAyMDcxNzExNDMxMlwiLFwiY29weV9udW1iZXJcIjpudWxsLFwiY2FsbG5vc1wiOltcIlFEMSAuUjExXCJdLFwibm90ZXNcIjpbXSxcImhvbGRpbmdzX2Rlc2NcIjpbXCJ2LjEtNCAoMTk2OC0xOTcxKVwiXSxcInJlY2VudF9ob2xkaW5nc19kZXNjXCI6W10sXCJzdXBwbGVtZW50YWxfaG9sZGluZ3NfZGVzY1wiOltdLFwiaW5kZXhfaG9sZGluZ3NfZGVzY1wiOltdLFwibG9jYXRpb25zXCI6W3tcImNvZGVcIjpcInBoeXMsYW54XCIsXCJudW1iZXJcIjoxMTYsXCJuYW1lXCI6XCJMaWJyYXJ5IEFubmV4XCIsXCJsaWJyYXJ5XCI6XCJMaWJyYXJ5IEFubmV4XCJ9XX0iXSwKICAgICAgICAiY2FsbG51bV9zb3J0IjoiUUQxIC5SMTEiLAogICAgICAgICJpdGVtX3JlY29yZF9kaXNwbGF5IjpbIntcImNvcHlfbnVtYmVyXCI6XCIxXCIsXCJpdGVtX3R5cGVfbmFtZVwiOlwic2VyaWFsXCIsXCJpdGVtX2lkXCI6XCIxNzgzMTRcIixcInllYXJcIjpcIlwiLFwiaXRlbV90eXBlX2lkXCI6XCIyXCIsXCJjaHJvblwiOlwiMTk2OC0xOTY5XCIsXCJjYXB0aW9uXCI6XCJcIixcImhvbGRzX3BsYWNlZFwiOlwiMFwiLFwidGVtcF9sb2NhdGlvblwiOlwiMFwiLFwib25fcmVzZXJ2ZVwiOlwiTlwiLFwiaXRlbV9lbnVtXCI6XCJ2LjEtMlwiLFwiaXRlbV9zZXF1ZW5jZV9udW1iZXJcIjpcIjFcIixcInRlbXBfaXRlbV90eXBlX2lkXCI6XCIwXCIsXCJtZmhkX2lkXCI6XCIxNTA4NzJcIixcInJlY2FsbHNfcGxhY2VkXCI6XCIwXCIsXCJjcmVhdGVfZGF0ZVwiOlwiMjAwMC0wNS0zMSAwMDowMDowMC4wXCIsXCJpdGVtX2JhcmNvZGVcIjpcIjMxOTI0MDA0MjUxMDkwXCIsXCJtb2RpZnlfZGF0ZVwiOlwiMjAwNi0xMi0xNSAwMTo0MTo1OC4wXCIsXCJwZXJtX2xvY2F0aW9uXCI6e1wiY29kZVwiOlwicGh5cyxhbnhcIixcIm51bWJlclwiOjExNixcIm5hbWVcIjpcIkxpYnJhcnkgQW5uZXhcIixcImxpYnJhcnlcIjpcIkxpYnJhcnkgQW5uZXhcIn19IiwKICAgICAgICAgICJ7XCJjb3B5X251bWJlclwiOlwiMVwiLFwiaXRlbV90eXBlX25hbWVcIjpcInNlcmlhbFwiLFwiaXRlbV9pZFwiOlwiMTc4MzE1XCIsXCJ5ZWFyXCI6XCJcIixcIml0ZW1fdHlwZV9pZFwiOlwiMlwiLFwiY2hyb25cIjpcIjE5NzAtMTk3MVwiLFwiY2FwdGlvblwiOlwiXCIsXCJob2xkc19wbGFjZWRcIjpcIjBcIixcInRlbXBfbG9jYXRpb25cIjpcIjBcIixcIm9uX3Jlc2VydmVcIjpcIk5cIixcIml0ZW1fZW51bVwiOlwidi4zLTRcIixcIml0ZW1fc2VxdWVuY2VfbnVtYmVyXCI6XCIyXCIsXCJ0ZW1wX2l0ZW1fdHlwZV9pZFwiOlwiMFwiLFwibWZoZF9pZFwiOlwiMTUwODcyXCIsXCJyZWNhbGxzX3BsYWNlZFwiOlwiMFwiLFwiY3JlYXRlX2RhdGVcIjpcIjIwMDAtMDUtMzEgMDA6MDA6MDAuMFwiLFwiaXRlbV9iYXJjb2RlXCI6XCIzMTkyNDA1NjQyMDM2MVwiLFwibW9kaWZ5X2RhdGVcIjpcIjIwMDYtMTItMTUgMDE6NDE6NTguMFwiLFwicGVybV9sb2NhdGlvblwiOntcImNvZGVcIjpcInBoeXMsYW54XCIsXCJudW1iZXJcIjoxMTYsXCJuYW1lXCI6XCJMaWJyYXJ5IEFubmV4XCIsXCJsaWJyYXJ5XCI6XCJMaWJyYXJ5IEFubmV4XCJ9fSJdLAogICAgICAgICJpdGVtX2Rpc3BsYXkiOlsiMTc4MzE0fDE1MDg3MnwyMDA2MTIxNTAxNDE1OCIsCiAgICAgICAgICAiMTc4MzE1fDE1MDg3MnwyMDA2MTIxNTAxNDE1OCJdLAogICAgICAgICJvdGhlcl9pZF9kaXNwbGF5IjpbIihDU3RSTElOKU5ZQ1gwODI5NjgyUyIsCiAgICAgICAgICAiKE5JQylub3Rpc0FBTTY4NDEiLAogICAgICAgICAgIjExNTQ1MyJdLAogICAgICAgICJvY2xjX2lkX2Rpc3BsYXkiOlsiODI5NjgyIl0sCiAgICAgICAgImhvbGRpbmdzX2pzb24iOiJ7XCIxNTA4NzJcIjp7XCJob2xkaW5nc1wiOltcInYuMS00ICgxOTY4LTE5NzEpXCJdLFwibG9jYXRpb25cIjp7XCJjb2RlXCI6XCJwaHlzLGFueFwiLFwibnVtYmVyXCI6MTE2LFwibmFtZVwiOlwiTGlicmFyeSBBbm5leFwiLFwibGlicmFyeVwiOlwiTGlicmFyeSBBbm5leFwiLFwiaG91cnNDb2RlXCI6XCJhbm5leFwifSxcImNhbGxcIjpcIlFEMSAuUjExXCIsXCJjaXJjXCI6dHJ1ZSxcImRhdGVcIjoxMDI2OTIwNTkyLFwiaXRlbXNcIjp7XCJjb3VudFwiOjIsXCJhdmFpbFwiOjJ9fX0iLAogICAgICAgICJhdmFpbGFiaWxpdHlfanNvbiI6IntcImF2YWlsYWJsZVwiOnRydWUsXCJhdmFpbEF0XCI6e1wiTGlicmFyeSBBbm5leFwiOlwiUUQxIC5SMTFcIn19IiwKICAgICAgICAiaXRlbXNfanNvbiI6IntcIjE1MDg3MlwiOlt7XCJpZFwiOjE3ODMxNCxcImNvcHlcIjoxLFwic2VxdWVuY2VcIjoxLFwiZW51bVwiOlwidi4xLTJcIixcImNocm9uXCI6XCIxOTY4LTE5NjlcIixcImxvY2F0aW9uXCI6e1wiY29kZVwiOlwicGh5cyxhbnhcIixcIm51bWJlclwiOjExNixcIm5hbWVcIjpcIkxpYnJhcnkgQW5uZXhcIixcImxpYnJhcnlcIjpcIkxpYnJhcnkgQW5uZXhcIixcImhvdXJzQ29kZVwiOlwiYW5uZXhcIn0sXCJjaXJjR3JwXCI6e1wiNVwiOlwiQW5uZXggQ2lyYyBHcm91cFwifSxcInR5cGVcIjp7XCJpZFwiOjIsXCJuYW1lXCI6XCJzZXJpYWxcIn0sXCJzdGF0dXNcIjp7XCJhdmFpbGFibGVcIjp0cnVlLFwiY29kZVwiOntcIjFcIjpcIk5vdCBDaGFyZ2VkXCJ9fSxcImRhdGVcIjoxMTY2MTY0OTE4fSx7XCJpZFwiOjE3ODMxNSxcImNvcHlcIjoxLFwic2VxdWVuY2VcIjoyLFwiZW51bVwiOlwidi4zLTRcIixcImNocm9uXCI6XCIxOTcwLTE5NzFcIixcImxvY2F0aW9uXCI6e1wiY29kZVwiOlwicGh5cyxhbnhcIixcIm51bWJlclwiOjExNixcIm5hbWVcIjpcIkxpYnJhcnkgQW5uZXhcIixcImxpYnJhcnlcIjpcIkxpYnJhcnkgQW5uZXhcIixcImhvdXJzQ29kZVwiOlwiYW5uZXhcIn0sXCJjaXJjR3JwXCI6e1wiNVwiOlwiQW5uZXggQ2lyYyBHcm91cFwifSxcInR5cGVcIjp7XCJpZFwiOjIsXCJuYW1lXCI6XCJzZXJpYWxcIn0sXCJzdGF0dXNcIjp7XCJhdmFpbGFibGVcIjp0cnVlLFwiY29kZVwiOntcIjFcIjpcIk5vdCBDaGFyZ2VkXCJ9fSxcImRhdGVcIjoxMTY2MTY0OTE4fV19IiwKICAgICAgICAibXVsdGl2b2xfYiI6dHJ1ZSwKICAgICAgICAiZW51bV9iIjp0cnVlLAogICAgICAgICJjYWxsbnVtYmVyX2Rpc3BsYXkiOlsiUUQxIC5SMTEiXSwKICAgICAgICAiX3ZlcnNpb25fIjoxNjM1MDgxMTg4MjkxOTAzNDg4LAogICAgICAgICJ0aW1lc3RhbXAiOiIyMDE5LTA1LTMxVDIwOjM1OjM0LjUwNVoiLAogICAgICAgICJwdWJfZGF0ZV9mYWNldCI6MTk2OCwKICAgICAgICAic291cmNlIjoiVm95YWdlciIsCiAgICAgICAgInN1YmplY3RfZ2Vucl9maWxpbmciOlsicGVyaW9kaWNhbHMiXSwKICAgICAgICAidHlwZSI6IkNhdGFsb2ciLAogICAgICAgICJmb3JtYXRfbWFpbl9mYWNldCI6IkpvdXJuYWwvUGVyaW9kaWNhbCIsCiAgICAgICAgImZhc3RfZ2VucmVfZmFjZXQiOlsiUGVyaW9kaWNhbHMiXSwKICAgICAgICAiYXV0aG9ydGl0bGVfZmFjZXQiOlsiUm95YWwgSW5zdGl0dXRlIG9mIENoZW1pc3RyeS4gfCBSSUMgcmV2aWV3cyJdLAogICAgICAgICJzdWJqZWN0X3RvcGljX2ZpbGluZyI6WyJjaGVtaXN0cnkiLAogICAgICAgICAgImNoZW1pc3RyeSAwMDAwIHBlcmlvZGljYWxzIl0sCiAgICAgICAgImF1dGhvcnRpdGxlX2ZpbGluZyI6WyJyb3lhbCBpbnN0aXR1dGUgb2YgY2hlbWlzdHJ5IDAwMDAgcmljIHJldmlld3MiXSwKICAgICAgICAibG9jYXRpb25fZmFjZXQiOlsiTGlicmFyeSBBbm5leCJdLAogICAgICAgICJmYXN0X3RvcGljX2ZhY2V0IjpbIkNoZW1pc3RyeSJdLAogICAgICAgICJmb3JtYXQiOlsiSm91cm5hbC9QZXJpb2RpY2FsIl0sCiAgICAgICAgImF1dGhvcl9jb3JwX2ZpbGluZyI6WyJyb3lhbCBpbnN0aXR1dGUgb2YgY2hlbWlzdHJ5Il0sCiAgICAgICAgInN1YmplY3RfdG9waWNfZmFjZXQiOlsiQ2hlbWlzdHJ5IiwKICAgICAgICAgICJDaGVtaXN0cnkgPiBQZXJpb2RpY2FscyJdLAogICAgICAgICJzdWJqZWN0X2dlbnJfZmFjZXQiOlsiUGVyaW9kaWNhbHMiXSwKICAgICAgICAibGFuZ3VhZ2VfZmFjZXQiOlsiRW5nbGlzaCJdLAogICAgICAgICJvbmxpbmUiOlsiQXQgdGhlIExpYnJhcnkiXSwKICAgICAgICAiYXV0aG9yX2ZhY2V0IjpbIlJveWFsIEluc3RpdHV0ZSBvZiBDaGVtaXN0cnkiXSwKICAgICAgICAibG9jYXRpb24iOlsiTGlicmFyeSBBbm5leCJdLAogICAgICAgICJsY19jYWxsbnVtX2ZhY2V0IjpbIlEgLSBTY2llbmNlIiwKICAgICAgICAgICJRIC0gU2NpZW5jZTpRRCAtIENoZW1pc3RyeSIsCiAgICAgICAgICAiUSAtIFNjaWVuY2U6UUQgLSBDaGVtaXN0cnk6UUQxLTY1IC0gR2VuZXJhbCAoaW5jbCBhbGNoZW15KSJdfV0KICB9fQo=
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:26 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=607&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:34 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:56 GMT
      Etag:
      - '"Y2U5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3208'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:34 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=608&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:38 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2531'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:38 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8212979&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:42 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '4527'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:42 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4723&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:50 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:49:37 GMT
      Etag:
      - '"YmM2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3321'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:50 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4767&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:54 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:49:37 GMT
      Etag:
      - '"YmM2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2866'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:54 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4768&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:49:58 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:49:37 GMT
      Etag:
      - '"YmM2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2473'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:49:58 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4626&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:06 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2605'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:06 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=5250067&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:10 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:49:58 GMT
      Etag:
      - '"OWU5ZjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2700'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:10 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4629&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:15 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:08 GMT
      Etag:
      - '"YzI2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2618'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:15 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8881455&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:19 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '4584'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJyZXNwb25zZSI6eyJudW1Gb3VuZCI6MSwic3RhcnQiOjAsImRvY3MiOlsKICAgICAgewogICAgICAgICJyZWNvcmRfZGF0ZXNfZGlzcGxheSI6WyJ7XCJiaWJcIjoxNTU1MTE5OTQ1MDAwLFwiaG9sZGluZ3NcIjp7XCI5MjE5ODE2XCI6MTQyOTA0MTMzNTAwMH19Il0sCiAgICAgICAgImF1dGhvcl9kaXNwbGF5IjoiTWF0c3VpLCBOb3JpYXRzdS4sIGVkaXRvciIsCiAgICAgICAgImF1dGhvcl9qc29uIjpbIntcIm5hbWUxXCI6XCJNYXRzdWksIE5vcmlhdHN1LiwgZWRpdG9yXCIsXCJzZWFyY2gxXCI6XCJNYXRzdWksIE5vcmlhdHN1LlwiLFwicmVsYXRvclwiOlwiZWRpdG9yXCIsXCJ0eXBlXCI6XCJQZXJzb25hbCBOYW1lXCIsXCJhdXRob3JpemVkRm9ybVwiOnRydWV9Il0sCiAgICAgICAgInRpdGxlX3Ntc19jb21wYXRfZGlzcGxheSI6WyJTb2xpZGFyaXR5IEVjb25vbXkgYW5kIFNvY2lhbCBCdXNpbmVzcyJdLAogICAgICAgICJ0aXRsZV8ybGV0dGVyX3MiOlsic28iXSwKICAgICAgICAidGl0bGVfMWxldHRlcl9zIjpbInMiXSwKICAgICAgICAidGl0bGVfZGlzcGxheSI6IlNvbGlkYXJpdHkgRWNvbm9teSBhbmQgU29jaWFsIEJ1c2luZXNzIiwKICAgICAgICAiZnVsbHRpdGxlX2Rpc3BsYXkiOiJTb2xpZGFyaXR5IEVjb25vbXkgYW5kIFNvY2lhbCBCdXNpbmVzcyA6IE5ldyBNb2RlbHMgZm9yIGEgTmV3IFNvY2lldHkiLAogICAgICAgICJzdWJ0aXRsZV9kaXNwbGF5IjoiTmV3IE1vZGVscyBmb3IgYSBOZXcgU29jaWV0eSIsCiAgICAgICAgInRpdGxlX3Jlc3BvbnNpYmlsaXR5X2Rpc3BsYXkiOlsiZWRpdGVkIGJ5IE5vcmlhdHN1IE1hdHN1aSwgWXVraW8gSWtlbW90by4iXSwKICAgICAgICAic3ViamVjdF9qc29uIjpbIlt7XCJzdWJqZWN0XCI6XCJFY29ub21pY3MuXCIsXCJhdXRob3JpemVkXCI6dHJ1ZSxcInR5cGVcIjpcIlRvcGljYWwgVGVybVwifV0iLAogICAgICAgICAgIlt7XCJzdWJqZWN0XCI6XCJEZXZlbG9wbWVudCBFY29ub21pY3MuXCIsXCJhdXRob3JpemVkXCI6dHJ1ZSxcInR5cGVcIjpcIlRvcGljYWwgVGVybVwifV0iLAogICAgICAgICAgIlt7XCJzdWJqZWN0XCI6XCJGYXJtIGVjb25vbWljcy5cIixcImF1dGhvcml6ZWRcIjpmYWxzZSxcInR5cGVcIjpcIlRvcGljYWwgVGVybVwifV0iLAogICAgICAgICAgIlt7XCJzdWJqZWN0XCI6XCJFbnRyZXByZW5ldXJzaGlwLlwiLFwiYXV0aG9yaXplZFwiOnRydWUsXCJ0eXBlXCI6XCJUb3BpY2FsIFRlcm1cIn1dIiwKICAgICAgICAgICJbe1wic3ViamVjdFwiOlwiRWNvbm9taWNzL01hbmFnZW1lbnQgU2NpZW5jZS5cIixcImF1dGhvcml6ZWRcIjpmYWxzZSxcInR5cGVcIjpcIlRvcGljYWwgVGVybVwifV0iLAogICAgICAgICAgIlt7XCJzdWJqZWN0XCI6XCJBZ3JpY3VsdHVyYWwgRWNvbm9taWNzLlwiLFwiYXV0aG9yaXplZFwiOmZhbHNlLFwidHlwZVwiOlwiVG9waWNhbCBUZXJtXCJ9XSIsCiAgICAgICAgICAiW3tcInN1YmplY3RcIjpcIk5vbi1Qcm9maXQgRW50ZXJwcmlzZXMvQ29ycG9yYXRlIFNvY2lhbCBSZXNwb25zaWJpbGl0eS5cIixcImF1dGhvcml6ZWRcIjpmYWxzZSxcInR5cGVcIjpcIlRvcGljYWwgVGVybVwifV0iLAogICAgICAgICAgIlt7XCJzdWJqZWN0XCI6XCJGaW5hbmNlL0ludmVzdG1lbnQvQmFua2luZy5cIixcImF1dGhvcml6ZWRcIjpmYWxzZSxcInR5cGVcIjpcIlRvcGljYWwgVGVybVwifV0iLAogICAgICAgICAgIlt7XCJzdWJqZWN0XCI6XCJFY29ub21pYyBkZXZlbG9wbWVudFwiLFwiYXV0aG9yaXplZFwiOnRydWUsXCJ0eXBlXCI6XCJUb3BpY2FsIFRlcm1cIn0se1wic3ViamVjdFwiOlwiU29jaWFsIGFzcGVjdHMuXCIsXCJhdXRob3JpemVkXCI6dHJ1ZX1dIiwKICAgICAgICAgICJbe1wic3ViamVjdFwiOlwiRWNvbm9taWNzXCIsXCJhdXRob3JpemVkXCI6dHJ1ZSxcInR5cGVcIjpcIlRvcGljYWwgVGVybVwifSx7XCJzdWJqZWN0XCI6XCJTb2Npb2xvZ2ljYWwgYXNwZWN0cy5cIixcImF1dGhvcml6ZWRcIjpmYWxzZX1dIiwKICAgICAgICAgICJbe1wic3ViamVjdFwiOlwiRWxlY3Ryb25pYyBib29rcy5cIixcImF1dGhvcml6ZWRcIjpmYWxzZSxcInR5cGVcIjpcIkdlbnJlL0Zvcm0gVGVybVwifV0iXSwKICAgICAgICAic3ViamVjdF9kaXNwbGF5IjpbIkVjb25vbWljcyIsCiAgICAgICAgICAiRGV2ZWxvcG1lbnQgRWNvbm9taWNzIiwKICAgICAgICAgICJGYXJtIGVjb25vbWljcyIsCiAgICAgICAgICAiRW50cmVwcmVuZXVyc2hpcCIsCiAgICAgICAgICAiRWNvbm9taWNzL01hbmFnZW1lbnQgU2NpZW5jZSIsCiAgICAgICAgICAiQWdyaWN1bHR1cmFsIEVjb25vbWljcyIsCiAgICAgICAgICAiTm9uLVByb2ZpdCBFbnRlcnByaXNlcy9Db3Jwb3JhdGUgU29jaWFsIFJlc3BvbnNpYmlsaXR5IiwKICAgICAgICAgICJGaW5hbmNlL0ludmVzdG1lbnQvQmFua2luZyIsCiAgICAgICAgICAiRWNvbm9taWMgZGV2ZWxvcG1lbnQgPiBTb2NpYWwgYXNwZWN0cyIsCiAgICAgICAgICAiRWNvbm9taWNzID4gU29jaW9sb2dpY2FsIGFzcGVjdHMiLAogICAgICAgICAgIkVsZWN0cm9uaWMgYm9va3MiXSwKICAgICAgICAiZmFzdF9iIjp0cnVlLAogICAgICAgICJwdWJfaW5mb19kaXNwbGF5IjpbIlRva3lvIDogU3ByaW5nZXIgSmFwYW4gOiBJbXByaW50OiBTcHJpbmdlciwgMjAxNS4iXSwKICAgICAgICAicHVicGxhY2VfZGlzcGxheSI6WyJUb2t5byJdLAogICAgICAgICJwdWJsaXNoZXJfZGlzcGxheSI6WyJTcHJpbmdlciBKYXBhbiA6IEltcHJpbnQ6IFNwcmluZ2VyIl0sCiAgICAgICAgInB1Yl9kYXRlX2Rpc3BsYXkiOlsiMjAxNSJdLAogICAgICAgICJkYXRhYmFzZV9iIjpmYWxzZSwKICAgICAgICAibGFuZ3VhZ2VfZGlzcGxheSI6WyJFbmdsaXNoLiJdLAogICAgICAgICJpc2JuX3QiOlsiOTc4NDQzMTU1NDcxNCIsCiAgICAgICAgICAiOTc4NDQzMTU1NDcwNyJdLAogICAgICAgICJpc2JuX2Rpc3BsYXkiOlsiOTc4NDQzMTU1NDcxNCIsCiAgICAgICAgICAiOTc4NDQzMTU1NDcwNyAocHJpbnQpIl0sCiAgICAgICAgInRpdGxlX3Nlcmllc19kaXNwbGF5IjpbIlNwcmluZ2VyQnJpZWZzIGluIEVjb25vbWljcywiXSwKICAgICAgICAidGl0bGVfc2VyaWVzX2N0cyI6WyJTcHJpbmdlckJyaWVmcyBpbiBFY29ub21pY3MsfFNwcmluZ2VyQnJpZWZzIGluIEVjb25vbWljcywiXSwKICAgICAgICAiYXV0aG9yX2FkZGxfZGlzcGxheSI6WyJJa2Vtb3RvLCBZdWtpby4sIGVkaXRvciIsCiAgICAgICAgICAiU3ByaW5nZXJMaW5rIChPbmxpbmUgc2VydmljZSkiXSwKICAgICAgICAiYXV0aG9yX2FkZGxfanNvbiI6WyJ7XCJuYW1lMVwiOlwiSWtlbW90bywgWXVraW8uLCBlZGl0b3JcIixcInNlYXJjaDFcIjpcIklrZW1vdG8sIFl1a2lvLlwiLFwicmVsYXRvclwiOlwiZWRpdG9yXCIsXCJ0eXBlXCI6XCJQZXJzb25hbCBOYW1lXCIsXCJhdXRob3JpemVkRm9ybVwiOnRydWV9IiwKICAgICAgICAgICJ7XCJuYW1lMVwiOlwiU3ByaW5nZXJMaW5rIChPbmxpbmUgc2VydmljZSlcIixcInNlYXJjaDFcIjpcIlNwcmluZ2VyTGluayAoT25saW5lIHNlcnZpY2UpXCIsXCJyZWxhdG9yXCI6XCJcIixcInR5cGVcIjpcIkNvcnBvcmF0ZSBOYW1lXCIsXCJhdXRob3JpemVkRm9ybVwiOnRydWV9Il0sCiAgICAgICAgIm90aGVyX2Zvcm1fZGlzcGxheSI6WyJQcmludGVkIGVkaXRpb246ICJdLAogICAgICAgICJjb250ZW50c19kaXNwbGF5IjpbIkNoYXB0ZXIgMSBUaGVvcnkgb2YgU29saWRhcml0eSBFY29ub215IGFuZCBTb2NpYWwgQnVzaW5lc3MgKElrZW1vdG8sIFkpIiwKICAgICAgICAgICJDaGFwdGVyIDIgTWljcm9jcmVkaXQsIEluY2x1c2l2ZSBGaW5hbmNlIGFuZCBTb2xpZGFyaXR5IChNYXRzdWksIE4uICYgVHN1Ym9pLCBIKSIsCiAgICAgICAgICAiQ2hhcHRlciAzIEdyYW1lZW4gTW9kZWwgTWljcm9jcmVkaXQgaW4gU3BhaW4gKFRzdWJvaSwgSC4gJiBOdXpydWwgQ2hvd2RodXJ5KSIsCiAgICAgICAgICAiQ2hhcHRlciA0IFJlbmV3YWJsZSBFbmVyZ3kgZm9yIE9mZi1HcmlkIFZpbGxhZ2VzOiBHcmFtZWVuIFNoYWt0aSAoVHN1Ym9pLCBIKSIsCiAgICAgICAgICAiQ2hhcHRlciA1IFlvZ3VydCBmb3IgdGhlIFBvb3I6IEdyYW1lZW4gRGFub25lIEZvb2RzIChUc3Vib2ksIEgpIiwKICAgICAgICAgICJDaGFwdGVyIDYgIERpc3RyaWJ1dGluZyBDbGVhbiBXYXRlciBpbiBDb21tdW5pdGllczogR3JhbWVlbiBWZW9saWEgICBXYXRlciAgKFRzdWJvaSwgSCkiLAogICAgICAgICAgIkNoYXB0ZXIgNyBMb2NhbCBDdXJyZW5jeSBhbmQgUmVnaW9uYWwgUmV2aXRhbGl6YXRpb24gICAgKE1hdHN1aSwgTikiLAogICAgICAgICAgIkNoYXB0ZXIgOCAgU3lzdGVtIG9mIFNvbGlkYXJpdHkgaW4gT3JnYW5pYyBBZ3JpY3VsdHVyZSAoS2ltLCBLLiAmIElrZW1vdG8sIFkpIiwKICAgICAgICAgICJDaGFwdGVyIDkgQ2VydGlmaWVkIENvZmZlZSBhbmQgU29saWRhcml0eSBFY29ub215IChJa2Vtb3RvLCBZKSIsCiAgICAgICAgICAiQ2hhcHRlciAxMCBTb2NpYWwgQnVzaW5lc3MgUHJvbW90aW9uIExhdyBpbiBLb3JlYSAoS2ltLCBLKS4gICAgLiJdLAogICAgICAgICJtYXJjX2Rpc3BsYXkiOiI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCc/PjxyZWNvcmQgeG1sbnM9XCJodHRwOi8vd3d3LmxvYy5nb3YvTUFSQzIxL3NsaW1cIj48bGVhZGVyPjA1Nzg4Y2FtIGEyMjAwNzU3NWkgNDUwMDwvbGVhZGVyPjxjb250cm9sZmllbGQgdGFnPVwiMDAxXCI+ODg4MTQ1NTwvY29udHJvbGZpZWxkPjxjb250cm9sZmllbGQgdGFnPVwiMDA1XCI+MjAxOTA0MTIyMTQ1NDUuMDwvY29udHJvbGZpZWxkPjxjb250cm9sZmllbGQgdGFnPVwiMDA2XCI+bcKgwqDCoMKgwqBvwqDCoGTCoMKgwqDCoMKgwqDCoMKgPC9jb250cm9sZmllbGQ+PGNvbnRyb2xmaWVsZCB0YWc9XCIwMDdcIj5jcsKgwqBuwqDCoMKgwqDCoMKgwqDCoMKgPC9jb250cm9sZmllbGQ+PGNvbnRyb2xmaWVsZCB0YWc9XCIwMDhcIj4xNTAyMDVzMjAxNcKgwqDCoMKgamHCoHzCoMKgwqDCoG/CoMKgwqDCoHx8fHzCoDB8ZW5nwqBkPC9jb250cm9sZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMjBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+OTc4NDQzMTU1NDcxNDwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwMjBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+OTc4NDQzMTU1NDcwNyAocHJpbnQpPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjAyNFwiIGluZDE9XCI3XCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj4xMC4xMDA3Lzk3OC00LTQzMS01NTQ3MS00PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj5kb2k8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMDM1XCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPihXYVNlU1MpT0NNMXNzajAwMDE0NTE5MDE8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMDM1XCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPihPQ29MQyk5MDMwMTQyNzU8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMDM1XCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPjg4ODE0NTU8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMDQwXCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiZFwiPldhU2VTUzwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+ZW5nPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImRcIj5OSUM8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMDUwXCIgaW5kMT1cIiBcIiBpbmQyPVwiNFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkhENzItODg8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMDcyXCIgaW5kMT1cIiBcIiBpbmQyPVwiN1wiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPktDTTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIyXCI+Ymljc3NjPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjA3MlwiIGluZDE9XCIgXCIgaW5kMj1cIjdcIj48c3ViZmllbGQgY29kZT1cImFcIj5CVVMwOTIwMDA8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMlwiPmJpc2Fjc2g8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMDgyXCIgaW5kMT1cIjBcIiBpbmQyPVwiNFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPjMzOC45PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj4yMzwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIwODJcIiBpbmQxPVwiMFwiIGluZDI9XCI0XCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MzMwLjk8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMlwiPjIzPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjEwMFwiIGluZDE9XCIxXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj5NYXRzdWksIE5vcmlhdHN1Ljwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJlXCI+ZWRpdG9yLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIyNDVcIiBpbmQxPVwiMVwiIGluZDI9XCIwXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+U29saWRhcml0eSBFY29ub215IGFuZCBTb2NpYWwgQnVzaW5lc3MgOjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+TmV3IE1vZGVscyBmb3IgYSBOZXcgU29jaWV0eSAvPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImNcIj5lZGl0ZWQgYnkgTm9yaWF0c3UgTWF0c3VpLCBZdWtpbyBJa2Vtb3RvLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIyNjRcIiBpbmQxPVwiIFwiIGluZDI9XCIxXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+VG9reW8gOjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+U3ByaW5nZXIgSmFwYW4gOjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+SW1wcmludDogU3ByaW5nZXIsPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImNcIj4yMDE1Ljwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIzMDBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MSBvbmxpbmUgcmVzb3VyY2UuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjMzNlwiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj50ZXh0PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj5yZGFjb250ZW50PC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjMzN1wiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj5jb21wdXRlcjwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIyXCI+cmRhbWVkaWE8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiMzM4XCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPm9ubGluZSByZXNvdXJjZTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCIyXCI+cmRhY2Fycmllcjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCIzNDdcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+dGV4dCBmaWxlPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImJcIj5QREY8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiMlwiPnJkYTwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI0OTBcIiBpbmQxPVwiMVwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+U3ByaW5nZXJCcmllZnMgaW4gRWNvbm9taWNzLDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ4XCI+MjE5MS01NTA0PC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjUwNVwiIGluZDE9XCIwXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj5DaGFwdGVyIDEgVGhlb3J5IG9mIFNvbGlkYXJpdHkgRWNvbm9teSBhbmQgU29jaWFsIEJ1c2luZXNzIChJa2Vtb3RvLCBZKSAtLSBDaGFwdGVyIDIgTWljcm9jcmVkaXQsIEluY2x1c2l2ZSBGaW5hbmNlIGFuZCBTb2xpZGFyaXR5IChNYXRzdWksIE4uICZhbXA7IFRzdWJvaSwgSCkgLS0gQ2hhcHRlciAzIEdyYW1lZW4gTW9kZWwgTWljcm9jcmVkaXQgaW4gU3BhaW4gKFRzdWJvaSwgSC4gJmFtcDsgTnV6cnVsIENob3dkaHVyeSkgLS0gQ2hhcHRlciA0IFJlbmV3YWJsZSBFbmVyZ3kgZm9yIE9mZi1HcmlkIFZpbGxhZ2VzOiBHcmFtZWVuIFNoYWt0aSAoVHN1Ym9pLCBIKSAtLSBDaGFwdGVyIDUgWW9ndXJ0IGZvciB0aGUgUG9vcjogR3JhbWVlbiBEYW5vbmUgRm9vZHMgKFRzdWJvaSwgSCkgLS0gQ2hhcHRlciA2ICBEaXN0cmlidXRpbmcgQ2xlYW4gV2F0ZXIgaW4gQ29tbXVuaXRpZXM6IEdyYW1lZW4gVmVvbGlhICAgV2F0ZXIgIChUc3Vib2ksIEgpIC0tIENoYXB0ZXIgNyBMb2NhbCBDdXJyZW5jeSBhbmQgUmVnaW9uYWwgUmV2aXRhbGl6YXRpb24gICAgKE1hdHN1aSwgTikgLS0gQ2hhcHRlciA4ICBTeXN0ZW0gb2YgU29saWRhcml0eSBpbiBPcmdhbmljIEFncmljdWx0dXJlIChLaW0sIEsuICZhbXA7IElrZW1vdG8sIFkpIC0tIENoYXB0ZXIgOSBDZXJ0aWZpZWQgQ29mZmVlIGFuZCBTb2xpZGFyaXR5IEVjb25vbXkgKElrZW1vdG8sIFkpIC0tIENoYXB0ZXIgMTAgU29jaWFsIEJ1c2luZXNzIFByb21vdGlvbiBMYXcgaW4gS29yZWEgKEtpbSwgSykuICAgIC48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNTA2XCIgaW5kMT1cIiBcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkxpY2Vuc2UgcmVzdHJpY3Rpb25zIG1heSBsaW1pdCBhY2Nlc3MuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjUyMFwiIGluZDE9XCIgXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj5UaGlzIGJvb2sgcHJlc2VudHMgdGhlb3JldGljYWwgZXhhbWluYXRpb25zIG9mIHdoeSBhbmQgaG93IGNvbm5lY3RpbmcgcGVvcGxlIHlpZWxkcyBkaWZmZXJlbnQgcmVzdWx0cyBmcm9tIHRob3NlIG9mIHRoZSBtYXJrZXQgbWVjaGFuaXNtIGFsb25lLiBXaXRoIGFuIGV2ZXItZ3JlYXRlciBkaXNwYXJpdHkgYmV0d2VlbiB0aGUgd29ybGQ/cyByaWNoIGFuZCBwb29yLCBhY3Rpb25zIGhhdmUgYmVlbiB0YWtlbiB0byByZW1vdmUgdGhlIGltcGVyZmVjdGlvbnMgYW5kIHJlbWVkeSBtYWxmdW5jdGlvbnMgb2YgdGhlIG1hcmtldCBtZWNoYW5pc20uIEFuIHVuZGVybHlpbmcgdGhlbWUgb2YgdGhlc2UgYWN0aXZpdGllcyBpcyB0byBjb25uZWN0IHBlb3BsZSBhbmQgbWFrZSB0aGVtIGRpcmVjdGx5IHZpc2libGUgdG8gb25lIGFub3RoZXI7IHRodXMgdGhlIGludGVncmF0aW5nIGNvbmNlcHQgb2YgdGhlIOKAnHNvbGlkYXJpdHkgZWNvbm9teeKAnSBlbWVyZ2VzLiBUaGlzIHZvbHVtZSBhbmFseXplcyBkaXZlcnNlIGV4YW1wbGVzIGFuZCBwcmFjdGljZXMgb2Ygc29saWRhcml0eSBlY29ub215LiBBZGFtIFNtaXRoIGVtcGhhc2l6ZWQgdGhlIGltcG9ydGFuY2Ugb2Yg4oCcc3ltcGF0aHnigJ0gYW1vbmcgcGVvcGxlIGFuZCB0aGUgcm9sZSBvZiB0aGUg4oCcaW1wYXJ0aWFsIHNwZWN0YXRvcuKAnSBpbiBvcmRlciB0byBjb250cm9sIG90aGVyd2lzZSByZWNrbGVzcyBtYXJrZXRzLiBUaGVzZSBtYWpvciBjb25jZXB0cyBmb3JtIHRoZSBiYXNpcyBvZiBhIHNvbGlkYXJpdHkgZWNvbm9teS4gVGhlIGV4YW1wbGVzIGFuZCBwcmFjdGljZXMgaW4gdGhpcyBib29rIGFyZSBiYXNlZCBvbiB0aGlzIGZyYW1ld29yay4gVGhlIGZpcnN0IGlzIHRoZSBpZGVhIG9mIHNvY2lhbCBidXNpbmVzcywgcHJvbW90ZWQgYnkgUHJvZi4gTS4gWXVudXMgb2YgdGhlIEdyYW1lZW4gQmFuay4gQWx0aG91Z2ggdGhlIGdyb3VwIG9mIGZpdmUgbWVtYmVycyBpbiB0aGUgR3JhbWVlbiBCYW5rIG9yZ2FuaXphdGlvbiBpcyBjb25zaWRlcmVkIGEgc3lzdGVtIG9mIG11dHVhbCBzdXJ2ZWlsbGFuY2UgYnkgc29tZSBlY29ub21pc3RzLCBpdCBpcyBub3QgYSBzeXN0ZW0gYmFzZWQgb24gZGlzdHJ1c3QgYnV0IGEgbWVjaGFuaXNtIGZvciBtdXR1YWwgaGVscCBhbmQgZW5jb3VyYWdlbWVudC4gQWxzbyBleGFtaW5lZCBpbiB0aGlzIGJvb2sgaXMgb3JnYW5pYyBhZ3JpY3VsdHVyZSwgd2hpY2ggYWRoZXJlcyB0byB0aGUgbmVjZXNzaXR5IG9mIGZhY2UtdG8tZmFjZSByZWxhdGlvbnNoaXBzLiBJdCBwdXJzdWVzIGVudmlyb25tZW50YWwgY29uY2VybnMgYW5kIGZvb2Qgc2FmZXR5IGJ5IGJyaW5naW5nIHRvZ2V0aGVyIGNvbnN1bWVycyBhbmQgcHJvZHVjZXJzIGluIGxvY2FsIGFyZWFzIGFuZCBieSBzaGFyaW5nIGtub3dsZWRnZS4gV2hlbiBjb25zdW1lcnMgYW5kIHByb2R1Y2VycyBhcmUgd2lkZWx5IHNlcGFyYXRlZCwgYSBzeXN0ZW0gb2YgY2VydGlmaWNhdGlvbiBhc3N1cmVzIGNvbnN1bWVycyB0aGF0IG5vIGNoZW1pY2FsIHBlc3RpY2lkZXMgYW5kIGZlcnRpbGl6ZXJzIGFyZSB1c2VkLiBDb25uZWN0aW5nIGNvbnN1bWVycyBhbmQgcHJvZHVjZXJzIHRocm91Z2ggY2VydGlmaWNhdGlvbiBzeXN0ZW1zIGNhbiBiZSBzZWVuIGFzIHBhcnQgb2YgZmFpciB0cmFkZSBtZWNoYW5pc21zLiBUaGVzZSBtZWNoYW5pc21zIGFyZSBhcHBsaWVkIGluIGNlcnRpZmllZCBjb2ZmZWUgcHJvZ3JhbXMsIGZvciBpbnN0YW5jZSwgdG8gcmVkdWNlIHBvdmVydHksIHRvIHByb3RlY3QgdGhlIGVudmlyb25tZW50LCBhbmQgdG8gc2FmZWd1YXJkIGh1bWFuIHJpZ2h0cy4gVGhpcyBib29rIHByb3Bvc2VzIHRoYXQgYWxsIHRoZXNlIHNlZW1pbmdseSBkaWZmZXJlbnQgdHlwZXMgb2YgYWN0aXZpdGllcyBjYW4gYmUgdW5kZXJzdG9vZCBhcyBwYXJ0IG9mIHRoZSBzb2xpZGFyaXR5IGVjb25vbXkuIFdpdGggdGhpcyB1bmlmeWluZyB0aGVtZSwgdGhlIGJvb2sgd2lsbCBiZSB1c2VmdWwgZm9yIGJvdGggdGhlb3JldGljYWwgaW52ZXN0aWdhdGlvbnMgYW5kIHByYWN0aWNhbCBhcHBsaWNhdGlvbnMuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MFwiIGluZDE9XCIgXCIgaW5kMj1cIjBcIj48c3ViZmllbGQgY29kZT1cImFcIj5FY29ub21pY3MuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MFwiIGluZDE9XCIgXCIgaW5kMj1cIjBcIj48c3ViZmllbGQgY29kZT1cImFcIj5EZXZlbG9wbWVudCBFY29ub21pY3MuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MFwiIGluZDE9XCIgXCIgaW5kMj1cIjBcIj48c3ViZmllbGQgY29kZT1cImFcIj5GYXJtIGVjb25vbWljcy48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjUwXCIgaW5kMT1cIiBcIiBpbmQyPVwiMFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkVudHJlcHJlbmV1cnNoaXAuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MFwiIGluZDE9XCIxXCIgaW5kMj1cIjRcIj48c3ViZmllbGQgY29kZT1cImFcIj5FY29ub21pY3MvTWFuYWdlbWVudCBTY2llbmNlLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI2NTBcIiBpbmQxPVwiMlwiIGluZDI9XCI0XCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+RGV2ZWxvcG1lbnQgRWNvbm9taWNzLjwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI2NTBcIiBpbmQxPVwiMlwiIGluZDI9XCI0XCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+QWdyaWN1bHR1cmFsIEVjb25vbWljcy48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjUwXCIgaW5kMT1cIjJcIiBpbmQyPVwiNFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkVudHJlcHJlbmV1cnNoaXAuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MFwiIGluZDE9XCIyXCIgaW5kMj1cIjRcIj48c3ViZmllbGQgY29kZT1cImFcIj5Ob24tUHJvZml0IEVudGVycHJpc2VzL0NvcnBvcmF0ZSBTb2NpYWwgUmVzcG9uc2liaWxpdHkuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MFwiIGluZDE9XCIyXCIgaW5kMj1cIjRcIj48c3ViZmllbGQgY29kZT1cImFcIj5GaW5hbmNlL0ludmVzdG1lbnQvQmFua2luZy48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjUwXCIgaW5kMT1cIiBcIiBpbmQyPVwiMFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkVjb25vbWljIGRldmVsb3BtZW50PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cInhcIj5Tb2NpYWwgYXNwZWN0cy48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjUwXCIgaW5kMT1cIiBcIiBpbmQyPVwiMFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkVjb25vbWljczwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ4XCI+U29jaW9sb2dpY2FsIGFzcGVjdHMuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjY1MFwiIGluZDE9XCIgXCIgaW5kMj1cIjdcIj48c3ViZmllbGQgY29kZT1cImFcIj5FY29ub21pYyBkZXZlbG9wbWVudDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ4XCI+U29jaWFsIGFzcGVjdHMuPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj5mYXN0PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjBcIj4oT0NvTEMpZnN0MDA5MDE4NjU8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjUwXCIgaW5kMT1cIiBcIiBpbmQyPVwiN1wiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkVjb25vbWljczwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ4XCI+U29jaW9sb2dpY2FsIGFzcGVjdHMuPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjJcIj5mYXN0PC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cIjBcIj4oT0NvTEMpZnN0MDA5MDIyMTM8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNjU1XCIgaW5kMT1cIiBcIiBpbmQyPVwiNFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPkVsZWN0cm9uaWMgYm9va3MuPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjcwMFwiIGluZDE9XCIxXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj5Ja2Vtb3RvLCBZdWtpby48L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZVwiPmVkaXRvci48L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNzEwXCIgaW5kMT1cIjJcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlNwcmluZ2VyTGluayAoT25saW5lIHNlcnZpY2UpPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjc3M1wiIGluZDE9XCIwXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cInRcIj5TcHJpbmdlciBlQm9va3M8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiNzc2XCIgaW5kMT1cIjBcIiBpbmQyPVwiOFwiPjxzdWJmaWVsZCBjb2RlPVwiaVwiPlByaW50ZWQgZWRpdGlvbjo8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwielwiPjk3ODQ0MzE1NTQ3MDc8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiODMwXCIgaW5kMT1cIiBcIiBpbmQyPVwiMFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPlNwcmluZ2VyQnJpZWZzIGluIEVjb25vbWljcyw8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwieFwiPjIxOTEtNTUwNDwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI4NTZcIiBpbmQxPVwiNFwiIGluZDI9XCIwXCI+PHN1YmZpZWxkIGNvZGU9XCIzXCI+RnVsbCB0ZXh0IGF2YWlsYWJsZSBmcm9tIFNwcmluZ2VyTGluayBlYm9va3MgLSBCdXNpbmVzcyBhbmQgRWNvbm9taWNzIChDb250ZW1wb3JhcnkpPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImlcIj5zc2lkPXNzajAwMDE0NTE5MDE7IGRiY29kZT0wRDM7IHByb3ZpZGVyY29kZT1QUlZBVlg8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwidVwiPmh0dHA6Ly9wcm94eS5saWJyYXJ5LmNvcm5lbGwuZWR1L2xvZ2luP3VybD1odHRwczovL2xpbmsuc3ByaW5nZXIuY29tL29wZW51cmw/Z2VucmU9Ym9vayZhbXA7aXNibj05NzgtNC00MzEtNTU0NzEtNDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJ6XCI+Q29ubmVjdCB0byB0ZXh0Ljwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI4OTlcIiBpbmQxPVwiMlwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+UFJWQVZYXzBEMzwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NDhcIiBpbmQxPVwiMlwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MjAxOTA0MTI8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYlwiPm08L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZFwiPmJhdGNoPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImVcIj5sdHM8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiOTQ4XCIgaW5kMT1cIjNcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPjIwMTkwNDEyPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImhcIj5TZXJpYWxTb2x1dGlvbnM8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiaVwiPkNPT18zNjBNQVJDX1VwZGF0ZV8yMDE5MDQwOV9tb25vZ3JhcGhzX2NoYW5nZWQubXJjLnVjPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjk0OFwiIGluZDE9XCIwXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj4yMDE1MDQxNDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+aTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJkXCI+YmF0Y2g8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZVwiPmx0czwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NDhcIiBpbmQxPVwiMVwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MjAxNTA0MTQ8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYlwiPnM8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZFwiPmJhdGNoPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImVcIj5sdHM8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZlwiPmViazwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NDhcIiBpbmQxPVwiM1wiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MjAxNTA0MTQ8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiaFwiPlNlcmlhbFNvbHV0aW9uczwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJpXCI+Q09PXzM2ME1BUkNfVXBkYXRlXzIwMTUwNDEzX21vbm9ncmFwaHNfbmV3Lm1yYzwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NDhcIiBpbmQxPVwiMlwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MjAxNTA0Mjg8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYlwiPm08L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZFwiPm52MTk8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZVwiPmx0czwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NDhcIiBpbmQxPVwiMlwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+MjAxNjAxMjI8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiYlwiPm08L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZFwiPmJhdGNoPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImVcIj5sdHM8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwieFwiPmVib29rZW5oYW5jZWQ8L3N1YmZpZWxkPjwvZGF0YWZpZWxkPjxkYXRhZmllbGQgdGFnPVwiOTQ4XCIgaW5kMT1cIjNcIiBpbmQyPVwiIFwiPjxzdWJmaWVsZCBjb2RlPVwiYVwiPjIwMTcwNDExPC9zdWJmaWVsZD48c3ViZmllbGQgY29kZT1cImhcIj5TZXJpYWxTb2x1dGlvbnM8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiaVwiPkNPT18zNjBNQVJDX1VwZGF0ZV8yMDE3MDQxMF9tb25vZ3JhcGhzX2NoYW5nZWQubXJjLnVjPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48ZGF0YWZpZWxkIHRhZz1cIjk0OFwiIGluZDE9XCIyXCIgaW5kMj1cIiBcIj48c3ViZmllbGQgY29kZT1cImFcIj4yMDE3MDQxMTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+bTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJkXCI+YmF0Y2g8L3N1YmZpZWxkPjxzdWJmaWVsZCBjb2RlPVwiZVwiPmx0czwvc3ViZmllbGQ+PC9kYXRhZmllbGQ+PGRhdGFmaWVsZCB0YWc9XCI5NTBcIiBpbmQxPVwiIFwiIGluZDI9XCIgXCI+PHN1YmZpZWxkIGNvZGU9XCJhXCI+SEQ2MDwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJiXCI+LlM2NTUgMjAxNTwvc3ViZmllbGQ+PHN1YmZpZWxkIGNvZGU9XCJsXCI+b2NsYy1tPC9zdWJmaWVsZD48L2RhdGFmaWVsZD48L3JlY29yZD4iLAogICAgICAgICJpZCI6Ijg4ODE0NTUiLAogICAgICAgICJiaWJpZF9kaXNwbGF5IjpbIjg4ODE0NTV8MjAxOTA0MTIyMTQ1NDUiXSwKICAgICAgICAiZGVzY3JpcHRpb25fZGlzcGxheSI6WyIxIG9ubGluZSByZXNvdXJjZS4iXSwKICAgICAgICAicmVzdHJpY3Rpb25zX2Rpc3BsYXkiOlsiTGljZW5zZSByZXN0cmljdGlvbnMgbWF5IGxpbWl0IGFjY2Vzcy4iXSwKICAgICAgICAic3VtbWFyeV9kaXNwbGF5IjpbIlRoaXMgYm9vayBwcmVzZW50cyB0aGVvcmV0aWNhbCBleGFtaW5hdGlvbnMgb2Ygd2h5IGFuZCBob3cgY29ubmVjdGluZyBwZW9wbGUgeWllbGRzIGRpZmZlcmVudCByZXN1bHRzIGZyb20gdGhvc2Ugb2YgdGhlIG1hcmtldCBtZWNoYW5pc20gYWxvbmUuIFdpdGggYW4gZXZlci1ncmVhdGVyIGRpc3Bhcml0eSBiZXR3ZWVuIHRoZSB3b3JsZD9zIHJpY2ggYW5kIHBvb3IsIGFjdGlvbnMgaGF2ZSBiZWVuIHRha2VuIHRvIHJlbW92ZSB0aGUgaW1wZXJmZWN0aW9ucyBhbmQgcmVtZWR5IG1hbGZ1bmN0aW9ucyBvZiB0aGUgbWFya2V0IG1lY2hhbmlzbS4gQW4gdW5kZXJseWluZyB0aGVtZSBvZiB0aGVzZSBhY3Rpdml0aWVzIGlzIHRvIGNvbm5lY3QgcGVvcGxlIGFuZCBtYWtlIHRoZW0gZGlyZWN0bHkgdmlzaWJsZSB0byBvbmUgYW5vdGhlcjsgdGh1cyB0aGUgaW50ZWdyYXRpbmcgY29uY2VwdCBvZiB0aGUg4oCcc29saWRhcml0eSBlY29ub2154oCdIGVtZXJnZXMuIFRoaXMgdm9sdW1lIGFuYWx5emVzIGRpdmVyc2UgZXhhbXBsZXMgYW5kIHByYWN0aWNlcyBvZiBzb2xpZGFyaXR5IGVjb25vbXkuIEFkYW0gU21pdGggZW1waGFzaXplZCB0aGUgaW1wb3J0YW5jZSBvZiDigJxzeW1wYXRoeeKAnSBhbW9uZyBwZW9wbGUgYW5kIHRoZSByb2xlIG9mIHRoZSDigJxpbXBhcnRpYWwgc3BlY3RhdG9y4oCdIGluIG9yZGVyIHRvIGNvbnRyb2wgb3RoZXJ3aXNlIHJlY2tsZXNzIG1hcmtldHMuIFRoZXNlIG1ham9yIGNvbmNlcHRzIGZvcm0gdGhlIGJhc2lzIG9mIGEgc29saWRhcml0eSBlY29ub215LiBUaGUgZXhhbXBsZXMgYW5kIHByYWN0aWNlcyBpbiB0aGlzIGJvb2sgYXJlIGJhc2VkIG9uIHRoaXMgZnJhbWV3b3JrLiBUaGUgZmlyc3QgaXMgdGhlIGlkZWEgb2Ygc29jaWFsIGJ1c2luZXNzLCBwcm9tb3RlZCBieSBQcm9mLiBNLiBZdW51cyBvZiB0aGUgR3JhbWVlbiBCYW5rLiBBbHRob3VnaCB0aGUgZ3JvdXAgb2YgZml2ZSBtZW1iZXJzIGluIHRoZSBHcmFtZWVuIEJhbmsgb3JnYW5pemF0aW9uIGlzIGNvbnNpZGVyZWQgYSBzeXN0ZW0gb2YgbXV0dWFsIHN1cnZlaWxsYW5jZSBieSBzb21lIGVjb25vbWlzdHMsIGl0IGlzIG5vdCBhIHN5c3RlbSBiYXNlZCBvbiBkaXN0cnVzdCBidXQgYSBtZWNoYW5pc20gZm9yIG11dHVhbCBoZWxwIGFuZCBlbmNvdXJhZ2VtZW50LiBBbHNvIGV4YW1pbmVkIGluIHRoaXMgYm9vayBpcyBvcmdhbmljIGFncmljdWx0dXJlLCB3aGljaCBhZGhlcmVzIHRvIHRoZSBuZWNlc3NpdHkgb2YgZmFjZS10by1mYWNlIHJlbGF0aW9uc2hpcHMuIEl0IHB1cnN1ZXMgZW52aXJvbm1lbnRhbCBjb25jZXJucyBhbmQgZm9vZCBzYWZldHkgYnkgYnJpbmdpbmcgdG9nZXRoZXIgY29uc3VtZXJzIGFuZCBwcm9kdWNlcnMgaW4gbG9jYWwgYXJlYXMgYW5kIGJ5IHNoYXJpbmcga25vd2xlZGdlLiBXaGVuIGNvbnN1bWVycyBhbmQgcHJvZHVjZXJzIGFyZSB3aWRlbHkgc2VwYXJhdGVkLCBhIHN5c3RlbSBvZiBjZXJ0aWZpY2F0aW9uIGFzc3VyZXMgY29uc3VtZXJzIHRoYXQgbm8gY2hlbWljYWwgcGVzdGljaWRlcyBhbmQgZmVydGlsaXplcnMgYXJlIHVzZWQuIENvbm5lY3RpbmcgY29uc3VtZXJzIGFuZCBwcm9kdWNlcnMgdGhyb3VnaCBjZXJ0aWZpY2F0aW9uIHN5c3RlbXMgY2FuIGJlIHNlZW4gYXMgcGFydCBvZiBmYWlyIHRyYWRlIG1lY2hhbmlzbXMuIFRoZXNlIG1lY2hhbmlzbXMgYXJlIGFwcGxpZWQgaW4gY2VydGlmaWVkIGNvZmZlZSBwcm9ncmFtcywgZm9yIGluc3RhbmNlLCB0byByZWR1Y2UgcG92ZXJ0eSwgdG8gcHJvdGVjdCB0aGUgZW52aXJvbm1lbnQsIGFuZCB0byBzYWZlZ3VhcmQgaHVtYW4gcmlnaHRzLiBUaGlzIGJvb2sgcHJvcG9zZXMgdGhhdCBhbGwgdGhlc2Ugc2VlbWluZ2x5IGRpZmZlcmVudCB0eXBlcyBvZiBhY3Rpdml0aWVzIGNhbiBiZSB1bmRlcnN0b29kIGFzIHBhcnQgb2YgdGhlIHNvbGlkYXJpdHkgZWNvbm9teS4gV2l0aCB0aGlzIHVuaWZ5aW5nIHRoZW1lLCB0aGUgYm9vayB3aWxsIGJlIHVzZWZ1bCBmb3IgYm90aCB0aGVvcmV0aWNhbCBpbnZlc3RpZ2F0aW9ucyBhbmQgcHJhY3RpY2FsIGFwcGxpY2F0aW9ucy4iXSwKICAgICAgICAiaW5fZGlzcGxheSI6WyJTcHJpbmdlciBlQm9va3MiXSwKICAgICAgICAiZWlnaHRuaW5lbmluZV9kaXNwbGF5IjpbIlBSVkFWWF8wRDMiXSwKICAgICAgICAidXJsX2FjY2Vzc19kaXNwbGF5IjpbImh0dHA6Ly9wcm94eS5saWJyYXJ5LmNvcm5lbGwuZWR1L2xvZ2luP3VybD1odHRwczovL2xpbmsuc3ByaW5nZXIuY29tL29wZW51cmw/Z2VucmU9Ym9vayZpc2JuPTk3OC00LTQzMS01NTQ3MS00fEZ1bGwgdGV4dCBhdmFpbGFibGUgZnJvbSBTcHJpbmdlckxpbmsgZWJvb2tzIC0gQnVzaW5lc3MgYW5kIEVjb25vbWljcyAoQ29udGVtcG9yYXJ5KSBDb25uZWN0IHRvIHRleHQuIl0sCiAgICAgICAgInVybF9hY2Nlc3NfanNvbiI6WyJ7XCJwcm92aWRlcmNvZGVcIjpcIlBSVkFWWFwiLFwiZGJjb2RlXCI6XCIwRDNcIixcImRlc2NyaXB0aW9uXCI6XCJGdWxsIHRleHQgYXZhaWxhYmxlIGZyb20gU3ByaW5nZXJMaW5rIGVib29rcyAtIEJ1c2luZXNzIGFuZCBFY29ub21pY3MgKENvbnRlbXBvcmFyeSkgQ29ubmVjdCB0byB0ZXh0LlwiLFwic3NpZFwiOlwic3NqMDAwMTQ1MTkwMVwiLFwidXJsXCI6XCJodHRwOi8vcHJveHkubGlicmFyeS5jb3JuZWxsLmVkdS9sb2dpbj91cmw9aHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9vcGVudXJsP2dlbnJlPWJvb2smaXNibj05NzgtNC00MzEtNTU0NzEtNFwifSJdLAogICAgICAgICJob2xkaW5nc19kaXNwbGF5IjpbIjkyMTk4MTZ8MjAxNTA0MTQxNTU1MzUiXSwKICAgICAgICAiaG9sZGluZ3NfcmVjb3JkX2Rpc3BsYXkiOlsie1wiaWRcIjpcIjkyMTk4MTZcIixcIm1vZGlmaWVkX2RhdGVcIjpcIjIwMTUwNDE0MTU1NTM1XCIsXCJjb3B5X251bWJlclwiOm51bGwsXCJjYWxsbm9zXCI6bnVsbCxcIm5vdGVzXCI6W10sXCJob2xkaW5nc19kZXNjXCI6W10sXCJyZWNlbnRfaG9sZGluZ3NfZGVzY1wiOltdLFwic3VwcGxlbWVudGFsX2hvbGRpbmdzX2Rlc2NcIjpbXSxcImluZGV4X2hvbGRpbmdzX2Rlc2NcIjpbXSxcImxvY2F0aW9uc1wiOlt7XCJjb2RlXCI6XCJzZXJ2LHJlbW9cIixcIm51bWJlclwiOjEyOCxcIm5hbWVcIjpcIipOZXR3b3JrZWQgUmVzb3VyY2VcIixcImxpYnJhcnlcIjpudWxsfV19Il0sCiAgICAgICAgImNhbGxudW1fc29ydCI6IkhENjAgLlM2NTUgMjAxNSIsCiAgICAgICAgIm90aGVyX2lkX2Rpc3BsYXkiOlsiMTAuMTAwNy85NzgtNC00MzEtNTU0NzEtNCIsCiAgICAgICAgICAiKFdhU2VTUylPQ00xc3NqMDAwMTQ1MTkwMSIsCiAgICAgICAgICAiODg4MTQ1NSJdLAogICAgICAgICJvY2xjX2lkX2Rpc3BsYXkiOlsiOTAzMDE0Mjc1Il0sCiAgICAgICAgImhvbGRpbmdzX2pzb24iOiJ7XCI5MjE5ODE2XCI6e1wib25saW5lXCI6dHJ1ZSxcImRhdGVcIjoxNDI5MDQxMzM1fX0iLAogICAgICAgICJhdmFpbGFiaWxpdHlfanNvbiI6IntcIm9ubGluZVwiOnRydWV9IiwKICAgICAgICAiY2FsbG51bWJlcl9kaXNwbGF5IjpbIkhENzItODgiXSwKICAgICAgICAiX3ZlcnNpb25fIjoxNjM1NDYyOTEzNzg4NDc3NDQwLAogICAgICAgICJ0aW1lc3RhbXAiOiIyMDE5LTA2LTA1VDAxOjQyOjU2LjMwOVoiLAogICAgICAgICJwdWJfZGF0ZV9mYWNldCI6MjAxNSwKICAgICAgICAic291cmNlIjoiVm95YWdlciIsCiAgICAgICAgInN1YmplY3RfZ2Vucl9maWxpbmciOlsiZWxlY3Ryb25pYyBib29rcyJdLAogICAgICAgICJ0eXBlIjoiQ2F0YWxvZyIsCiAgICAgICAgImZvcm1hdF9tYWluX2ZhY2V0IjoiQm9vayIsCiAgICAgICAgImF1dGhvcnRpdGxlX2ZhY2V0IjpbIk1hdHN1aSwgTm9yaWF0c3UuIHwgU29saWRhcml0eSBFY29ub215IGFuZCBTb2NpYWwgQnVzaW5lc3MiXSwKICAgICAgICAic3ViamVjdF90b3BpY19maWxpbmciOlsiYWdyaWN1bHR1cmFsIGVjb25vbWljcyIsCiAgICAgICAgICAiZGV2ZWxvcG1lbnQgZWNvbm9taWNzIiwKICAgICAgICAgICJlY29ub21pYyBkZXZlbG9wbWVudCIsCiAgICAgICAgICAiZWNvbm9taWMgZGV2ZWxvcG1lbnQgMDAwMCBzb2NpYWwgYXNwZWN0cyIsCiAgICAgICAgICAiZWNvbm9taWNzIiwKICAgICAgICAgICJlY29ub21pY3MgMDAwMCBzb2Npb2xvZ2ljYWwgYXNwZWN0cyIsCiAgICAgICAgICAiZWNvbm9taWNzbWFuYWdlbWVudCBzY2llbmNlIiwKICAgICAgICAgICJlbnRyZXByZW5ldXJzaGlwIiwKICAgICAgICAgICJmYXJtIGVjb25vbWljcyIsCiAgICAgICAgICAiZmluYW5jZWludmVzdG1lbnRiYW5raW5nIiwKICAgICAgICAgICJub24gcHJvZml0IGVudGVycHJpc2VzY29ycG9yYXRlIHNvY2lhbCByZXNwb25zaWJpbGl0eSJdLAogICAgICAgICJhdXRob3JfcGVyc19maWxpbmciOlsiaWtlbW90byB5dWtpbyIsCiAgICAgICAgICAibWF0c3VpIG5vcmlhdHN1Il0sCiAgICAgICAgImF1dGhvcnRpdGxlX2ZpbGluZyI6WyJtYXRzdWkgbm9yaWF0c3UgMDAwMCBzb2xpZGFyaXR5IGVjb25vbXkgYW5kIHNvY2lhbCBidXNpbmVzcyJdLAogICAgICAgICJmYXN0X3RvcGljX2ZhY2V0IjpbIkVjb25vbWljIGRldmVsb3BtZW50ID4gU29jaWFsIGFzcGVjdHMiLAogICAgICAgICAgIkVjb25vbWljcyA+IFNvY2lvbG9naWNhbCBhc3BlY3RzIl0sCiAgICAgICAgImZvcm1hdCI6WyJCb29rIl0sCiAgICAgICAgImF1dGhvcl9jb3JwX2ZpbGluZyI6WyJzcHJpbmdlcmxpbmsgb25saW5lIHNlcnZpY2UiXSwKICAgICAgICAic3ViamVjdF90b3BpY19mYWNldCI6WyJBZ3JpY3VsdHVyYWwgRWNvbm9taWNzIiwKICAgICAgICAgICJEZXZlbG9wbWVudCBFY29ub21pY3MiLAogICAgICAgICAgIkVjb25vbWljIGRldmVsb3BtZW50IiwKICAgICAgICAgICJFY29ub21pYyBkZXZlbG9wbWVudCA+IFNvY2lhbCBhc3BlY3RzIiwKICAgICAgICAgICJFY29ub21pY3MiLAogICAgICAgICAgIkVjb25vbWljcyA+IFNvY2lvbG9naWNhbCBhc3BlY3RzIiwKICAgICAgICAgICJFY29ub21pY3MvTWFuYWdlbWVudCBTY2llbmNlIiwKICAgICAgICAgICJFbnRyZXByZW5ldXJzaGlwIiwKICAgICAgICAgICJGYXJtIGVjb25vbWljcyIsCiAgICAgICAgICAiRmluYW5jZS9JbnZlc3RtZW50L0JhbmtpbmciLAogICAgICAgICAgIk5vbi1Qcm9maXQgRW50ZXJwcmlzZXMvQ29ycG9yYXRlIFNvY2lhbCBSZXNwb25zaWJpbGl0eSJdLAogICAgICAgICJzdWJqZWN0X2dlbnJfZmFjZXQiOlsiRWxlY3Ryb25pYyBib29rcyJdLAogICAgICAgICJzdWJqZWN0X2NvbnRlbnRfZmFjZXQiOlsiTm9uLUZpY3Rpb24gKGJvb2tzKSJdLAogICAgICAgICJsYW5ndWFnZV9mYWNldCI6WyJFbmdsaXNoIl0sCiAgICAgICAgIm9ubGluZSI6WyJPbmxpbmUiXSwKICAgICAgICAiYXV0aG9yX2ZhY2V0IjpbIklrZW1vdG8sIFl1a2lvIiwKICAgICAgICAgICJNYXRzdWksIE5vcmlhdHN1IiwKICAgICAgICAgICJTcHJpbmdlckxpbmsgKE9ubGluZSBzZXJ2aWNlKSJdLAogICAgICAgICJsY19jYWxsbnVtX2ZhY2V0IjpbIkggLSBTb2NpYWwgU2NpZW5jZXMiLAogICAgICAgICAgIkggLSBTb2NpYWwgU2NpZW5jZXM6SEQgLSBJbmR1c3RyaWVzLCBMYW5kIHVzZSwgTGFib3IiLAogICAgICAgICAgIkggLSBTb2NpYWwgU2NpZW5jZXM6SEQgLSBJbmR1c3RyaWVzLCBMYW5kIHVzZSwgTGFib3I6SEQyOC03MCAtIE1hbmFnZW1lbnQuICBJbmR1c3RyaWFsIG1hbmFnZW1lbnQiLAogICAgICAgICAgIkggLSBTb2NpYWwgU2NpZW5jZXM6SEQgLSBJbmR1c3RyaWVzLCBMYW5kIHVzZSwgTGFib3I6SEQyOC03MCAtIE1hbmFnZW1lbnQuICBJbmR1c3RyaWFsIG1hbmFnZW1lbnQ6SEQ2MC02MC41IC0gU29jaWFsIHJlc3BvbnNpYmlsaXR5IG9mIGJ1c2luZXNzIiwKICAgICAgICAgICJIIC0gU29jaWFsIFNjaWVuY2VzOkhEIC0gSW5kdXN0cmllcywgTGFuZCB1c2UsIExhYm9yOkhENzItODggLSBFY29ub21pYyBncm93dGgsIGRldmVsb3BtZW50LCBwbGFubmluZyJdfV0KICB9fQo=
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:19 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8797135&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:23 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3703'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:23 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4163301&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:27 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"ZTI2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3159'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:27 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8191346&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:31 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"ZTI2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3143'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:31 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8445988&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:35 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"MTlmNDYwMDAwMDAwMDAwU29scg=="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3408'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:35 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/termsOfUse?id=8445988&indent=true&wt=json
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - "*/*"
      Date:
      - Fri, 19 Jul 2019 17:50:36 GMT
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:36 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '2524'
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
    body:
      encoding: UTF-8
      string: |
        {
          "responseHeader":{
            "zkConnected":true,
            "status":0,
            "QTime":5,
            "params":{
              "indent":"true",
              "id":"8445988",
              "wt":"json"}},
          "response":{"numFound":1,"start":0,"maxScore":13.415435,"docs":[
              {
                "title_display":"Brazilian journal of science and technology",
                "fulltitle_display":"Brazilian journal of science and technology",
                "subtitle_display":"",
                "id":"8445988",
                "summary_display":["Showcases research in the broad field of science and technology (including such disciplines as Agriculture, Biotechnology, Energy Policy, Environmental Studies, Materials Science, and Sustainable Development), with particular respect to Brazil and greater Latin America, but not limited to authorship or topical coverage within the region. The journal explores the dynamics of Research & Development (R&D) under a wide perspective, including not only an emphasis on dissemination of research findings, but also on policy-making and economic growth."],
                "url_access_display":["http://proxy.library.cornell.edu/login?url=https://search.proquest.com/publication/2034792|Full text available from Agricultural & Environmental Science Collection: 01/01/2014 to present Connect to text.",
                  "http://proxy.library.cornell.edu/login?url=https://search.proquest.com/publication/2034792|Full text available from Earth, Atmospheric & Aquatic Science Collection: 01/01/2014 to present Connect to text.",
                  "https://link.springer.com/journal/40552|Full text available from SpringerOpen: 01/01/2014 to 12/31/2017 Connect to text."],
                "url_access_json":["{\"providercode\":\"PRVPQU\",\"dbcode\":\"ATCPS\",\"description\":\"Full text available from Agricultural & Environmental Science Collection: 01/01/2014 to present Connect to text.\",\"ssid\":\"ssj0001125753\",\"url\":\"http://proxy.library.cornell.edu/login?url=https://search.proquest.com/publication/2034792\"}",
                  "{\"providercode\":\"PRVPQU\",\"dbcode\":\"BKSAR\",\"description\":\"Full text available from Earth, Atmospheric & Aquatic Science Collection: 01/01/2014 to present Connect to text.\",\"ssid\":\"ssj0001125753\",\"url\":\"http://proxy.library.cornell.edu/login?url=https://search.proquest.com/publication/2034792\"}",
                  "{\"providercode\":\"PRVAVX\",\"dbcode\":\"C6C\",\"description\":\"Full text available from SpringerOpen: 01/01/2014 to 12/31/2017 Connect to text.\",\"ssid\":\"ssj0001125753\",\"url\":\"https://link.springer.com/journal/40552\"}"]}]
          }}
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:36 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=9493653&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:40 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"ZTI2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '69'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "response":{"numFound":0,"start":0,"docs":[]
          }}
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:40 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/select?defType=edismax&f.author_facet.facet.limit=6&f.fast_era_facet.facet.limit=6&f.fast_genre_facet.facet.limit=6&f.fast_geo_facet.facet.limit=6&f.fast_topic_facet.facet.limit=6&f.format.facet.limit=11&f.language_facet.facet.limit=6&f.lc_alpha_facet.facet.limit=6&f.lc_callnum_facet.facet.limit=-1&f.lc_callnum_facet.facet.sort=count&f.location.facet.limit=101&f.location.facet.sort=index&f.online.facet.limit=3&f.subject_content_facet.facet.limit=6&facet=true&facet.field=collection&facet.query=acquired_dt:%5BNOW-1YEAR%20TO%20NOW-7DAY%5D&qt=search&rows=20&sort=score%20desc,%20pub_date_sort%20desc,%20title_sort%20asc&stats=true&stats.field=pub_date_facet&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:40 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"MTlmNDYwMDAwMDAwMDAwU29scg=="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:42 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=2070362&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:46 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"MTlmNDYwMDAwMDAwMDAwU29scg=="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '4470'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:46 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8948570&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:50 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"ZTI2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2912'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:50 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=4473308&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:54 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"ZTI2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3036'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:54 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8913436&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:50:59 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:48:43 GMT
      Etag:
      - '"Nzg2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2728'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:50:59 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=330333&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:21 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:55 GMT
      Etag:
      - '"YzQ2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:21 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=366639&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:25 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"MTlmNDYwMDAwMDAwMDAwU29scg=="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:25 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/callnum/browse?q=%5B%22%2B%2B%20U1%20.A744%22%20TO%20*%5D&start=0&wt=json
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - "*/*"
      Date:
      - Fri, 19 Jul 2019 17:51:26 GMT
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:26 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:51:03 GMT
      Etag:
      - '"YjhiNTdhYTAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '10293'
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
    body:
      encoding: UTF-8
      string: |
        {
          "responseHeader":{
            "zkConnected":true,
            "status":0,
            "QTime":634,
            "params":{
              "q":"[\"++ U1 .A744\" TO *]",
              "start":"0",
              "wt":"json"}},
          "response":{"numFound":291124,"start":0,"docs":[
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Army and navy journal",
                "bibid":288266,
                "callnum_display":"Oversize U1 .A744 ++",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Army and navy journal",
                "bibid":288266,
                "callnum_display":"++ U1 .A744",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Armed forces journal",
                "bibid":360697,
                "callnum_display":"Oversize U1 .A744 ++",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"United States army and navy journal",
                "bibid":366639,
                "callnum_display":"++ U1 .A744",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"American army and navy journal",
                "bibid":367349,
                "callnum_display":"++ U1 .A744",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Army, navy, air force journal and register",
                "bibid":367584,
                "callnum_display":"Oversize U1 .A744 ++",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Armed Forces journal international",
                "bibid":368392,
                "callnum_display":"Oversize U1 .A744 ++",
                "availability_json":"{\"available\":true,\"availAt\":{\"Uris Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Journal of the armed forces",
                "bibid":368508,
                "callnum_display":"Oversize U1 .A744 ++",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Army, navy, air force journal",
                "bibid":369001,
                "callnum_display":"Oversize U1 .A744 ++",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Armed Forces journal",
                "bibid":5814641,
                "callnum_display":"Oversize U1 .A744 ++",
                "availability_json":"{\"available\":true,\"availAt\":{\"Uris Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Army-Navy-Air Force register and defense times",
                "bibid":354762,
                "callnum_display":"++ U1 .A746",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Defence magazine",
                "bibid":6954192,
                "online":["Online"],
                "callnum_display":"U1.A8",
                "availability_json":"{\"online\":true}"},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Asia-Pacific defense FORUM",
                "bibid":5956387,
                "online":["Online"],
                "callnum_display":"U1. A85",
                "availability_json":"{\"online\":true}"},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Asia-Pacific defense FORUM",
                "bibid":8872140,
                "online":["Online"],
                "callnum_display":"U1 . A85",
                "availability_json":"{\"online\":true}"},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Defense transportation journal",
                "bibid":5372994,
                "online":["Online"],
                "callnum_display":"U1 .A88",
                "availability_json":"{\"online\":true}"},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Army",
                "bibid":5369817,
                "online":["Online"],
                "callnum_display":"U1 .A893",
                "availability_json":"{\"online\":true}"},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Australian Army journal",
                "bibid":5337846,
                "callnum_display":"U1 .A92",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Asia\":\"\"}}",
                "online":["At the Library"]},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Australian Army journal",
                "bibid":5337846,
                "callnum_display":"U1 .A92",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Army journal",
                "bibid":5365273,
                "callnum_display":"U1 .A92",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Australian defence force journal",
                "bibid":6513701,
                "online":["Online"],
                "callnum_display":"U1 .A97",
                "availability_json":"{\"online\":true}"}]
          },
          "facet_counts":{
            "facet_queries":{
              "{!ex=mq}acquired_dt:[NOW-14DAY TO NOW-7DAY]":39,
              "{!ex=mq}acquired_dt:[NOW-30DAY TO NOW-7DAY]":261,
              "{!ex=mq}acquired_dt:[NOW-1YEAR TO NOW-7DAY]":3918},
            "facet_fields":{
              "online":[
                "At the Library",162636,
                "Online",128221],
              "language_facet":[
                "English",224530,
                "German",11147,
                "French",8958,
                "Chinese",7667,
                "Spanish",6449,
                "Russian",5845],
              "location":[
                "Adelson Library",51,
                "Adelson Library > Main Collection",28,
                "Adelson Library > Museum of Vertebrates",11,
                "Adelson Library > Reference",15,
                "Africana Library",2072,
                "Africana Library > Main Collection",1767,
                "Africana Library > New Books Shelf",1,
                "Africana Library > Reference",290,
                "Africana Library > Reserve",16,
                "Bailey Hortorium",160,
                "Bailey Hortorium > Main Collection",89,
                "Bailey Hortorium > Reference",72,
                "Fine Arts Library",336,
                "Fine Arts Library > Main Collection",26,
                "Fine Arts Library > Reference",18,
                "Fine Arts Library > Reserve",293,
                "ILR Library",1040,
                "ILR Library > Main Collection",907,
                "ILR Library > Reference",147,
                "ILR Library > Reserve",1,
                "ILR Library Kheel Center",91,
                "ILR Library Kheel Center > Main Collection",22,
                "ILR Library Kheel Center > Reference",69,
                "Kroch Library Asia",12067,
                "Kroch Library Asia > Main Collection",10955,
                "Kroch Library Asia > Reference",1165,
                "Kroch Library Rare & Manuscripts",8978,
                "Kroch Library Rare & Manuscripts > Main Collection",6823,
                "Kroch Library Rare & Manuscripts > Reference",362,
                "Kroch Library Rare & Manuscripts > Request in Advance",1809,
                "Law Library",3827,
                "Law Library > Main Collection",3355,
                "Law Library > Rare Books",3,
                "Law Library > Reference",25,
                "Law Library > Request in Advance",4,
                "Law Library > Reserve",445,
                "Library Annex",65166,
                "Mann Library",1310,
                "Mann Library > Collection Development",13,
                "Mann Library > Ellis Collection",1,
                "Mann Library > Main Collection",1179,
                "Mann Library > Reference",67,
                "Mann Library > Special Collections",56,
                "Mathematics Library",262,
                "Mathematics Library > Circulation Desk",44,
                "Mathematics Library > Main Collection",197,
                "Mathematics Library > Reference",24,
                "Music Library",628,
                "Music Library > A/V",484,
                "Music Library > Main Collection",104,
                "Music Library > Reference",39,
                "Music Library > Reserve",2,
                "Olin Library",1654,
                "Olin Library > Circulation Desk",3,
                "Olin Library > Graduate Study Room 501",105,
                "Olin Library > Main Collection",343,
                "Olin Library > Map Storage",1,
                "Olin Library > Maps",53,
                "Olin Library > New & Noteworthy Books Shelf",7,
                "Olin Library > Preservation Department",329,
                "Olin Library > Reference",796,
                "Olin Library > Room 305",1,
                "Olin Library > Room 604-605",22,
                "Space Sciences Building",15,
                "Uris Library",66346,
                "Uris Library > Asia A/V",8558,
                "Uris Library > Asia A/V > China",2005,
                "Uris Library > Asia A/V > Japan",768,
                "Uris Library > Asia A/V > Korea",747,
                "Uris Library > Asia A/V > South Asia",1770,
                "Uris Library > Asia A/V > Southeast Asia",3199,
                "Uris Library > Circulation",8,
                "Uris Library > Main Collection",57430,
                "Uris Library > Reference",5,
                "Uris Library > Reserve",393,
                "Veterinary Library",58,
                "Veterinary Library > Main Collection",49,
                "Veterinary Library > Reference",8,
                "Veterinary Library > Reserve ",1]},
            "facet_ranges":{},
            "facet_intervals":{},
            "facet_heatmaps":{}}}
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:27 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/callnum/browse?q=%5B%22Film%20N6390%22%20TO%20*%5D&start=0&wt=json
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - "*/*"
      Date:
      - Fri, 19 Jul 2019 17:51:31 GMT
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:31 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:51:03 GMT
      Etag:
      - '"YjhiNTdhYTAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '12179'
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
    body:
      encoding: UTF-8
      string: |
        {
          "responseHeader":{
            "zkConnected":true,
            "status":0,
            "QTime":2152,
            "params":{
              "q":"[\"Film N6390\" TO *]",
              "start":"0",
              "wt":"json"}},
          "response":{"numFound":5235262,"start":0,"docs":[
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"United States army and navy journal",
                "bibid":366639,
                "callnum_display":"Film N6390",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Filolos̆ki pregled",
                "bibid":117047,
                "callnum_display":"Film N6391",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Quôc-triếu thư khế",
                "bibid":789844,
                "callnum_display":"Film N6394",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Quốc-triều hình luật",
                "bibid":3379686,
                "callnum_display":"Film N6395",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Đại Việt lịch đại Hoàng triều ngự chế ngọc diệp thế hệ phả ký",
                "bibid":3378277,
                "callnum_display":"Film N6396",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Journal/Periodical"],
                "fulltitle_display":"Voprosy teorii i ėstetiki muzyki",
                "bibid":1039734,
                "callnum_display":"Film N6401",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Thesis",
                  "Microform",
                  "Book"],
                "fulltitle_display":"Medicinam firmis certisque fundamentis innixam ...",
                "bibid":1683516,
                "callnum_display":"Film N6402",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Quốc triều khoa bảng lục",
                "bibid":3350367,
                "callnum_display":"Film N6405",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Nam chi tập",
                "bibid":3347897,
                "callnum_display":"Film N6406",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Giao-chỉ dị biên",
                "bibid":9155179,
                "callnum_display":"Film N6417",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Minh đô thị",
                "bibid":3347902,
                "callnum_display":"Film N6419",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Đại-nam thuyền uyển truyền đăng tập lục",
                "bibid":3378278,
                "callnum_display":"Film N6420",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Chúc thư văn khế cựu chỉ",
                "bibid":3379784,
                "callnum_display":"Film N6421",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Hoàn Vũ Ký",
                "bibid":3347903,
                "callnum_display":"Film N6422",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Tiểu bình tiêm khấu thuận phỉ phương lược",
                "bibid":3378295,
                "callnum_display":"Film N6423",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Phong tục sử",
                "bibid":3347904,
                "callnum_display":"Film N6424",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Journal/Periodical"],
                "fulltitle_display":"Zapiski Zabaĭkalʹskogo filiala Geograficheskogo obshchestva SSSR",
                "bibid":1944310,
                "callnum_display":"Film N6430",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Ngư chế lịch-đại sử tổng luận",
                "bibid":3347905,
                "callnum_display":"Film N6432",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Book"],
                "fulltitle_display":"Hổ trướng khu ký",
                "bibid":3350410,
                "callnum_display":"Film N6433",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Microform",
                  "Journal/Periodical"],
                "fulltitle_display":"La Iglesia de Espan̄a en el Peru. Seccion primera, Archivo General de Indias",
                "bibid":1949192,
                "callnum_display":"Film N6435",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true}]
          },
          "facet_counts":{
            "facet_queries":{
              "{!ex=mq}acquired_dt:[NOW-14DAY TO NOW-7DAY]":3002,
              "{!ex=mq}acquired_dt:[NOW-30DAY TO NOW-7DAY]":5710,
              "{!ex=mq}acquired_dt:[NOW-1YEAR TO NOW-7DAY]":181214},
            "facet_fields":{
              "online":[
                "At the Library",4344634,
                "Online",885173],
              "language_facet":[
                "English",3389030,
                "German",360455,
                "French",213276,
                "Spanish",212222,
                "Chinese",158974,
                "Russian",137840],
              "location":[
                "Adelson Library",10424,
                "Adelson Library > Macaulay Library",370,
                "Adelson Library > Main Collection",9029,
                "Adelson Library > Museum of Vertebrates",903,
                "Adelson Library > Reference",190,
                "Africana Library",14701,
                "Africana Library > Main Collection",14054,
                "Africana Library > New Books Shelf",131,
                "Africana Library > Reference",491,
                "Africana Library > Reserve",33,
                "Bailey Hortorium",13444,
                "Bailey Hortorium > Main Collection",9163,
                "Bailey Hortorium > Reference",4304,
                "CISER Data Archive",1262,
                "Fine Arts Library",4645,
                "Fine Arts Library > Main Collection",3281,
                "Fine Arts Library > Reference",478,
                "Fine Arts Library > Reserve",897,
                "ILR Library",109222,
                "ILR Library > Labor Law Reference",95,
                "ILR Library > Main Collection",107683,
                "ILR Library > Reference",1441,
                "ILR Library > Reserve",246,
                "ILR Library Kheel Center",3780,
                "ILR Library Kheel Center > Main Collection",3475,
                "ILR Library Kheel Center > Reference",307,
                "Kroch Library Asia",371639,
                "Kroch Library Asia > Main Collection",368207,
                "Kroch Library Asia > Reference",3712,
                "Kroch Library Asia > Reserve",3,
                "Kroch Library Rare & Manuscripts",244419,
                "Kroch Library Rare & Manuscripts > Main Collection",167321,
                "Kroch Library Rare & Manuscripts > Reference",783,
                "Kroch Library Rare & Manuscripts > Request in Advance",76493,
                "Law Library",195668,
                "Law Library > Legal Aid Clinic",3,
                "Law Library > Main Collection",190648,
                "Law Library > Rare Books",1169,
                "Law Library > Reference",770,
                "Law Library > Request in Advance",1711,
                "Law Library > Reserve",1532,
                "Library Annex",1778034,
                "Mann Library",160785,
                "Mann Library > Circulation",3,
                "Mann Library > Collection Development",18,
                "Mann Library > Curriculum Materials Collection",506,
                "Mann Library > Ellis Collection",711,
                "Mann Library > Main Collection",147768,
                "Mann Library > New Book Shelf",374,
                "Mann Library > Reference",654,
                "Mann Library > Reserve",52,
                "Mann Library > Special Collections",10924,
                "Mathematics Library",53043,
                "Mathematics Library > Circulation Desk",242,
                "Mathematics Library > Locked Press",1,
                "Mathematics Library > Main Collection",52674,
                "Mathematics Library > Reference",297,
                "Mathematics Library > Reserve",28,
                "Music Library",167148,
                "Music Library > A/V",30490,
                "Music Library > Circulation",3,
                "Music Library > Main Collection",125502,
                "Music Library > Reference",11465,
                "Music Library > Reserve",122,
                "Nestle Library",11,
                "Nestle Library > Reserve",11,
                "Olin Library",1128307,
                "Olin Library > Circulation Desk",26,
                "Olin Library > Graduate Study Room 501",1560,
                "Olin Library > Main Collection",1075896,
                "Olin Library > Map Storage",8220,
                "Olin Library > Maps",37781,
                "Olin Library > New & Noteworthy Books Shelf",759,
                "Olin Library > Preservation Department",505,
                "Olin Library > Reference",3063,
                "Olin Library > Reserve",54,
                "Olin Library > Room 305",1,
                "Olin Library > Room 604-605",1414,
                "Sage Hall Management Library",299,
                "Sage Hall Management Library > Reference",54,
                "Sage Hall Management Library > Reserve",245,
                "Space Sciences Building",1998,
                "Uris Library",150295,
                "Uris Library > Asia A/V",9208,
                "Uris Library > Asia A/V > China",2005,
                "Uris Library > Asia A/V > Japan",769,
                "Uris Library > Asia A/V > Korea",747,
                "Uris Library > Asia A/V > South Asia",1770,
                "Uris Library > Asia A/V > Southeast Asia",3199,
                "Uris Library > Circulation",8,
                "Uris Library > Main Collection",139907,
                "Uris Library > Reference",674,
                "Uris Library > Reserve",573,
                "Uris Library > Reserve Willis Room ",4,
                "Veterinary Library",8600,
                "Veterinary Library > Main Collection",8561,
                "Veterinary Library > Rare Books",2,
                "Veterinary Library > Reference",13,
                "Veterinary Library > Reserve ",26]},
            "facet_ranges":{},
            "facet_intervals":{},
            "facet_heatmaps":{}}}
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:34 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=9862954&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:37 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:55 GMT
      Etag:
      - '"YzQ2ZTdhMDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '3178'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:37 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/callnum/browse?q=%5B%22PK2197.C46%20Y39%202016%22%20TO%20*%5D&start=0&wt=json
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - "*/*"
      Date:
      - Fri, 19 Jul 2019 17:51:38 GMT
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:38 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:49:01 GMT
      Etag:
      - '"YTFhMGZiMjAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '12103'
      Via:
      - 1.1 da-prod-solr9.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
    body:
      encoding: UTF-8
      string: |
        {
          "responseHeader":{
            "zkConnected":true,
            "status":0,
            "QTime":760,
            "params":{
              "q":"[\"PK2197.C46 Y39 2016\" TO *]",
              "start":"0",
              "wt":"json"}},
          "response":{"numFound":2439824,"start":0,"docs":[
              {
                "format":["Book"],
                "fulltitle_display":"Ustād-i suk̲h̲an : cand maʻrūf shuʻarāʼe Cinyoṭ ke tanāz̤ur men̲ = Ustad-e-sukhan",
                "fulltitle_vern_display":"‎‫‏استاد سخن : چند معروف شعرائے چنيوٹ کے تناظر ميں‏‬‎",
                "bibid":9862954,
                "callnum_display":"PK2197.C46 Y39 2016",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Asia\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Kaḍpah men̲ Urdū : az san 1120 H. tā san 1375 H. mīm, 1710-1957",
                "bibid":2300395,
                "callnum_display":"PK2197.C83 R34x 1992",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Raftgān̲ va qāʾimān̲ : Darbhangah kā manẓūm adabī taz̲kirah",
                "bibid":4468622,
                "callnum_display":"PK2197.D37 T37 2001",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Asia\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Dakhnī (qadīm Urdū) ke cand taḥqīqī maz̤āmīn",
                "bibid":2557797,
                "callnum_display":"PK2197.D4 H35",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Dakan zindah kardam : Dakanī nāyāb mak̲h̲t̤ūt̤āt aur dīgar tabṣire",
                "bibid":5998317,
                "callnum_display":"PK2197.D4 Q35 2004",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Asia\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Dakhinī nas̲r pāre",
                "bibid":2564865,
                "callnum_display":"PK2197.D4 R13",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Dakanī adab kī muk̲h̲taṣar tārīk̲h̲",
                "bibid":6574801,
                "callnum_display":"PK2197.D4 S27 2006",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Asia\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Āzādī ke baʻd Dihlī men̲ Urdū naẓm",
                "bibid":2086276,
                "callnum_display":"PK2197.D43 A93 1990",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Manẓar va pas-i manẓar : Shuʻbah-yi Urdū, Dihlī Yūnīvarsiṭī, Urdū zabān o adab kī k̲h̲idmat kī raushnī men̲",
                "bibid":2010113,
                "callnum_display":"PK2197.D43 K45",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Assembly of rivals : Delhi, Lucknow, and the Urdu ghazal",
                "bibid":2280376,
                "callnum_display":"PK2197.D43 P48x 1992",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Asia\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Yah thī Dillī",
                "bibid":2557798,
                "callnum_display":"PK2197.D43 T14",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Dihlavī mars̲iyahgo",
                "bibid":1492527,
                "callnum_display":"PK2197.D43 Z22 1986",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Dihlī men̲ Urdū afsānah, 1900 tā 1947",
                "bibid":2733548,
                "callnum_display":"PK2197.D43 Z69 1994",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Z̤ilaʻ Ḍoḍah kī adabī va s̲aqāfatī tārīk̲h̲",
                "bibid":2762474,
                "callnum_display":"PK2197.D63 Z55x 1993",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Taz̲kirah-yi shuʻarā-yi Farruk̲h̲ābād",
                "bibid":1778976,
                "callnum_display":"PK2197.F37 M45 1985",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Urdū adab ke irtiqāʾ men̲ G̲h̲āzīpūr kī k̲h̲idmāt",
                "bibid":3819399,
                "callnum_display":"PK2197.G43 K43z 1998",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Asia\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Āzādī ke baʻd Gujarāt men̲ Urdū adab kī pesh raft",
                "bibid":6258851,
                "callnum_display":"PK2197.G8 A93 2006",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Asia\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Urdū g̲h̲azal Gujarāt men̲",
                "bibid":3887681,
                "callnum_display":"PK2197.G8 M34x 1995",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Bazm",
                "bibid":1003724,
                "callnum_display":"PK2197.H37 B25 1982z",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Haryānah kā Urdū adab : majmūʻah-yi maz̤āmīn",
                "bibid":2810140,
                "callnum_display":"PK2197.H37 H38x 1994",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true}]
          },
          "facet_counts":{
            "facet_queries":{
              "{!ex=mq}acquired_dt:[NOW-14DAY TO NOW-7DAY]":1321,
              "{!ex=mq}acquired_dt:[NOW-30DAY TO NOW-7DAY]":2402,
              "{!ex=mq}acquired_dt:[NOW-1YEAR TO NOW-7DAY]":105081},
            "facet_fields":{
              "online":[
                "At the Library",1913650,
                "Online",523148],
              "language_facet":[
                "English",1596426,
                "German",158406,
                "Spanish",109541,
                "French",104275,
                "Chinese",88580,
                "Italian",52503],
              "location":[
                "Adelson Library",10133,
                "Adelson Library > Macaulay Library",365,
                "Adelson Library > Main Collection",8806,
                "Adelson Library > Museum of Vertebrates",863,
                "Adelson Library > Reference",166,
                "Africana Library",6978,
                "Africana Library > Main Collection",6508,
                "Africana Library > New Books Shelf",62,
                "Africana Library > Reference",390,
                "Africana Library > Reserve",23,
                "Bailey Hortorium",13274,
                "Bailey Hortorium > Main Collection",9058,
                "Bailey Hortorium > Reference",4239,
                "CISER Data Archive",816,
                "Fine Arts Library",928,
                "Fine Arts Library > Main Collection",502,
                "Fine Arts Library > Reference",64,
                "Fine Arts Library > Reserve",363,
                "ILR Library",12547,
                "ILR Library > Main Collection",12230,
                "ILR Library > Reference",304,
                "ILR Library > Reserve",64,
                "ILR Library Kheel Center",2279,
                "ILR Library Kheel Center > Main Collection",2174,
                "ILR Library Kheel Center > Reference",106,
                "Kroch Library Asia",190567,
                "Kroch Library Asia > Main Collection",187946,
                "Kroch Library Asia > Reference",2782,
                "Kroch Library Rare & Manuscripts",153416,
                "Kroch Library Rare & Manuscripts > Main Collection",121742,
                "Kroch Library Rare & Manuscripts > Reference",625,
                "Kroch Library Rare & Manuscripts > Request in Advance",31191,
                "Law Library",6346,
                "Law Library > Main Collection",5717,
                "Law Library > Rare Books",4,
                "Law Library > Reference",39,
                "Law Library > Request in Advance",13,
                "Law Library > Reserve",578,
                "Library Annex",808148,
                "Mann Library",112758,
                "Mann Library > Circulation",2,
                "Mann Library > Collection Development",16,
                "Mann Library > Curriculum Materials Collection",339,
                "Mann Library > Ellis Collection",576,
                "Mann Library > Main Collection",101812,
                "Mann Library > New Book Shelf",194,
                "Mann Library > Reference",199,
                "Mann Library > Reserve",29,
                "Mann Library > Special Collections",9780,
                "Mathematics Library",52694,
                "Mathematics Library > Circulation Desk",239,
                "Mathematics Library > Locked Press",1,
                "Mathematics Library > Main Collection",52338,
                "Mathematics Library > Reference",284,
                "Mathematics Library > Reserve",28,
                "Music Library",22176,
                "Music Library > A/V",20229,
                "Music Library > Main Collection",1845,
                "Music Library > Reference",96,
                "Music Library > Reserve",8,
                "Nestle Library",6,
                "Nestle Library > Reserve",6,
                "Olin Library",395396,
                "Olin Library > Circulation Desk",22,
                "Olin Library > Graduate Study Room 501",977,
                "Olin Library > Main Collection",392065,
                "Olin Library > Map Storage",2,
                "Olin Library > Maps",112,
                "Olin Library > New & Noteworthy Books Shelf",636,
                "Olin Library > Preservation Department",435,
                "Olin Library > Reference",1481,
                "Olin Library > Reserve",37,
                "Olin Library > Room 305",1,
                "Olin Library > Room 604-605",30,
                "Sage Hall Management Library",37,
                "Sage Hall Management Library > Reference",4,
                "Sage Hall Management Library > Reserve",33,
                "Space Sciences Building",1963,
                "Uris Library",146314,
                "Uris Library > Asia A/V",9121,
                "Uris Library > Asia A/V > China",2005,
                "Uris Library > Asia A/V > Japan",769,
                "Uris Library > Asia A/V > Korea",747,
                "Uris Library > Asia A/V > South Asia",1770,
                "Uris Library > Asia A/V > Southeast Asia",3199,
                "Uris Library > Circulation",8,
                "Uris Library > Main Collection",136231,
                "Uris Library > Reference",559,
                "Uris Library > Reserve",466,
                "Uris Library > Reserve Willis Room ",4,
                "Veterinary Library",8308,
                "Veterinary Library > Main Collection",8272,
                "Veterinary Library > Rare Books",2,
                "Veterinary Library > Reference",11,
                "Veterinary Library > Reserve ",25]},
            "facet_ranges":{},
            "facet_intervals":{},
            "facet_heatmaps":{}}}
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:39 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/blacklight/get?ids=8338813&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:43 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:50:14 GMT
      Etag:
      - '"ZTI2YjQ2MDAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Content-Length:
      - '2869'
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:43 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/callnum/browse?q=%5B%22LD1357.5%20.C67%202014%22%20TO%20*%5D&start=0&wt=json
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - "*/*"
      Date:
      - Fri, 19 Jul 2019 17:51:44 GMT
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:44 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:51:03 GMT
      Etag:
      - '"YjhiNTdhYTAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '12391'
      Via:
      - 1.1 da-prod-solr7.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
    body:
      encoding: UTF-8
      string: |
        {
          "responseHeader":{
            "zkConnected":true,
            "status":0,
            "QTime":1383,
            "params":{
              "q":"[\"LD1357.5 .C67 2014\" TO *]",
              "start":"0",
              "wt":"json"}},
          "response":{"numFound":3349707,"start":0,"docs":[
              {
                "format":["Book"],
                "fulltitle_display":"Cornell research",
                "bibid":8338813,
                "callnum_display":"LD1357.5 .C67 2014",
                "availability_json":"{\"available\":true,\"availAt\":{\"Mann Library\":\"\",\"ILR Library (Ives Hall)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Career Center news",
                "bibid":1164550,
                "callnum_display":"Oversize LD1357.5 .C77 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Cornell indicators",
                "bibid":348116,
                "callnum_display":"Oversize LD1357.5 .C79 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The Cornell University Associates; a program for the advancement of industry, business, and higher education",
                "bibid":4923642,
                "callnum_display":"Rare Books LD1357.5 .C81",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The Cornell University Associates; a program for the advancement of industry, business, and higher education",
                "bibid":4923642,
                "callnum_display":"LD1357.5 .C81",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The department of theatre arts",
                "bibid":1789594,
                "callnum_display":"LD1357.5 .C813",
                "availability_json":"{\"available\":false,\"unavailAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Cornell clipfile index",
                "bibid":2325086,
                "callnum_display":"+ LD1357.5 .C815",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library Reference (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Cornell clipfile index",
                "bibid":2325086,
                "callnum_display":"LD1357.5 .C815",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\",\"Kroch Library Rare & Manuscripts (Request in advance)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Database"],
                "fulltitle_display":"Cornell clipfile database",
                "bibid":7851378,
                "callnum_display":"LD1357.5 .C815a",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library Reference (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Cornell University economic impact on New York State",
                "bibid":6015163,
                "callnum_display":"LD1357.5 .C816 2007",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\",\"ILR Library (Ives Hall)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Cornell University economic impact on New York State",
                "bibid":6015163,
                "callnum_display":"Rare Books LD1357.5 .C816 2007 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Cornell University economic impact on New York State :  executive summary",
                "bibid":9429670,
                "callnum_display":"Rare Books LD1357.5 .C8162 2007 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Annual report",
                "bibid":2798932,
                "callnum_display":"Oversize LD1357.5 .C817 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Annual report",
                "bibid":3954265,
                "callnum_display":"Oversize LD1357.5 .C817 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Cornell chronicle special report on the Board of Trustees' review   of Cornell's selective-divestment policy",
                "bibid":1553176,
                "callnum_display":"Oversize LD1357.5 .C82 1988 ++",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Annual statistical report",
                "bibid":2186877,
                "callnum_display":"Oversize LD1357.5 C83 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Directory of courses relating to urban problems taught at Cornell University",
                "bibid":5061225,
                "callnum_display":"LD1357.5 .D57",
                "availability_json":"{\"available\":true,\"availAt\":{\"Library Annex\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Discover the arts at Cornell",
                "bibid":4415039,
                "callnum_display":"LD1357.5 .D58 1998",
                "availability_json":"{\"available\":true,\"availAt\":{\"Olin Library\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Faculty handbook",
                "bibid":393914,
                "callnum_display":"Rare Books LD1357.5 .F14 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Faculty handbook",
                "bibid":393914,
                "callnum_display":"LD1357.5 .F14 +",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Request in advance)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true}]
          },
          "facet_counts":{
            "facet_queries":{
              "{!ex=mq}acquired_dt:[NOW-14DAY TO NOW-7DAY]":1587,
              "{!ex=mq}acquired_dt:[NOW-30DAY TO NOW-7DAY]":3026,
              "{!ex=mq}acquired_dt:[NOW-1YEAR TO NOW-7DAY]":121654},
            "facet_fields":{
              "online":[
                "At the Library",2789482,
                "Online",557131],
              "language_facet":[
                "English",2038305,
                "German",250888,
                "French",149789,
                "Spanish",131647,
                "Chinese",109378,
                "Russian",98610],
              "location":[
                "Adelson Library",10318,
                "Adelson Library > Macaulay Library",369,
                "Adelson Library > Main Collection",8953,
                "Adelson Library > Museum of Vertebrates",876,
                "Adelson Library > Reference",188,
                "Africana Library",8136,
                "Africana Library > Main Collection",7601,
                "Africana Library > New Books Shelf",74,
                "Africana Library > Reference",440,
                "Africana Library > Reserve",28,
                "Bailey Hortorium",13335,
                "Bailey Hortorium > Main Collection",9077,
                "Bailey Hortorium > Reference",4281,
                "CISER Data Archive",963,
                "Fine Arts Library",4461,
                "Fine Arts Library > Main Collection",3167,
                "Fine Arts Library > Reference",459,
                "Fine Arts Library > Reserve",846,
                "ILR Library",13272,
                "ILR Library > Main Collection",12901,
                "ILR Library > Reference",358,
                "ILR Library > Reserve",73,
                "ILR Library Kheel Center",2302,
                "ILR Library Kheel Center > Main Collection",2185,
                "ILR Library Kheel Center > Reference",119,
                "Kroch Library Asia",236321,
                "Kroch Library Asia > Main Collection",233503,
                "Kroch Library Asia > Reference",2985,
                "Kroch Library Asia > Reserve",3,
                "Kroch Library Rare & Manuscripts",176483,
                "Kroch Library Rare & Manuscripts > Main Collection",135520,
                "Kroch Library Rare & Manuscripts > Reference",759,
                "Kroch Library Rare & Manuscripts > Request in Advance",40361,
                "Law Library",6812,
                "Law Library > Main Collection",6121,
                "Law Library > Rare Books",14,
                "Law Library > Reference",79,
                "Law Library > Request in Advance",21,
                "Law Library > Reserve",584,
                "Library Annex",1176224,
                "Mann Library",115936,
                "Mann Library > Circulation",2,
                "Mann Library > Collection Development",17,
                "Mann Library > Curriculum Materials Collection",341,
                "Mann Library > Ellis Collection",584,
                "Mann Library > Main Collection",104691,
                "Mann Library > New Book Shelf",202,
                "Mann Library > Reference",214,
                "Mann Library > Reserve",32,
                "Mann Library > Special Collections",10048,
                "Mathematics Library",52759,
                "Mathematics Library > Circulation Desk",239,
                "Mathematics Library > Locked Press",1,
                "Mathematics Library > Main Collection",52391,
                "Mathematics Library > Reference",296,
                "Mathematics Library > Reserve",28,
                "Music Library",164146,
                "Music Library > A/V",30486,
                "Music Library > Circulation",3,
                "Music Library > Main Collection",122556,
                "Music Library > Reference",11409,
                "Music Library > Reserve",121,
                "Nestle Library",6,
                "Nestle Library > Reserve",6,
                "Olin Library",690207,
                "Olin Library > Circulation Desk",23,
                "Olin Library > Graduate Study Room 501",1479,
                "Olin Library > Main Collection",684790,
                "Olin Library > Map Storage",2,
                "Olin Library > Maps",128,
                "Olin Library > New & Noteworthy Books Shelf",650,
                "Olin Library > Preservation Department",496,
                "Olin Library > Reference",2077,
                "Olin Library > Reserve",41,
                "Olin Library > Room 305",1,
                "Olin Library > Room 604-605",1408,
                "Sage Hall Management Library",45,
                "Sage Hall Management Library > Reference",8,
                "Sage Hall Management Library > Reserve",37,
                "Space Sciences Building",1965,
                "Uris Library",147413,
                "Uris Library > Asia A/V",9200,
                "Uris Library > Asia A/V > China",2005,
                "Uris Library > Asia A/V > Japan",769,
                "Uris Library > Asia A/V > Korea",747,
                "Uris Library > Asia A/V > South Asia",1770,
                "Uris Library > Asia A/V > Southeast Asia",3199,
                "Uris Library > Circulation",8,
                "Uris Library > Main Collection",137190,
                "Uris Library > Reference",599,
                "Uris Library > Reserve",490,
                "Uris Library > Reserve Willis Room ",4,
                "Veterinary Library",8375,
                "Veterinary Library > Main Collection",8339,
                "Veterinary Library > Rare Books",2,
                "Veterinary Library > Reference",11,
                "Veterinary Library > Reserve ",25]},
            "facet_ranges":{},
            "facet_intervals":{},
            "facet_heatmaps":{}}}
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:45 GMT
- request:
    method: get
    uri: http://da-prod-solr.library.cornell.edu/solr/callnum/browse?q=%5B%22Archives%20ARP%201164a%22%20TO%20*%5D&start=0&wt=json
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - HTTPClient/1.0 (2.8.3, ruby 2.5.5 (2019-03-15))
      Accept:
      - "*/*"
      Date:
      - Fri, 19 Jul 2019 17:51:50 GMT
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 19 Jul 2019 17:51:50 GMT
      Last-Modified:
      - Fri, 19 Jul 2019 17:51:03 GMT
      Etag:
      - '"Nzk0MzdhYTAwMDAwMDAwMFNvbHI="'
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '12757'
      Via:
      - 1.1 da-prod-solr8.library.cornell.edu
      Vary:
      - Accept-Encoding
      Connection:
      - close
    body:
      encoding: UTF-8
      string: |
        {
          "responseHeader":{
            "zkConnected":true,
            "status":0,
            "QTime":1585,
            "params":{
              "q":"[\"Archives ARP 1164a\" TO *]",
              "start":"0",
              "wt":"json"}},
          "response":{"numFound":7020619,"start":0,"docs":[
              {
                "format":["Book"],
                "fulltitle_display":"Cornell research",
                "bibid":8338813,
                "callnum_display":"Archives ARP 1164a",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Corporate & foundation relations newsletter",
                "bibid":6057827,
                "callnum_display":"Archives ARP 1165",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Scope : a selection of applied research at Cornell University :  Summer 1979",
                "bibid":6057836,
                "callnum_display":"Archives ARP 1166",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"SCOPE : Scholarly communication, online publishing and education",
                "bibid":6057839,
                "callnum_display":"Archives ARP 1166b",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"CCRP record",
                "bibid":6057846,
                "callnum_display":"Archives ARP 1167",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The new intellectual",
                "bibid":6057847,
                "callnum_display":"Archives ARP 1168",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Cornell Chinese Student Club newsletter",
                "bibid":6057851,
                "callnum_display":"Archives ARP 1169",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The IFC standard",
                "bibid":6057857,
                "callnum_display":"Archives ARP 1170",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The spectator",
                "bibid":6057863,
                "callnum_display":"Archives ARP 1171",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The Ithaca call : a social democratic newsletter",
                "bibid":6057877,
                "callnum_display":"Archives ARP 1172",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"Communications engineering school : appreciation course",
                "bibid":6057915,
                "callnum_display":"Archives ARP 1173",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The School of Education, Cornell University : a project in the Cornell University Centennial Campaign for $73,2000,000",
                "bibid":6057924,
                "callnum_display":"Archives ARP 1174",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Budget",
                "bibid":6057931,
                "callnum_display":"Archives ARP 1175",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Operating budget, endowed Ithaca",
                "bibid":6065684,
                "callnum_display":"Archives ARP 1175",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"The Cornell worldly-wise",
                "bibid":2701937,
                "callnum_display":"Archives ARP 1176",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Internationally speaking",
                "bibid":1191043,
                "callnum_display":"Archives ARP 1177",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"Conference news",
                "bibid":6057971,
                "callnum_display":"Archives ARP 1178",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"As you were",
                "bibid":6057978,
                "callnum_display":"Archives ARP 1179",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Journal/Periodical"],
                "fulltitle_display":"The Feminist clearinghouse",
                "bibid":2196824,
                "callnum_display":"Archives ARP 1180",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true},
              {
                "format":["Book"],
                "fulltitle_display":"The register of ye hosts",
                "bibid":6057986,
                "callnum_display":"Archives ARP 1181",
                "availability_json":"{\"available\":true,\"availAt\":{\"Kroch Library Rare & Manuscripts (Non-Circulating)\":\"\"}}",
                "online":["At the Library"],
                "shelfloc":true}]
          },
          "facet_counts":{
            "facet_queries":{
              "{!ex=mq}acquired_dt:[NOW-14DAY TO NOW-7DAY]":3686,
              "{!ex=mq}acquired_dt:[NOW-30DAY TO NOW-7DAY]":7053,
              "{!ex=mq}acquired_dt:[NOW-1YEAR TO NOW-7DAY]":207177},
            "facet_fields":{
              "online":[
                "At the Library",5997440,
                "Online",1017648],
              "language_facet":[
                "English",4338317,
                "German",526473,
                "French",333336,
                "Spanish",289270,
                "Chinese",231867,
                "Russian",181921],
              "location":[
                "Adelson Library",10537,
                "Adelson Library > Macaulay Library",372,
                "Adelson Library > Main Collection",9110,
                "Adelson Library > Museum of Vertebrates",932,
                "Adelson Library > Reference",191,
                "Africana Library",24957,
                "Africana Library > Main Collection",23907,
                "Africana Library > New Books Shelf",306,
                "Africana Library > Reference",714,
                "Africana Library > Reserve",44,
                "Bailey Hortorium",13557,
                "Bailey Hortorium > Main Collection",9244,
                "Bailey Hortorium > Reference",4336,
                "CISER Data Archive",2432,
                "Fine Arts Library",4817,
                "Fine Arts Library > Artists' Books",55,
                "Fine Arts Library > Main Collection",3375,
                "Fine Arts Library > Reference",490,
                "Fine Arts Library > Reserve",909,
                "ILR Library",112346,
                "ILR Library > Labor Law Reference",95,
                "ILR Library > Main Collection",110775,
                "ILR Library > Reference",1465,
                "ILR Library > Reserve",258,
                "ILR Library Kheel Center",3937,
                "ILR Library Kheel Center > Main Collection",3580,
                "ILR Library Kheel Center > Reference",359,
                "Kroch Library Asia",599390,
                "Kroch Library Asia > Main Collection",594771,
                "Kroch Library Asia > Reference",4983,
                "Kroch Library Asia > Reserve",3,
                "Kroch Library Rare & Manuscripts",437020,
                "Kroch Library Rare & Manuscripts > Main Collection",245649,
                "Kroch Library Rare & Manuscripts > Reference",862,
                "Kroch Library Rare & Manuscripts > Request in Advance",190736,
                "Law Library",199619,
                "Law Library > Legal Aid Clinic",3,
                "Law Library > Main Collection",194488,
                "Law Library > Rare Books",1195,
                "Law Library > Reference",778,
                "Law Library > Request in Advance",1764,
                "Law Library > Reserve",1563,
                "Library Annex",2403565,
                "Mann Library",167545,
                "Mann Library > Circulation",3,
                "Mann Library > Collection Development",18,
                "Mann Library > Curriculum Materials Collection",514,
                "Mann Library > Ellis Collection",755,
                "Mann Library > Main Collection",154261,
                "Mann Library > New Book Shelf",387,
                "Mann Library > Reference",662,
                "Mann Library > Reserve",55,
                "Mann Library > Special Collections",11116,
                "Mathematics Library",53182,
                "Mathematics Library > Circulation Desk",243,
                "Mathematics Library > Locked Press",1,
                "Mathematics Library > Main Collection",52813,
                "Mathematics Library > Reference",297,
                "Mathematics Library > Reserve",28,
                "Music Library",204303,
                "Music Library > A/V",63904,
                "Music Library > Circulation",3,
                "Music Library > Main Collection",128215,
                "Music Library > Reference",12427,
                "Music Library > Reserve",212,
                "Nestle Library",11,
                "Nestle Library > Reserve",11,
                "Olin Library",1684909,
                "Olin Library > Circulation Desk",28,
                "Olin Library > DCAPS (106G Olin)",3,
                "Olin Library > Graduate Study Room 501",3021,
                "Olin Library > Main Collection",1629535,
                "Olin Library > Map Storage",8220,
                "Olin Library > Maps",37837,
                "Olin Library > New & Noteworthy Books Shelf",906,
                "Olin Library > Preservation Department",550,
                "Olin Library > Reference",4434,
                "Olin Library > Reserve",88,
                "Olin Library > Room 305",1,
                "Olin Library > Room 404",2,
                "Olin Library > Room 604-605",1549,
                "Sage Hall Management Library",308,
                "Sage Hall Management Library > Reference",54,
                "Sage Hall Management Library > Reserve",254,
                "Space Sciences Building",2006,
                "Uris Library",152587,
                "Uris Library > Asia A/V",9246,
                "Uris Library > Asia A/V > China",2005,
                "Uris Library > Asia A/V > Japan",769,
                "Uris Library > Asia A/V > Korea",747,
                "Uris Library > Asia A/V > South Asia",1770,
                "Uris Library > Asia A/V > Southeast Asia",3199,
                "Uris Library > Circulation",8,
                "Uris Library > Main Collection",142095,
                "Uris Library > Reference",694,
                "Uris Library > Reserve",619,
                "Uris Library > Reserve Willis Room ",4,
                "Veterinary Library",8761,
                "Veterinary Library > Main Collection",8720,
                "Veterinary Library > Rare Books",2,
                "Veterinary Library > Reference",13,
                "Veterinary Library > Reserve ",28]},
            "facet_ranges":{},
            "facet_intervals":{},
            "facet_heatmaps":{}}}
    http_version: 
  recorded_at: Fri, 19 Jul 2019 17:51:52 GMT
recorded_with: VCR 4.0.0
